!function(e,t,n,o){"use strict";function i(t,n){this.element=t,this.page=e(t).find(".page"),this.options=e.extend({},r,n),this._defaults=r,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",r={by:"continuous",speed:"medium",pause:5,click:!1,minimumMovement:3};i.prototype={init:function(){function t(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(r),TweenLite.killDelayedCallsTo(a)}var n,i,s=this,r=null,a=null,l=e(this.element).outerHeight(!0),c=l,u=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){c=e(s.element).scrollTop()+l,s.tween.progress(e(s.element).scrollTop()/u).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,i=this.page.outerHeight(!0)/e(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,i=Math.abs((this.page.outerHeight(!0)-e(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){t()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(t(),e(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,i,{scrollTop:u,ease:Linear.easeNone,delay:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=c&&(s.tween.pause(),c+=l,TweenLite.delayedCall(s.options.pause,a=function(){s.tween.resume()}))}:o,onComplete:function(){TweenLite.delayedCall(s.options.pause,r=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(c=l),e(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){e(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>e(this.element).height()},destroy:function(){e(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},i.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall(this.options.pause,this.calculateProgress)))},i.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},i.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},e.fn.autoScroll=function(t){return this.each(function(){e.data(this,"plugin_"+s)||e.data(this,"plugin_"+s,new i(this,t))})}}(jQuery,window,document);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function e(e,t){var n="font-family: "+decodeURIComponent(t.font.family).replace(/'/g,"")+"; ",o="color: "+(t.color?t.color:t.forecolor)+"; ",i="font-size: "+(-1===t.size.indexOf("px")?t.size+"px; ":t.size+"; "),s="font-weight: "+(t.bold?"bold":"normal")+"; ",r="font-style: "+(t.italic?"italic":"normal")+"; ",a="text-decoration: "+(t.underline?"underline":"none")+"; ",l="background-color: "+(t.highlightColor?t.highlightColor:t.backcolor)+";";return"."+e+" {"+n+o+i+s+r+a+l+"}"}function t(e){for(var t=document.createElement("style"),n=0,o=e.length;o>n;n++)t.appendChild(document.createTextNode(e[n]));document.head.appendChild(t)}function n(n,s){function r(){s&&"function"==typeof s&&s()}function a(){r()}var l=null,c=[],u=[],p=[];if(!n||0===n.length)return r(),void 0;n.forEach(function(n){n.class&&n.fontStyle&&t([e(n.class,n.fontStyle)])});for(var g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"google"===n[g].fontStyle.font.type&&(l=n[g].fontStyle.font.family.split(",")[0],l=l.replace(/'/g,""),c.push(l));for(g=0;g<n.length;g++)n[g].fontStyle&&n[g].fontStyle.font.type&&"custom"===n[g].fontStyle.font.type&&(u.push(decodeURIComponent(n[g].fontStyle.font.family).replace(/'/g,"")),p.push(n[g].fontStyle.font.url.replace(/'/g,"\\'")));if(0===c.length&&0===u.length)r();else{for(var d=0;d<u.length;d+=1)o(u[d],p[d]);c.length>0?i(c,a):r()}}function o(e,t,n){var o=null,i="font-family: "+e+"; src: url('"+t+"');";n=n||document,o=n.styleSheets[0],null!==o&&o.addRule("@font-face",i)}function i(e,t){WebFont.load({google:{families:e},active:function(){t&&"function"==typeof t&&t()},inactive:function(){t&&"function"==typeof t&&t()},timeout:2e3})}function s(e){var t=document.createElement("script");t.src=e,document.body.appendChild(t)}function r(e){for(var t=e.length,n=[],o=0;t>o;o++)n[o]=new Image,n[o].src=e[o]}function a(e){return l(e,window.location.search.substring(1))}function l(e,t){for(var n,o=t.split("&"),i=0;i<o.length;i++)if(n=o[i].split("="),n[0]==e)return decodeURIComponent(n[1]);return""}function c(e){var t=/(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})/,n=t.exec(e);return n?new Date(+n[1],+n[2]-1,+n[3],+n[4],+n[5]):void 0}function u(e){var t="";switch(e){case 404:t="The file does not exist or cannot be accessed.";break;case 507:t="There is not enough disk space to save the file on Rise Cache.";break;default:t="There was a problem retrieving the file from Rise Cache."}return t}function p(e){var t=document.createElement("div");return t.innerHTML=e,t.textContent}function g(e,t){var n=new XMLHttpRequest;if(e&&t&&"function"==typeof t){n.open("HEAD",e+"?cb="+(new Date).getTime(),!1);try{n.send(),t(n.status>=200&&n.status<304)}catch(o){t(!1)}}}function d(){var e=25,t=navigator.userAgent.match(/Chrome\/(\S+)/),n=t?t[1]:0;return n&&(n=parseInt(n.substring(0,n.indexOf("."))),e>=n)?!0:!1}function f(e,t){return/^(?:f|ht)tps?\:\/\//.test(e)||(e=(t?"https://":"http://")+e),e}return{addProtocol:f,getQueryParameter:a,getQueryStringParameter:l,getFontCssStyle:e,addCSSRules:t,loadFonts:n,loadCustomFont:o,loadGoogleFonts:i,loadScript:s,preloadImages:r,getRiseCacheErrorMessage:u,unescapeHTML:p,hasInternetConnection:g,isLegacy:d,getDateObjectFromPlayerVersionString:c}}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function e(e,t){var o=null;e.event?(o=e,o.file_url&&(o.file_format=n(o.file_url)),o.company_id=c,o.display_id=l,u&&(o.version=u),t(o)):t(o)}function t(){var e=new Date,t=e.getUTCFullYear(),n=e.getUTCMonth()+1,o=e.getUTCDate();return 10>n&&(n="0"+n),10>o&&(o="0"+o),""+t+n+o}function n(e){var t,n=/[?#&]/;return e&&"string"==typeof e?(t=e.substr(e.lastIndexOf(".")+1),n.test(t)&&(t=t.substr(0,-1!==t.indexOf("?")?t.indexOf("?"):t.length),t=t.substr(0,-1!==t.indexOf("#")?t.indexOf("#"):t.length),t=t.substr(0,-1!==t.indexOf("&")?t.indexOf("&"):t.length)),t.toLowerCase()):null}function o(e){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:t(),rows:[{insertId:""}]},o=JSON.parse(JSON.stringify(n));return o.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),o.rows[0].json=JSON.parse(JSON.stringify(e)),o.rows[0].json.ts=(new Date).toISOString(),o}function i(t,n){e(n,function(e){null!==e&&RiseVision.Common.Logger.log(t,e)})}function s(e,n){try{top.postToPlayer({message:"widget-log",table:e,params:JSON.stringify(n),suffix:t()})}catch(o){console.log("widget-common.logEventToPlayer",o)}}function r(e,t){c=e,l=t}function a(e){u=e}var l="",c="",u=null;return{getInsertData:o,getFileFormat:n,logEvent:i,logEventToPlayer:s,setIds:r,setVersion:a}}(),RiseVision.Common.Logger=function(e){"use strict";function t(e){var t=new XMLHttpRequest;return new Date-c<358e4?e({}):(t.open("POST",i,!0),t.onloadend=function(){var n={};try{n=JSON.parse(t.response)}catch(o){console.warn("Can't refresh logger token - ",o.message)}e({token:n.access_token,refreshedAt:new Date})},t.send(),void 0)}function n(e){return r&&l===e}function o(o,i){function p(t){var n,r,a=new XMLHttpRequest;r=s.replace("TABLE_ID",o),c=t.refreshedAt||c,u=t.token||u,n=e.getInsertData(i),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+u),i.cb&&"function"==typeof i.cb&&(a.onloadend=function(){i.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!o||!i||i.hasOwnProperty("event")&&!i.event||i.hasOwnProperty("event")&&n(i.event))&&i.display_id&&"preview"!==i.display_id&&"display_id"!==i.display_id&&"displayId"!==i.display_id){try{if(top.postToPlayer&&top.enableWidgetLogging)return e.logEventToPlayer(o,i)}catch(g){console.log("widget-common: logger",g)}return r=!0,l=i.event,setTimeout(function(){r=!1},a),t(p)}}var i="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",c=0,u="";return{log:o}}(RiseVision.Common.LoggerUtils);var _gaq=_gaq||[];_gaq.push(["_setAccount","UA-57092159-13"]),_gaq.push(["_trackPageview"]),function(){var e=document.createElement("script");e.type="text/javascript",e.async=!0,e.src=("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js";var t=document.getElementsByTagName("script")[0];t.parentNode.insertBefore(e,t)}();var RiseVision=RiseVision||{};RiseVision.Text={},RiseVision.Text=function(e,t){"use strict";function n(e,n){function o(){n&&"function"==typeof n&&n()}Array.isArray(e)&&e.length>0?t.load({google:{families:e},timeout:2e3,active:function(){o()},inactive:function(){console.warn("No google fonts were loaded"),o()},fontinactive:function(e){s({event:"error",event_details:"Google font not loaded",error_details:e})}}):o()}function o(){document.querySelector(".page").innerHTML=g.data,n(g.googleFonts,function(){$.each(g.customFonts.fonts,function(e,t){f.loadCustomFont(t.family.replace(/'/g,""),t.url.replace(/'/g,"\\'"))}),$("#container").autoScroll(g.scroll).on("done",function(){a()}),r()})}function i(){return"text_events"}function s(e){RiseVision.Common.LoggerUtils.logEvent(i(),e)}function r(){e.rpc.call("","rsevent_ready",null,d.getString("id"),!0,!0,!0,!0,!0)}function a(){e.rpc.call("","rsevent_done",null,d.getString("id")),s({event:"done"})}function l(e){g=JSON.parse(JSON.stringify(e)),g.width=d.getInt("rsW"),g.height=d.getInt("rsH"),document.getElementById("container").style.width=g.width+"px",document.getElementById("container").style.height=g.height+"px",o()}function c(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").play(),s({event:"play"})}function u(){$("#container").data("plugin_autoScroll")&&$("#container").data("plugin_autoScroll").pause()}function p(){u()}var g=null,d=new e.Prefs,f=RiseVision.Common.Utilities;return{pause:u,play:c,setAdditionalParams:l,stop:p}}(gadgets,WebFont),function(e,t){"use strict";function n(e,t){var n,o="",i="";Array.isArray(e)&&e.length>0&&Array.isArray(t)&&t.length>0&&("companyId"===e[0]&&(o=t[0]),"displayId"===e[1]&&(i=t[1]?t[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(o,i),"additionalParams"===e[2]&&(n=JSON.parse(t[2]),RiseVision.Text.setAdditionalParams(n)))}function o(){RiseVision.Text.play()}function i(){RiseVision.Text.pause()}function s(){RiseVision.Text.stop()}var r=new t.Prefs,a=r.getString("id");e.oncontextmenu=function(){return!1},document.body.onmousedown=function(){return!1},a&&""!==a&&(t.rpc.register("rscmd_play_"+a,o),t.rpc.register("rscmd_pause_"+a,i),t.rpc.register("rscmd_stop_"+a,s),t.rpc.register("rsparam_set_"+a,n),t.rpc.call("","rsparam_get",null,a,["companyId","displayId","additionalParams"]))}(window,gadgets);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwiUGx1Z2luIiwiZWxlbWVudCIsIm9wdGlvbnMiLCJ0aGlzIiwicGFnZSIsImZpbmQiLCJleHRlbmQiLCJkZWZhdWx0cyIsIl9kZWZhdWx0cyIsIl9uYW1lIiwicGx1Z2luTmFtZSIsImlzTG9hZGluZyIsImRyYWdnYWJsZSIsInR3ZWVuIiwiY2FsY3VsYXRlUHJvZ3Jlc3MiLCJpbml0IiwiYnkiLCJzcGVlZCIsInBhdXNlIiwiY2xpY2siLCJtaW5pbXVtTW92ZW1lbnQiLCJwcm90b3R5cGUiLCJwYXVzZVR3ZWVuIiwic2VsZiIsIlR3ZWVuTGl0ZSIsImtpbGxEZWxheWVkQ2FsbHNUbyIsInNjcm9sbENvbXBsZXRlIiwicGFnZUNvbXBsZXRlIiwiZHVyYXRpb24iLCJlbGVtZW50SGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJwYXVzZUhlaWdodCIsIm1heCIsInNjcm9sbEhlaWdodCIsIm9mZnNldEhlaWdodCIsInNjcm9sbFRvcCIsInByb2dyZXNzIiwicGxheSIsImNhblNjcm9sbCIsIk1hdGgiLCJhYnMiLCJEcmFnZ2FibGUiLCJjcmVhdGUiLCJ0eXBlIiwidGhyb3dQcm9wcyIsImVkZ2VSZXNpc3RhbmNlIiwib25QcmVzcyIsIm9uUmVsZWFzZSIsImRlbGF5ZWRDYWxsIiwib25DbGljayIsInRyaWdnZXIiLCJwb2ludGVyRXZlbnQiLCJnZXQiLCJ0byIsInNjcm9sbFByb3h5IiwiZWFzZSIsIkxpbmVhciIsImVhc2VOb25lIiwiZGVsYXkiLCJwYXVzZWQiLCJvblVwZGF0ZSIsInRvcCIsInJlc3VtZSIsIm9uQ29tcGxldGUiLCJhdXRvQWxwaGEiLCJzZWVrIiwic2V0Iiwib3ZlcmZsb3dZIiwiaGVpZ2h0IiwiZGVzdHJveSIsInJlbW92ZURhdGEiLCJraWxsIiwic3RvcCIsImZuIiwiYXV0b1Njcm9sbCIsImVhY2giLCJkYXRhIiwialF1ZXJ5IiwiV0lER0VUX0NPTU1PTl9DT05GSUciLCJBVVRIX1BBVEhfVVJMIiwiTE9HR0VSX0NMSUVOVF9JRCIsIkxPR0dFUl9DTElFTlRfU0VDUkVUIiwiTE9HR0VSX1JFRlJFU0hfVE9LRU4iLCJTVE9SRV9VUkwiLCJSaXNlVmlzaW9uIiwiQ29tbW9uIiwiVXRpbGl0aWVzIiwiZ2V0Rm9udENzc1N0eWxlIiwiY2xhc3NOYW1lIiwiZm9udE9iaiIsImZhbWlseSIsImRlY29kZVVSSUNvbXBvbmVudCIsImZvbnQiLCJyZXBsYWNlIiwiY29sb3IiLCJmb3JlY29sb3IiLCJzaXplIiwiaW5kZXhPZiIsIndlaWdodCIsImJvbGQiLCJpdGFsaWMiLCJ1bmRlcmxpbmUiLCJoaWdobGlnaHQiLCJoaWdobGlnaHRDb2xvciIsImJhY2tjb2xvciIsImFkZENTU1J1bGVzIiwicnVsZXMiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJpIiwibGVuZ3RoIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsImhlYWQiLCJsb2FkRm9udHMiLCJzZXR0aW5ncyIsImNiIiwiY2FsbGJhY2siLCJvbkdvb2dsZUZvbnRzTG9hZGVkIiwiZmFtaWxpZXMiLCJnb29nbGVGYW1pbGllcyIsImN1c3RvbUZhbWlsaWVzIiwiY3VzdG9tVXJscyIsImZvckVhY2giLCJpdGVtIiwiY2xhc3MiLCJmb250U3R5bGUiLCJzcGxpdCIsInB1c2giLCJ1cmwiLCJqIiwibG9hZEN1c3RvbUZvbnQiLCJsb2FkR29vZ2xlRm9udHMiLCJjb250ZW50RG9jIiwic2hlZXQiLCJydWxlIiwic3R5bGVTaGVldHMiLCJhZGRSdWxlIiwiV2ViRm9udCIsImxvYWQiLCJnb29nbGUiLCJhY3RpdmUiLCJpbmFjdGl2ZSIsInRpbWVvdXQiLCJsb2FkU2NyaXB0Iiwic3JjIiwic2NyaXB0IiwiYm9keSIsInByZWxvYWRJbWFnZXMiLCJ1cmxzIiwiaW1hZ2VzIiwiSW1hZ2UiLCJnZXRRdWVyeVBhcmFtZXRlciIsInBhcmFtIiwiZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXIiLCJsb2NhdGlvbiIsInNlYXJjaCIsInN1YnN0cmluZyIsInF1ZXJ5IiwicGFpciIsInZhcnMiLCJnZXREYXRlT2JqZWN0RnJvbVBsYXllclZlcnNpb25TdHJpbmciLCJwbGF5ZXJWZXJzaW9uIiwicmVnZ2llIiwiZGF0ZUFycmF5IiwiZXhlYyIsIkRhdGUiLCJnZXRSaXNlQ2FjaGVFcnJvck1lc3NhZ2UiLCJzdGF0dXNDb2RlIiwiZXJyb3JNZXNzYWdlIiwidW5lc2NhcGVIVE1MIiwiaHRtbCIsImRpdiIsImlubmVySFRNTCIsInRleHRDb250ZW50IiwiaGFzSW50ZXJuZXRDb25uZWN0aW9uIiwiZmlsZVBhdGgiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJnZXRUaW1lIiwic2VuZCIsInN0YXR1cyIsImUiLCJpc0xlZ2FjeSIsImxlZ2FjeVZlcnNpb24iLCJtYXRjaCIsIm5hdmlnYXRvciIsInVzZXJBZ2VudCIsInZlcnNpb24iLCJwYXJzZUludCIsImFkZFByb3RvY29sIiwic2VjdXJlIiwidGVzdCIsIkxvZ2dlclV0aWxzIiwiZ2V0RXZlbnRQYXJhbXMiLCJwYXJhbXMiLCJqc29uIiwiZXZlbnQiLCJmaWxlX3VybCIsImZpbGVfZm9ybWF0IiwiZ2V0RmlsZUZvcm1hdCIsImNvbXBhbnlfaWQiLCJjb21wYW55SWQiLCJkaXNwbGF5X2lkIiwiZGlzcGxheUlkIiwiZ2V0U3VmZml4IiwiZGF0ZSIsInllYXIiLCJnZXRVVENGdWxsWWVhciIsIm1vbnRoIiwiZ2V0VVRDTW9udGgiLCJkYXkiLCJnZXRVVENEYXRlIiwic3RyIiwiaGFzUGFyYW1zIiwic3Vic3RyIiwibGFzdEluZGV4T2YiLCJ0b0xvd2VyQ2FzZSIsImdldEluc2VydERhdGEiLCJCQVNFX0lOU0VSVF9TQ0hFTUEiLCJraW5kIiwic2tpcEludmFsaWRSb3dzIiwiaWdub3JlVW5rbm93blZhbHVlcyIsInRlbXBsYXRlU3VmZml4Iiwicm93cyIsImluc2VydElkIiwiSlNPTiIsInBhcnNlIiwic3RyaW5naWZ5IiwicmFuZG9tIiwidG9TdHJpbmciLCJ0b1VwcGVyQ2FzZSIsInRzIiwidG9JU09TdHJpbmciLCJsb2dFdmVudCIsInRhYmxlIiwiTG9nZ2VyIiwibG9nIiwibG9nRXZlbnRUb1BsYXllciIsInBvc3RUb1BsYXllciIsIm1lc3NhZ2UiLCJzdWZmaXgiLCJlcnIiLCJjb25zb2xlIiwic2V0SWRzIiwiY29tcGFueSIsImRpc3BsYXkiLCJzZXRWZXJzaW9uIiwidmFsdWUiLCJ1dGlscyIsInJlZnJlc2hUb2tlbiIsInJlZnJlc2hEYXRlIiwiUkVGUkVTSF9VUkwiLCJvbmxvYWRlbmQiLCJyZXNwIiwicmVzcG9uc2UiLCJ3YXJuIiwidG9rZW4iLCJhY2Nlc3NfdG9rZW4iLCJyZWZyZXNoZWRBdCIsImlzVGhyb3R0bGVkIiwidGhyb3R0bGUiLCJsYXN0RXZlbnQiLCJ0YWJsZU5hbWUiLCJpbnNlcnRXaXRoVG9rZW4iLCJyZWZyZXNoRGF0YSIsImluc2VydERhdGEiLCJzZXJ2aWNlVXJsIiwic2V0UmVxdWVzdEhlYWRlciIsImhhc093blByb3BlcnR5IiwiZW5hYmxlV2lkZ2V0TG9nZ2luZyIsInNldFRpbWVvdXQiLCJ0aHJvdHRsZURlbGF5IiwiX2dhcSIsImdhIiwiYXN5bmMiLCJwcm90b2NvbCIsInMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInBhcmVudE5vZGUiLCJpbnNlcnRCZWZvcmUiLCJUZXh0IiwiZ2FkZ2V0cyIsIl9sb2FkR29vZ2xlRm9udHMiLCJmb250cyIsImNvbXBsZXRlIiwiQXJyYXkiLCJpc0FycmF5IiwiZm9udGluYWN0aXZlIiwiZmFtaWx5TmFtZSIsIl9sb2dFdmVudCIsImV2ZW50X2RldGFpbHMiLCJlcnJvcl9kZXRhaWxzIiwiX2luaXQiLCJxdWVyeVNlbGVjdG9yIiwiX2FkZGl0aW9uYWxQYXJhbXMiLCJnb29nbGVGb250cyIsImN1c3RvbUZvbnRzIiwiaW5kZXgiLCJfdXRpbHMiLCJzY3JvbGwiLCJvbiIsIl9kb25lIiwiX3JlYWR5IiwiX2dldFRhYmxlTmFtZSIsInJwYyIsImNhbGwiLCJfcHJlZnMiLCJnZXRTdHJpbmciLCJzZXRBZGRpdGlvbmFsUGFyYW1zIiwiYWRkaXRpb25hbFBhcmFtcyIsIndpZHRoIiwiZ2V0SW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJQcmVmcyIsImNvbmZpZ3VyZSIsIm5hbWVzIiwidmFsdWVzIiwicHJlZnMiLCJpZCIsIm9uY29udGV4dG1lbnUiLCJvbm1vdXNlZG93biIsInJlZ2lzdGVyIl0sIm1hcHBpbmdzIjoiQ0FPQyxTQUFXQSxFQUFHQyxFQUFRQyxFQUFVQyxHQUNoQyxZQVlBLFNBQVNDLEdBQU9DLEVBQVNDLEdBQ3hCQyxLQUFLRixRQUFVQSxFQUNmRSxLQUFLQyxLQUFPUixFQUFFSyxHQUFTSSxLQUFLLFNBQzVCRixLQUFLRCxRQUFVTixFQUFFVSxVQUFXQyxFQUFVTCxHQUN0Q0MsS0FBS0ssVUFBWUQsRUFDakJKLEtBQUtNLE1BQVFDLEVBQ2JQLEtBQUtRLFdBQVksRUFDakJSLEtBQUtTLFVBQVksS0FDakJULEtBQUtVLE1BQVEsS0FDYlYsS0FBS1csa0JBQW9CLEtBQ3pCWCxLQUFLWSxPQXBCTixHQUFJTCxHQUFhLGFBQ2hCSCxHQUNDUyxHQUFJLGFBQ0pDLE1BQU8sU0FDUEMsTUFBTyxFQUNQQyxPQUFPLEVBQ1BDLGdCQUFpQixFQWlCbkJwQixHQUFPcUIsV0FDTk4sS0FBTSxXQVNMLFFBQVNPLEtBQ1JDLEVBQUtWLE1BQU1LLFFBRVhNLFVBQVVDLG1CQUFtQkYsRUFBS1QsbUJBQ2xDVSxVQUFVQyxtQkFBbUJDLEdBRTdCRixVQUFVQyxtQkFBbUJFLEdBZDlCLEdBQUlWLEdBQU9XLEVBQ1BMLEVBQU9wQixLQUNQdUIsRUFBaUIsS0FDakJDLEVBQWUsS0FDZkUsRUFBZ0JqQyxFQUFFTyxLQUFLRixTQUFTNkIsYUFBWSxHQUM1Q0MsRUFBY0YsRUFDZEcsRUFBTTdCLEtBQUtGLFFBQVFnQyxhQUFlOUIsS0FBS0YsUUFBUWlDLFlBV25EL0IsTUFBS1csa0JBQW9CLFdBRXhCaUIsRUFBY25DLEVBQUUyQixFQUFLdEIsU0FBU2tDLFlBQzdCTixFQUVETixFQUFLVixNQUFNdUIsU0FBU3hDLEVBQUUyQixFQUFLdEIsU0FBU2tDLFlBQWNILEdBQ2hESyxRQUdDbEMsS0FBS21DLGFBRWdCLFNBQXBCbkMsS0FBS0QsUUFBUWMsSUFFZkMsRUFEMEIsWUFBdkJkLEtBQUtELFFBQVFlLE1BQ1IsR0FFdUIsU0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsR0FFdUIsV0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsSUFFdUIsU0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsSUFHQSxFQUdUVyxFQUFXekIsS0FBS0MsS0FBSzBCLGFBQVksR0FDaENsQyxFQUFFTyxLQUFLRixTQUFTNkIsYUFBWSxHQUFRYixJQUlwQ0EsRUFEMEIsWUFBdkJkLEtBQUtELFFBQVFlLE1BQ1IsR0FFdUIsU0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsR0FFdUIsV0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsR0FFdUIsU0FBdkJkLEtBQUtELFFBQVFlLE1BQ2IsR0FHQSxHQUdUVyxFQUFXVyxLQUFLQyxLQUFLckMsS0FBS0MsS0FBSzBCLGFBQVksR0FDMUNsQyxFQUFFTyxLQUFLRixTQUFTNkIsYUFBWSxJQUFTYixJQUd2Q3dCLFVBQVVDLE9BQU92QyxLQUFLRixTQUNyQjBDLEtBQU0sWUFDTkMsWUFBWSxFQUNaQyxlQUFnQixJQUNoQnpCLGdCQUFpQkcsRUFBS3JCLFFBQVFrQixnQkFDOUIwQixRQUFTLFdBQ1J4QixLQUVEeUIsVUFBVyxXQUNjLFNBQXBCeEIsRUFBS3JCLFFBQVFjLElBS2hCUSxVQUFVd0IsWUFBWXpCLEVBQUtyQixRQUFRZ0IsTUFBT0ssRUFBS1Qsb0JBR2pEbUMsUUFBUyxXQUNKMUIsRUFBS3JCLFFBQVFpQixRQUNoQkcsSUFDQTFCLEVBQUUyQixFQUFLdEIsU0FBU2lELFFBQVEsZUFBZ0IvQyxLQUFLZ0QsbUJBS2hEaEQsS0FBS1MsVUFBWTZCLFVBQVVXLElBQUlqRCxLQUFLRixTQUVwQ0UsS0FBS1UsTUFBUVcsVUFBVTZCLEdBQUdsRCxLQUFLUyxVQUFVMEMsWUFBYTFCLEdBQ3JETyxVQUFXSCxFQUNYdUIsS0FBTUMsT0FBT0MsU0FDYkMsTUFBT3ZELEtBQUtELFFBQVFnQixNQUNwQnlDLFFBQVEsRUFDUkMsU0FBK0IsU0FBcEJ6RCxLQUFLRCxRQUFRYyxHQUFnQixXQUNuQ3VCLEtBQUtDLElBQUlqQixFQUFLWCxVQUFVMEMsWUFBWU8sUUFBVTlCLElBQ2pEUixFQUFLVixNQUFNSyxRQUdYYSxHQUFlRixFQUVmTCxVQUFVd0IsWUFBWXpCLEVBQUtyQixRQUFRZ0IsTUFDbENTLEVBQWUsV0FDZEosRUFBS1YsTUFBTWlELGFBSVgvRCxFQUNKZ0UsV0FBWSxXQUNYdkMsVUFBVXdCLFlBQVl6QixFQUFLckIsUUFBUWdCLE1BQ2xDUSxFQUFpQixXQUNoQkYsVUFBVTZCLEdBQUc5QixFQUFLbkIsS0FBTSxHQUN2QjRELFVBQVcsRUFDWEQsV0FBWSxXQUNYeEMsRUFBS1YsTUFBTW9ELEtBQUssR0FBRy9DLFFBRUssU0FBcEJLLEVBQUtyQixRQUFRYyxLQUNoQmUsRUFBY0YsR0FHZmpDLEVBQUUyQixFQUFLdEIsU0FBU2lELFFBQVEsZ0JBUzlCMUIsVUFBVTBDLElBQUkvRCxLQUFLRixTQUFXa0UsVUFBVyxZQUVyQ2hFLEtBQUtELFFBQVFpQixRQUdoQnNCLFVBQVVDLE9BQU92QyxLQUFLRixTQUNyQjBDLEtBQU0sWUFDTkMsWUFBWSxFQUNaQyxlQUFnQixJQUNoQnpCLGdCQUFpQmpCLEtBQUtELFFBQVFrQixnQkFDOUI2QixRQUFTLFdBQ1JyRCxFQUFFMkIsRUFBS3RCLFNBQVNpRCxRQUFRLGVBQWdCL0MsS0FBS2dELGtCQUkvQ2hELEtBQUtTLFVBQVk2QixVQUFVVyxJQUFJakQsS0FBS0YsV0FLdkNxQyxVQUFXLFdBQ1YsTUFBT25DLE1BQUtELFNBQVlDLEtBQUtDLEtBQUtnRSxTQUFXeEUsRUFBRU8sS0FBS0YsU0FBU21FLFVBRTlEQyxRQUFTLFdBQ1J6RSxFQUFFTyxLQUFLRixTQUFTcUUsYUFDWm5FLEtBQUtVLE9BQ1JWLEtBQUtVLE1BQU0wRCxPQUdScEUsS0FBS1MsV0FDUlQsS0FBS1MsVUFBVTJELE9BSWhCcEUsS0FBS0YsUUFBVSxLQUNmRSxLQUFLQyxLQUFPLEtBQ1pELEtBQUtELFFBQVUsS0FDZkMsS0FBS0ssVUFBWSxLQUNqQkwsS0FBS1MsVUFBWSxLQUNqQlQsS0FBS1UsTUFBUSxLQUNiVixLQUFLVyxrQkFBb0IsT0FJM0JkLEVBQU9xQixVQUFVZ0IsS0FBTyxXQUNuQmxDLEtBQUttQyxhQUFtQyxTQUFwQm5DLEtBQUtELFFBQVFjLElBQ2hDYixLQUFLVSxRQUNKVixLQUFLUSxXQUNSUixLQUFLVSxNQUFNd0IsT0FDWGxDLEtBQUtRLFdBQVksSUFHakJhLFVBQVU2QixHQUFHbEQsS0FBS0MsS0FBTSxHQUFJNEQsVUFBVyxJQUN2Q3hDLFVBQVV3QixZQUFZN0MsS0FBS0QsUUFBUWdCLE1BQU9mLEtBQUtXLHNCQU1uRGQsRUFBT3FCLFVBQVVILE1BQVEsV0FDcEJmLEtBQUtVLFFBQ1JXLFVBQVVDLG1CQUFtQnRCLEtBQUtXLG1CQUNsQ1gsS0FBS1UsTUFBTUssVUFJYmxCLEVBQU9xQixVQUFVbUQsS0FBTyxXQUNuQnJFLEtBQUtVLFFBQ1JXLFVBQVVDLG1CQUFtQnRCLEtBQUtXLG1CQUNsQ1gsS0FBS1UsTUFBTTBELFFBR1pwRSxLQUFLRixRQUFVLEtBQ2ZFLEtBQUtDLEtBQU8sTUFLYlIsRUFBRTZFLEdBQUdDLFdBQWEsU0FBU3hFLEdBQzFCLE1BQU9DLE1BQUt3RSxLQUFLLFdBQ1gvRSxFQUFFZ0YsS0FBS3pFLEtBQU0sVUFBWU8sSUFDN0JkLEVBQUVnRixLQUFLekUsS0FBTSxVQUFZTyxFQUFZLEdBQUlWLEdBQU9HLEtBQU1ELFFBSXZEMkUsT0FBUWhGLE9BQVFDLFNBR25CLElBQUlnRix1QkFDRkMsY0FBZSxpQkFDZkMsaUJBQWtCLDRFQUNsQkMscUJBQXNCLDJCQUN0QkMscUJBQXNCLHFFQUN0QkMsVUFBVyw2Q0FJVEMsV0FBYUEsY0FFakJBLFlBQVdDLE9BQVNELFdBQVdDLFdBRS9CRCxXQUFXQyxPQUFPQyxVQUFZLFdBRTVCLFFBQVNDLEdBQWdCQyxFQUFXQyxHQUNsQyxHQUFJQyxHQUFTLGdCQUFrQkMsbUJBQW1CRixFQUFRRyxLQUFLRixRQUFRRyxRQUFRLEtBQU0sSUFBTSxLQUN2RkMsRUFBUSxXQUFhTCxFQUFRSyxNQUFRTCxFQUFRSyxNQUFRTCxFQUFRTSxXQUFhLEtBQzFFQyxFQUFPLGVBQWdELEtBQS9CUCxFQUFRTyxLQUFLQyxRQUFRLE1BQWVSLEVBQVFPLEtBQU8sT0FBU1AsRUFBUU8sS0FBTyxNQUNuR0UsRUFBUyxpQkFBbUJULEVBQVFVLEtBQU8sT0FBUyxVQUFZLEtBQ2hFQyxFQUFTLGdCQUFrQlgsRUFBUVcsT0FBUyxTQUFXLFVBQVksS0FDbkVDLEVBQVkscUJBQXVCWixFQUFRWSxVQUFZLFlBQWMsUUFBVSxLQUMvRUMsRUFBWSxzQkFBd0JiLEVBQVFjLGVBQWlCZCxFQUFRYyxlQUFpQmQsRUFBUWUsV0FBYSxHQUUvRyxPQUFPLElBQU1oQixFQUFZLEtBQU9FLEVBQVNJLEVBQVFFLEVBQU9FLEVBQVNFLEVBQVNDLEVBQVlDLEVBQVksSUFHcEcsUUFBU0csR0FBWUMsR0FHbkIsSUFBSyxHQUZEQyxHQUFRN0csU0FBUzhHLGNBQWMsU0FFMUJDLEVBQUksRUFBR0MsRUFBU0osRUFBTUksT0FBWUEsRUFBSkQsRUFBWUEsSUFDakRGLEVBQU1JLFlBQVlqSCxTQUFTa0gsZUFBZU4sRUFBTUcsSUFHbEQvRyxVQUFTbUgsS0FBS0YsWUFBWUosR0E4QjVCLFFBQVNPLEdBQVVDLEVBQVVDLEdBTTNCLFFBQVNDLEtBQ0hELEdBQW9CLGtCQUFQQSxJQUNmQSxJQUlKLFFBQVNFLEtBQ1BELElBWkYsR0FBSUUsR0FBVyxLQUNiQyxLQUNBQyxLQUNBQyxJQVlGLEtBQUtQLEdBQWdDLElBQXBCQSxFQUFTTCxPQUV4QixNQURBTyxLQUNBLE1BSUZGLEdBQVNRLFFBQVEsU0FBU0MsR0FDcEJBLEVBQUtDLE9BQVNELEVBQUtFLFdBQ3JCckIsR0FBY2xCLEVBQWdCcUMsRUFBS0MsTUFBT0QsRUFBS0UsY0FLbkQsS0FBSyxHQUFJakIsR0FBSSxFQUFHQSxFQUFJTSxFQUFTTCxPQUFRRCxJQUMvQk0sRUFBU04sR0FBR2lCLFdBQWFYLEVBQVNOLEdBQUdpQixVQUFVbEMsS0FBS2pELE1BQ2pCLFdBQXBDd0UsRUFBU04sR0FBR2lCLFVBQVVsQyxLQUFLakQsT0FFNUI0RSxFQUFXSixFQUFTTixHQUFHaUIsVUFBVWxDLEtBQUtGLE9BQU9xQyxNQUFNLEtBQUssR0FHeERSLEVBQVdBLEVBQVMxQixRQUFRLEtBQU0sSUFFbEMyQixFQUFlUSxLQUFLVCxHQUt4QixLQUFLVixFQUFJLEVBQUdBLEVBQUlNLEVBQVNMLE9BQVFELElBQzNCTSxFQUFTTixHQUFHaUIsV0FBYVgsRUFBU04sR0FBR2lCLFVBQVVsQyxLQUFLakQsTUFDakIsV0FBcEN3RSxFQUFTTixHQUFHaUIsVUFBVWxDLEtBQUtqRCxPQUU1QjhFLEVBQWVPLEtBQUtyQyxtQkFBbUJ3QixFQUFTTixHQUFHaUIsVUFBVWxDLEtBQUtGLFFBQVFHLFFBQVEsS0FBTSxLQUV4RjZCLEVBQVdNLEtBQUtiLEVBQVNOLEdBQUdpQixVQUFVbEMsS0FBS3FDLElBQUlwQyxRQUFRLEtBQU0sUUFJakUsSUFBOEIsSUFBMUIyQixFQUFlVixRQUEwQyxJQUExQlcsRUFBZVgsT0FDaERPLFFBRUcsQ0FFSCxJQUFLLEdBQUlhLEdBQUksRUFBR0EsRUFBSVQsRUFBZVgsT0FBUW9CLEdBQUssRUFDOUNDLEVBQWVWLEVBQWVTLEdBQUlSLEVBQVdRLEdBRzNDVixHQUFlVixPQUFTLEVBQzFCc0IsRUFBZ0JaLEVBQWdCRixHQUdoQ0QsS0FLTixRQUFTYyxHQUFlekMsRUFBUXVDLEVBQUtJLEdBQ25DLEdBQUlDLEdBQVEsS0FDUkMsRUFBTyxnQkFBa0I3QyxFQUFTLGVBQXNCdUMsRUFBTSxLQUVsRUksR0FBYUEsR0FBY3ZJLFNBRTNCd0ksRUFBUUQsRUFBV0csWUFBWSxHQUVqQixPQUFWRixHQUNGQSxFQUFNRyxRQUFRLGFBQWNGLEdBSWhDLFFBQVNILEdBQWdCYixFQUFVSCxHQUNqQ3NCLFFBQVFDLE1BQ05DLFFBQ0VyQixTQUFVQSxHQUVac0IsT0FBUSxXQUNGekIsR0FBb0Isa0JBQVBBLElBQ2ZBLEtBR0owQixTQUFVLFdBQ0oxQixHQUFvQixrQkFBUEEsSUFDZkEsS0FHSjJCLFFBQVMsTUFJYixRQUFTQyxHQUFZQyxHQUNuQixHQUFJQyxHQUFTcEosU0FBUzhHLGNBQWUsU0FFckNzQyxHQUFPRCxJQUFNQSxFQUNibkosU0FBU3FKLEtBQUtwQyxZQUFhbUMsR0FHN0IsUUFBU0UsR0FBY0MsR0FJckIsSUFBSyxHQUhEdkMsR0FBU3VDLEVBQUt2QyxPQUNoQndDLEtBRU96QyxFQUFJLEVBQU9DLEVBQUpELEVBQVlBLElBQzFCeUMsRUFBT3pDLEdBQUssR0FBSTBDLE9BQ2hCRCxFQUFPekMsR0FBR29DLElBQU1JLEVBQUt4QyxHQU96QixRQUFTMkMsR0FBa0JDLEdBQ3pCLE1BQU9DLEdBQXdCRCxFQUFPNUosT0FBTzhKLFNBQVNDLE9BQU9DLFVBQVUsSUFNekUsUUFBU0gsR0FBd0JELEVBQU9LLEdBSXRDLElBQUssR0FGSEMsR0FERUMsRUFBT0YsRUFBTS9CLE1BQU0sS0FHZGxCLEVBQUksRUFBR0EsRUFBSW1ELEVBQUtsRCxPQUFRRCxJQUcvQixHQUZBa0QsRUFBT0MsRUFBS25ELEdBQUdrQixNQUFNLEtBRWpCZ0MsRUFBSyxJQUFNTixFQUNiLE1BQU85RCxvQkFBbUJvRSxFQUFLLEdBSW5DLE9BQU8sR0FNVCxRQUFTRSxHQUFxQ0MsR0FDNUMsR0FBSUMsR0FBUyw4Q0FDVEMsRUFBWUQsRUFBT0UsS0FBS0gsRUFDNUIsT0FBSUUsR0FDSyxHQUFJRSxPQUNQRixFQUFVLElBQ1JBLEVBQVUsR0FBSSxHQUNoQkEsRUFBVSxJQUNWQSxFQUFVLElBQ1ZBLEVBQVUsSUFHZCxPQUlKLFFBQVNHLEdBQXlCQyxHQUNoQyxHQUFJQyxHQUFlLEVBQ25CLFFBQVFELEdBQ04sSUFBSyxLQUNIQyxFQUFlLGdEQUNmLE1BQ0YsS0FBSyxLQUNIQSxFQUFlLGdFQUNmLE1BQ0YsU0FDRUEsRUFBZSwyREFHbkIsTUFBT0EsR0FHVCxRQUFTQyxHQUFhQyxHQUNwQixHQUFJQyxHQUFNOUssU0FBUzhHLGNBQWMsTUFJakMsT0FGQWdFLEdBQUlDLFVBQVlGLEVBRVRDLEVBQUlFLFlBR2IsUUFBU0MsR0FBc0JDLEVBQVUzRCxHQUN2QyxHQUFJNEQsR0FBTSxHQUFJQyxlQUVkLElBQUtGLEdBQWEzRCxHQUFnQyxrQkFBYkEsR0FBckMsQ0FJQTRELEVBQUlFLEtBQUssT0FBUUgsRUFBVyxRQUFTLEdBQUlWLE9BQU9jLFdBQVcsRUFFM0QsS0FDRUgsRUFBSUksT0FFSmhFLEVBQVU0RCxFQUFJSyxRQUFVLEtBQU9MLEVBQUlLLE9BQVMsS0FFNUMsTUFBT0MsR0FDUGxFLEdBQVMsS0FPYixRQUFTbUUsS0FDUCxHQUFJQyxHQUFnQixHQUVoQkMsRUFBUUMsVUFBVUMsVUFBVUYsTUFBTSxpQkFDbENHLEVBQVVILEVBQVFBLEVBQU0sR0FBSyxDQUVqQyxPQUFJRyxLQUNGQSxFQUFVQyxTQUFTRCxFQUFRaEMsVUFBVSxFQUFFZ0MsRUFBUTVGLFFBQVEsT0FFeEN3RixHQUFYSSxJQUNLLEdBSUosRUFNVCxRQUFTRSxHQUFZOUQsRUFBSytELEdBSXhCLE1BSEssc0JBQXNCQyxLQUFLaEUsS0FDOUJBLEdBQU8sRUFBVyxXQUFhLFdBQWFBLEdBRXZDQSxFQUdULE9BQ0U4RCxZQUEwQkEsRUFDMUJ2QyxrQkFBMEJBLEVBQzFCRSx3QkFBMEJBLEVBQzFCbkUsZ0JBQTBCQSxFQUMxQmtCLFlBQTBCQSxFQUMxQlMsVUFBMEJBLEVBQzFCaUIsZUFBMEJBLEVBQzFCQyxnQkFBMEJBLEVBQzFCWSxXQUEwQkEsRUFDMUJJLGNBQTBCQSxFQUMxQm1CLHlCQUEwQkEsRUFDMUJHLGFBQTBCQSxFQUMxQkssc0JBQTBCQSxFQUMxQlMsU0FBMEJBLEVBQzFCdkIscUNBQXNDQSxLQU0xQyxJQUFJN0UsWUFBYUEsY0FDakJBLFlBQVdDLE9BQVNELFdBQVdDLFdBRS9CRCxXQUFXQyxPQUFPNkcsWUFBYyxXQUM5QixZQVdBLFNBQVNDLEdBQWVDLEVBQVFoRixHQUM5QixHQUFJaUYsR0FBTyxJQUdQRCxHQUFPRSxPQUNURCxFQUFPRCxFQUVIQyxFQUFLRSxXQUNQRixFQUFLRyxZQUFjQyxFQUFjSixFQUFLRSxXQUd4Q0YsRUFBS0ssV0FBYUMsRUFDbEJOLEVBQUtPLFdBQWFDLEVBRWRoQixJQUNGUSxFQUFLUixRQUFVQSxHQUdqQnpFLEVBQUdpRixJQUdIakYsRUFBR2lGLEdBS1AsUUFBU1MsS0FDUCxHQUFJQyxHQUFPLEdBQUl6QyxNQUNiMEMsRUFBT0QsRUFBS0UsaUJBQ1pDLEVBQVFILEVBQUtJLGNBQWdCLEVBQzdCQyxFQUFNTCxFQUFLTSxZQVViLE9BUlksSUFBUkgsSUFDRkEsRUFBUSxJQUFNQSxHQUdOLEdBQU5FLElBQ0ZBLEVBQU0sSUFBTUEsR0FHUCxHQUFLSixFQUFPRSxFQUFRRSxFQU03QixRQUFTWCxHQUFjeEUsR0FDckIsR0FDRXFGLEdBREVDLEVBQVksT0FHaEIsT0FBS3RGLElBQXNCLGdCQUFSQSxJQUluQnFGLEVBQU1yRixFQUFJdUYsT0FBT3ZGLEVBQUl3RixZQUFZLEtBQU8sR0FHcENGLEVBQVV0QixLQUFLcUIsS0FDakJBLEVBQU1BLEVBQUlFLE9BQU8sRUFBeUIsS0FBckJGLEVBQUlySCxRQUFRLEtBQWVxSCxFQUFJckgsUUFBUSxLQUFPcUgsRUFBSXhHLFFBRXZFd0csRUFBTUEsRUFBSUUsT0FBTyxFQUF5QixLQUFyQkYsRUFBSXJILFFBQVEsS0FBZXFILEVBQUlySCxRQUFRLEtBQU9xSCxFQUFJeEcsUUFFdkV3RyxFQUFNQSxFQUFJRSxPQUFPLEVBQXlCLEtBQXJCRixFQUFJckgsUUFBUSxLQUFlcUgsRUFBSXJILFFBQVEsS0FBT3FILEVBQUl4RyxTQUdsRXdHLEVBQUlJLGVBZEYsS0FpQlgsUUFBU0MsR0FBY3ZCLEdBQ3JCLEdBQUl3QixJQUNGQyxLQUFRLHFDQUNSQyxpQkFBbUIsRUFDbkJDLHFCQUF1QixFQUN2QkMsZUFBa0JsQixJQUNsQm1CLE9BQ0VDLFNBQVksTUFHaEJ0SixFQUFPdUosS0FBS0MsTUFBTUQsS0FBS0UsVUFBVVQsR0FNakMsT0FKQWhKLEdBQUtxSixLQUFLLEdBQUdDLFNBQVczTCxLQUFLK0wsU0FBU0MsU0FBUyxJQUFJZixPQUFPLEdBQUdnQixjQUM3RDVKLEVBQUtxSixLQUFLLEdBQUc1QixLQUFPOEIsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVWpDLElBQzlDeEgsRUFBS3FKLEtBQUssR0FBRzVCLEtBQUtvQyxJQUFLLEdBQUluRSxPQUFPb0UsY0FFM0I5SixFQUdULFFBQVMrSixHQUFTQyxFQUFPeEMsR0FDdkJELEVBQWVDLEVBQVEsU0FBU0MsR0FDakIsT0FBVEEsR0FDRmpILFdBQVdDLE9BQU93SixPQUFPQyxJQUFJRixFQUFPdkMsS0FLMUMsUUFBUzBDLEdBQWlCSCxFQUFPeEMsR0FDL0IsSUFDRXZJLElBQUltTCxjQUNGQyxRQUFTLGFBQ1RMLE1BQU9BLEVBQ1B4QyxPQUFRK0IsS0FBS0UsVUFBVWpDLEdBQ3ZCOEMsT0FBUXBDLE1BRVYsTUFBT3FDLEdBQ1BDLFFBQVFOLElBQUksaUNBQWtDSyxJQUtsRCxRQUFTRSxHQUFPQyxFQUFTQyxHQUN2QjVDLEVBQVkyQyxFQUNaekMsRUFBWTBDLEVBR2QsUUFBU0MsR0FBV0MsR0FDbEI1RCxFQUFVNEQsRUE1SFgsR0FBSTVDLEdBQVksR0FDZEYsRUFBWSxHQUNaZCxFQUFVLElBNkhiLFFBQ0U4QixjQUFpQkEsRUFDakJsQixjQUFpQkEsRUFDakJrQyxTQUFZQSxFQUNaSSxpQkFBb0JBLEVBQ3BCTSxPQUFVQSxFQUNWRyxXQUFjQSxNQUlsQnBLLFdBQVdDLE9BQU93SixPQUFTLFNBQVVhLEdBQ25DLFlBaUJBLFNBQVNDLEdBQWF2SSxHQUNwQixHQUFJNkQsR0FBTSxHQUFJQyxlQUVkLE9BQUksSUFBSVosTUFBU3NGLEVBQWMsTUFDdEJ4SSxPQUdUNkQsRUFBSUUsS0FBSyxPQUFRMEUsR0FBYSxHQUM5QjVFLEVBQUk2RSxVQUFZLFdBQ2QsR0FBSUMsS0FDSixLQUNFQSxFQUFPNUIsS0FBS0MsTUFBTW5ELEVBQUkrRSxVQUN0QixNQUFNekUsR0FDTjZELFFBQVFhLEtBQUssZ0NBQWlDMUUsRUFBRTBELFNBRWxEN0gsR0FBSzhJLE1BQU9ILEVBQUtJLGFBQWNDLFlBQWEsR0FBSTlGLFNBR2xEVyxFQUFJSSxPQVhKSixRQWNGLFFBQVNvRixHQUFZL0QsR0FDbkIsTUFBT2dFLElBQWFDLElBQWNqRSxFQU1wQyxRQUFTd0MsR0FBSTBCLEVBQVdwRSxHQTRCdEIsUUFBU3FFLEdBQWdCQyxHQUN2QixHQUNFQyxHQUFZMUksRUFEVmdELEVBQU0sR0FBSUMsZUFHZGpELEdBQU0ySSxFQUFXL0ssUUFBUSxXQUFZMkssR0FDckNaLEVBQWNjLEVBQVlOLGFBQWVSLEVBQ3pDTSxFQUFRUSxFQUFZUixPQUFTQSxFQUM3QlMsRUFBYWpCLEVBQU0vQixjQUFjdkIsR0FHakNuQixFQUFJRSxLQUFLLE9BQVFsRCxHQUFLLEdBQ3RCZ0QsRUFBSTRGLGlCQUFpQixlQUFnQixvQkFDckM1RixFQUFJNEYsaUJBQWlCLGdCQUFpQixVQUFZWCxHQUU5QzlELEVBQU9oRixJQUEyQixrQkFBZGdGLEdBQU9oRixLQUM3QjZELEVBQUk2RSxVQUFZLFdBQ2QxRCxFQUFPaEYsR0FBRzZELEVBQUkrRSxZQUlsQi9FLEVBQUlJLEtBQUs4QyxLQUFLRSxVQUFVc0MsSUEvQzFCLE1BQUtILElBQWNwRSxHQUFXQSxFQUFPMEUsZUFBZSxXQUFhMUUsRUFBT0UsT0FDckVGLEVBQU8wRSxlQUFlLFVBQVlULEVBQVlqRSxFQUFPRSxTQUtuREYsRUFBT1EsWUFBb0MsWUFBdEJSLEVBQU9RLFlBQWtELGVBQXRCUixFQUFPUSxZQUM1QyxjQUF0QlIsRUFBT1EsV0FEVCxDQUtBLElBQ0UsR0FBSy9JLElBQUltTCxjQUFnQm5MLElBQUlrTixvQkFFM0IsTUFBT3JCLEdBQU1YLGlCQUFrQnlCLEVBQVdwRSxHQUU1QyxNQUFRYixHQUNSNkQsUUFBUU4sSUFBSyx3QkFBeUJ2RCxHQWlDeEMsTUE5QkErRSxJQUFXLEVBQ1hDLEVBQVluRSxFQUFPRSxNQUVuQjBFLFdBQVcsV0FDVFYsR0FBVyxHQUNWVyxHQXlCSXRCLEVBQWFjLElBOUZ0QixHQUFJWixHQUFjLHdEQUEwRC9LLHFCQUFxQkUsaUJBQzdGLGtCQUFvQkYscUJBQXFCRyxxQkFDekMsa0JBQW9CSCxxQkFBcUJJLHFCQUN6Qyw0QkFFQTBMLEVBQWEsc0hBQ2ZOLEdBQVcsRUFDWFcsRUFBZ0IsSUFDaEJWLEVBQVksR0FDWlgsRUFBYyxFQUNkTSxFQUFRLEVBdUZWLFFBQ0VwQixJQUFPQSxJQUVSMUosV0FBV0MsT0FBTzZHLFlBR3JCLElBQUlnRixNQUFPQSxRQUVYQSxNQUFLbEosTUFBTSxjQUFlLG1CQUMxQmtKLEtBQUtsSixNQUFNLG1CQUVYLFdBQ0UsR0FBSW1KLEdBQUtyUixTQUFTOEcsY0FBYyxTQUFXdUssR0FBR3hPLEtBQU8sa0JBQW1Cd08sRUFBR0MsT0FBUSxFQUNuRkQsRUFBR2xJLEtBQU8sVUFBWW5KLFNBQVM2SixTQUFTMEgsU0FBVyxjQUFnQixjQUFnQiw2QkFDbkYsSUFBSUMsR0FBSXhSLFNBQVN5UixxQkFBcUIsVUFBVSxFQUFJRCxHQUFFRSxXQUFXQyxhQUFhTixFQUFJRyxLQU1wRixJQUFJbE0sWUFBYUEsY0FDakJBLFlBQVdzTSxRQUVYdE0sV0FBV3NNLEtBQU8sU0FBVUMsRUFBU2pKLEdBQ25DLFlBU0EsU0FBU2tKLEdBQWlCQyxFQUFPekssR0FFL0IsUUFBUzBLLEtBQ0gxSyxHQUFvQixrQkFBUEEsSUFDZkEsSUFJQTJLLE1BQU1DLFFBQVFILElBQVVBLEVBQU0vSyxPQUFTLEVBQ3pDNEIsRUFBUUMsTUFDTkMsUUFDRXJCLFNBQVVzSyxHQUVaOUksUUFBUyxJQUNURixPQUFRLFdBQ05pSixLQUVGaEosU0FBVSxXQUNSc0csUUFBUWEsS0FBSywrQkFDYjZCLEtBRUZHLGFBQWMsU0FBU0MsR0FDckJDLEdBQ0U3RixNQUFTLFFBQ1Q4RixjQUFpQix5QkFDakJDLGNBQWlCSCxPQU12QkosSUFLSixRQUFTUSxLQUNQeFMsU0FBU3lTLGNBQWMsU0FBUzFILFVBQVkySCxFQUFrQjVOLEtBRTlEZ04sRUFBaUJZLEVBQWtCQyxZQUFhLFdBRTlDN1MsRUFBRStFLEtBQUs2TixFQUFrQkUsWUFBWWIsTUFBTyxTQUFVYyxFQUFPL00sR0FDM0RnTixFQUFPekssZUFBZXZDLEVBQUtGLE9BQU9HLFFBQVEsS0FBTSxJQUFLRCxFQUFLcUMsSUFBSXBDLFFBQVEsS0FBTSxVQUc5RWpHLEVBQUUsY0FBYzhFLFdBQVc4TixFQUFrQkssUUFBUUMsR0FBRyxPQUFRLFdBQzlEQyxNQUdGQyxNQUtKLFFBQVNDLEtBQ1AsTUFBTyxjQUdULFFBQVNkLEdBQVUvRixHQUNqQmhILFdBQVdDLE9BQU82RyxZQUFZeUMsU0FBU3NFLElBQWlCN0csR0FHMUQsUUFBUzRHLEtBQ1ByQixFQUFRdUIsSUFBSUMsS0FBSyxHQUFJLGdCQUFpQixLQUFNQyxFQUFPQyxVQUFVLE9BQU8sR0FDbEUsR0FBTSxHQUFNLEdBQU0sR0FHdEIsUUFBU04sS0FDUHBCLEVBQVF1QixJQUFJQyxLQUFLLEdBQUksZUFBZ0IsS0FBTUMsRUFBT0MsVUFBVSxPQUM1RGxCLEdBQVk3RixNQUFTLFNBTXZCLFFBQVNnSCxHQUFvQkMsR0FDM0JmLEVBQW9CckUsS0FBS0MsTUFBTUQsS0FBS0UsVUFBVWtGLElBRTlDZixFQUFrQmdCLE1BQVFKLEVBQU9LLE9BQU8sT0FDeENqQixFQUFrQnBPLE9BQVNnUCxFQUFPSyxPQUFPLE9BRXpDM1QsU0FBUzRULGVBQWUsYUFBYS9NLE1BQU02TSxNQUFRaEIsRUFBa0JnQixNQUFRLEtBQzdFMVQsU0FBUzRULGVBQWUsYUFBYS9NLE1BQU12QyxPQUFTb08sRUFBa0JwTyxPQUFTLEtBRS9Fa08sSUFHRixRQUFTalEsS0FDSHpDLEVBQUUsY0FBY2dGLEtBQUssc0JBQ3ZCaEYsRUFBRSxjQUFjZ0YsS0FBSyxxQkFBcUJ2QyxPQUc1QzhQLEdBQVk3RixNQUFTLFNBR3ZCLFFBQVNwTCxLQUNIdEIsRUFBRSxjQUFjZ0YsS0FBSyxzQkFDdkJoRixFQUFFLGNBQWNnRixLQUFLLHFCQUFxQjFELFFBSTlDLFFBQVNzRCxLQUNQdEQsSUE3R0YsR0FBSXNSLEdBQW9CLEtBQ3RCWSxFQUFTLEdBQUl6QixHQUFRZ0MsTUFDckJmLEVBQVN4TixXQUFXQyxPQUFPQyxTQThHN0IsUUFDRXBFLE1BQVNBLEVBQ1RtQixLQUFRQSxFQUNSaVIsb0JBQXVCQSxFQUN2QjlPLEtBQVFBLElBRVRtTixRQUFTakosU0FJWixTQUFXN0ksRUFBUThSLEdBQ2pCLFlBYUEsU0FBU2lDLEdBQVVDLEVBQU9DLEdBQ3hCLEdBQUlQLEdBQ0Y1RyxFQUFZLEdBQ1pFLEVBQVksRUFFVmtGLE9BQU1DLFFBQVE2QixJQUFVQSxFQUFNL00sT0FBUyxHQUFLaUwsTUFBTUMsUUFBUThCLElBQVdBLEVBQU9oTixPQUFTLElBQ3RFLGNBQWIrTSxFQUFNLEtBQ1JsSCxFQUFZbUgsRUFBTyxJQUdKLGNBQWJELEVBQU0sS0FFTmhILEVBREVpSCxFQUFPLEdBQ0dBLEVBQU8sR0FHUCxXQUloQjFPLFdBQVdDLE9BQU82RyxZQUFZbUQsT0FBTzFDLEVBQVdFLEdBRS9CLHFCQUFiZ0gsRUFBTSxLQUNSTixFQUFtQnBGLEtBQUtDLE1BQU0wRixFQUFPLElBRXJDMU8sV0FBV3NNLEtBQUs0QixvQkFBb0JDLEtBYzFDLFFBQVNsUixLQUNQK0MsV0FBV3NNLEtBQUtyUCxPQUdsQixRQUFTbkIsS0FDUGtFLFdBQVdzTSxLQUFLeFEsUUFHbEIsUUFBU3NELEtBQ1BZLFdBQVdzTSxLQUFLbE4sT0ExRGxCLEdBQUl1UCxHQUFRLEdBQUlwQyxHQUFRZ0MsTUFDdEJLLEVBQUtELEVBQU1WLFVBQVUsS0FFdkJ4VCxHQUFPb1UsY0FBZ0IsV0FDckIsT0FBTyxHQUdUblUsU0FBU3FKLEtBQUsrSyxZQUFjLFdBQzFCLE9BQU8sR0FnQ0xGLEdBQWEsS0FBUEEsSUFDUnJDLEVBQVF1QixJQUFJaUIsU0FBUyxjQUFnQkgsRUFBSTNSLEdBQ3pDc1AsRUFBUXVCLElBQUlpQixTQUFTLGVBQWlCSCxFQUFJOVMsR0FDMUN5USxFQUFRdUIsSUFBSWlCLFNBQVMsY0FBZ0JILEVBQUl4UCxHQUV6Q21OLEVBQVF1QixJQUFJaUIsU0FBUyxlQUFpQkgsRUFBSUosR0FDMUNqQyxFQUFRdUIsSUFBSUMsS0FBSyxHQUFJLGNBQWUsS0FBTWEsR0FBSyxZQUFhLFlBQWEsdUJBYzFFblUsT0FBUThSIiwiZmlsZSI6ImpzL3dpZGdldC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogIFByb2plY3Q6IEF1dG8tU2Nyb2xsXG4gKiAgRGVzY3JpcHRpb246IEF1dG8tc2Nyb2xsIHBsdWdpbiBmb3IgdXNlIHdpdGggUmlzZSBWaXNpb24gV2lkZ2V0c1xuICogIEF1dGhvcjogQGRvbm5hcGVwXG4gKiAgTGljZW5zZTogTUlUXG4gKi9cblxuOyhmdW5jdGlvbiAoJCwgd2luZG93LCBkb2N1bWVudCwgdW5kZWZpbmVkKSB7XG5cdFwidXNlIHN0cmljdFwiO1xuXG5cdHZhciBwbHVnaW5OYW1lID0gXCJhdXRvU2Nyb2xsXCIsXG5cdFx0ZGVmYXVsdHMgPSB7XG5cdFx0XHRieTogXCJjb250aW51b3VzXCIsXG5cdFx0XHRzcGVlZDogXCJtZWRpdW1cIixcblx0XHRcdHBhdXNlOiA1LFxuXHRcdFx0Y2xpY2s6IGZhbHNlLFxuXHRcdFx0bWluaW11bU1vdmVtZW50OiAzIC8vIERyYWdnYWJsZSBkZWZhdWx0IHZhbHVlIC0gaHR0cDovL2dyZWVuc29jay5jb20vZG9jcy8jL0hUTUw1L0RyYWcvRHJhZ2dhYmxlL1xuXHRcdH07XG5cblxuXHRmdW5jdGlvbiBQbHVnaW4oZWxlbWVudCwgb3B0aW9ucykge1xuXHRcdHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG5cdFx0dGhpcy5wYWdlID0gJChlbGVtZW50KS5maW5kKFwiLnBhZ2VcIik7XG5cdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIGRlZmF1bHRzLCBvcHRpb25zKTtcblx0XHR0aGlzLl9kZWZhdWx0cyA9IGRlZmF1bHRzO1xuXHRcdHRoaXMuX25hbWUgPSBwbHVnaW5OYW1lO1xuXHRcdHRoaXMuaXNMb2FkaW5nID0gdHJ1ZTtcblx0XHR0aGlzLmRyYWdnYWJsZSA9IG51bGw7XG5cdFx0dGhpcy50d2VlbiA9IG51bGw7XG5cdFx0dGhpcy5jYWxjdWxhdGVQcm9ncmVzcyA9IG51bGw7XG5cdFx0dGhpcy5pbml0KCk7XG5cdH1cblxuXHRQbHVnaW4ucHJvdG90eXBlID0ge1xuXHRcdGluaXQ6IGZ1bmN0aW9uICgpIHtcblx0XHRcdHZhciBzcGVlZCwgZHVyYXRpb247XG5cdFx0XHR2YXIgc2VsZiA9IHRoaXM7XG5cdFx0XHR2YXIgc2Nyb2xsQ29tcGxldGUgPSBudWxsO1xuXHRcdFx0dmFyIHBhZ2VDb21wbGV0ZSA9IG51bGw7XG5cdFx0XHR2YXIgZWxlbWVudEhlaWdodCA9ICQodGhpcy5lbGVtZW50KS5vdXRlckhlaWdodCh0cnVlKTtcblx0XHRcdHZhciBwYXVzZUhlaWdodCA9IGVsZW1lbnRIZWlnaHQ7XG5cdFx0XHR2YXIgbWF4ID0gdGhpcy5lbGVtZW50LnNjcm9sbEhlaWdodCAtIHRoaXMuZWxlbWVudC5vZmZzZXRIZWlnaHQ7XG5cblx0XHRcdGZ1bmN0aW9uIHBhdXNlVHdlZW4oKSB7XG5cdFx0XHRcdHNlbGYudHdlZW4ucGF1c2UoKTtcblxuXHRcdFx0XHRUd2VlbkxpdGUua2lsbERlbGF5ZWRDYWxsc1RvKHNlbGYuY2FsY3VsYXRlUHJvZ3Jlc3MpO1xuXHRcdFx0XHRUd2VlbkxpdGUua2lsbERlbGF5ZWRDYWxsc1RvKHNjcm9sbENvbXBsZXRlKTtcblx0XHRcdFx0Ly8gT25seSB1c2VkIHdoZW4gc2Nyb2xsaW5nIGJ5IHBhZ2UuXG5cdFx0XHRcdFR3ZWVuTGl0ZS5raWxsRGVsYXllZENhbGxzVG8ocGFnZUNvbXBsZXRlKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5jYWxjdWxhdGVQcm9ncmVzcyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHQvLyBTZXQgcGF1c2VIZWlnaHQgdG8gbmV3IHZhbHVlLlxuXHRcdFx0XHRwYXVzZUhlaWdodCA9ICQoc2VsZi5lbGVtZW50KS5zY3JvbGxUb3AoKSArXG5cdFx0XHRcdFx0ZWxlbWVudEhlaWdodDtcblxuXHRcdFx0XHRzZWxmLnR3ZWVuLnByb2dyZXNzKCQoc2VsZi5lbGVtZW50KS5zY3JvbGxUb3AoKSAvIG1heClcblx0XHRcdFx0XHQucGxheSgpO1xuXHRcdFx0fTtcblxuXHRcdFx0aWYgKHRoaXMuY2FuU2Nyb2xsKCkpIHtcblx0XHRcdFx0Ly8gU2V0IHNjcm9sbCBzcGVlZC5cblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5ieSA9PT0gXCJwYWdlXCIpIHtcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcImZhc3Rlc3RcIikge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSAwLjQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zcGVlZCA9PT0gXCJmYXN0XCIpIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gMC44O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwibWVkaXVtXCIpIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gMS4yO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwic2xvd1wiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDEuNjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDI7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZHVyYXRpb24gPSB0aGlzLnBhZ2Uub3V0ZXJIZWlnaHQodHJ1ZSkgL1xuXHRcdFx0XHRcdFx0JCh0aGlzLmVsZW1lbnQpLm91dGVySGVpZ2h0KHRydWUpICogc3BlZWQ7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSB7ICAvLyBDb250aW51b3VzIG9yIGJ5IHJvd1xuXHRcdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwiZmFzdGVzdFwiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDYwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwiZmFzdFwiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDUwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwibWVkaXVtXCIpIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gNDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2UgaWYgKHRoaXMub3B0aW9ucy5zcGVlZCA9PT0gXCJzbG93XCIpIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gMzA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSAyMDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRkdXJhdGlvbiA9IE1hdGguYWJzKCh0aGlzLnBhZ2Uub3V0ZXJIZWlnaHQodHJ1ZSkgLVxuXHRcdFx0XHRcdFx0JCh0aGlzLmVsZW1lbnQpLm91dGVySGVpZ2h0KHRydWUpKSAvIHNwZWVkKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdERyYWdnYWJsZS5jcmVhdGUodGhpcy5lbGVtZW50LCB7XG5cdFx0XHRcdFx0dHlwZTogXCJzY3JvbGxUb3BcIixcblx0XHRcdFx0XHR0aHJvd1Byb3BzOiB0cnVlLFxuXHRcdFx0XHRcdGVkZ2VSZXNpc3RhbmNlOiAwLjc1LFxuXHRcdFx0XHRcdG1pbmltdW1Nb3ZlbWVudDogc2VsZi5vcHRpb25zLm1pbmltdW1Nb3ZlbWVudCxcblx0XHRcdFx0XHRvblByZXNzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHBhdXNlVHdlZW4oKTtcblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdG9uUmVsZWFzZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoc2VsZi5vcHRpb25zLmJ5ICE9PSBcIm5vbmVcIikge1xuXHRcdFx0XHRcdFx0XHQvKiBGaWd1cmUgb3V0IHdoYXQgdGhlIG5ldyBzY3JvbGwgcG9zaXRpb24gaXMgYW5kXG5cdFx0XHRcdFx0XHRcdCB0cmFuc2xhdGUgdGhhdCBpbnRvIHRoZSBwcm9ncmVzcyBvZiB0aGUgdHdlZW4gKDAtMSlcblx0XHRcdFx0XHRcdFx0IHNvIHRoYXQgd2UgY2FuIGNhbGlicmF0ZSBpdDsgb3RoZXJ3aXNlLCBpdCdkIGp1bXBcblx0XHRcdFx0XHRcdFx0IGJhY2sgdG8gd2hlcmUgaXQgcGF1c2VkIHdoZW4gd2UgcmVzdW1lKCkuICovXG5cdFx0XHRcdFx0XHRcdFR3ZWVuTGl0ZS5kZWxheWVkQ2FsbChzZWxmLm9wdGlvbnMucGF1c2UsIHNlbGYuY2FsY3VsYXRlUHJvZ3Jlc3MpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0sXG5cdFx0XHRcdFx0b25DbGljazogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRpZiAoc2VsZi5vcHRpb25zLmNsaWNrKSB7XG5cdFx0XHRcdFx0XHRcdHBhdXNlVHdlZW4oKTtcblx0XHRcdFx0XHRcdFx0JChzZWxmLmVsZW1lbnQpLnRyaWdnZXIoXCJzY3JvbGxDbGlja1wiLCBbdGhpcy5wb2ludGVyRXZlbnRdKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdHRoaXMuZHJhZ2dhYmxlID0gRHJhZ2dhYmxlLmdldCh0aGlzLmVsZW1lbnQpO1xuXG5cdFx0XHRcdHRoaXMudHdlZW4gPSBUd2VlbkxpdGUudG8odGhpcy5kcmFnZ2FibGUuc2Nyb2xsUHJveHksIGR1cmF0aW9uLCB7XG5cdFx0XHRcdFx0c2Nyb2xsVG9wOiBtYXgsXG5cdFx0XHRcdFx0ZWFzZTogTGluZWFyLmVhc2VOb25lLFxuXHRcdFx0XHRcdGRlbGF5OiB0aGlzLm9wdGlvbnMucGF1c2UsXG5cdFx0XHRcdFx0cGF1c2VkOiB0cnVlLFxuXHRcdFx0XHRcdG9uVXBkYXRlOiAodGhpcy5vcHRpb25zLmJ5ID09PSBcInBhZ2VcIiA/IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKE1hdGguYWJzKHNlbGYuZHJhZ2dhYmxlLnNjcm9sbFByb3h5LnRvcCgpKSA+PSBwYXVzZUhlaWdodCkge1xuXHRcdFx0XHRcdFx0XHRzZWxmLnR3ZWVuLnBhdXNlKCk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTmV4dCBoZWlnaHQgYXQgd2hpY2ggdG8gcGF1c2Ugc2Nyb2xsaW5nLlxuXHRcdFx0XHRcdFx0XHRwYXVzZUhlaWdodCArPSBlbGVtZW50SGVpZ2h0O1xuXG5cdFx0XHRcdFx0XHRcdFR3ZWVuTGl0ZS5kZWxheWVkQ2FsbChzZWxmLm9wdGlvbnMucGF1c2UsXG5cdFx0XHRcdFx0XHRcdFx0cGFnZUNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRzZWxmLnR3ZWVuLnJlc3VtZSgpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9IDogdW5kZWZpbmVkKSxcblx0XHRcdFx0XHRvbkNvbXBsZXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFR3ZWVuTGl0ZS5kZWxheWVkQ2FsbChzZWxmLm9wdGlvbnMucGF1c2UsXG5cdFx0XHRcdFx0XHRcdHNjcm9sbENvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0VHdlZW5MaXRlLnRvKHNlbGYucGFnZSwgMSwge1xuXHRcdFx0XHRcdFx0XHRcdFx0YXV0b0FscGhhOiAwLFxuXHRcdFx0XHRcdFx0XHRcdFx0b25Db21wbGV0ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHNlbGYudHdlZW4uc2VlaygwKS5wYXVzZSgpO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmIChzZWxmLm9wdGlvbnMuYnkgPT09IFwicGFnZVwiKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0cGF1c2VIZWlnaHQgPSBlbGVtZW50SGVpZ2h0O1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0JChzZWxmLmVsZW1lbnQpLnRyaWdnZXIoXCJkb25lXCIpO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0pO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0Ly8gSGlkZSBzY3JvbGxiYXIuXG5cdFx0XHRcdFR3ZWVuTGl0ZS5zZXQodGhpcy5lbGVtZW50LCB7IG92ZXJmbG93WTogXCJoaWRkZW5cIiB9KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuY2xpY2spIHtcblx0XHRcdFx0XHQvLyBBY2NvdW50IGZvciBjb250ZW50IHRoYXQgaXMgdG8gYmUgY2xpY2tlZCB3aGVuIGNvbnRlbnQgbm90IG5lZWRlZCB0byBiZSBzY3JvbGxlZFxuXHRcdFx0XHRcdC8vIExldmVyYWdlIERyYWdnYWJsZSBmb3IgdG91Y2gvY2xpY2sgZXZlbnQgaGFuZGxpbmdcblx0XHRcdFx0XHREcmFnZ2FibGUuY3JlYXRlKHRoaXMuZWxlbWVudCwge1xuXHRcdFx0XHRcdFx0dHlwZTogXCJzY3JvbGxUb3BcIixcblx0XHRcdFx0XHRcdHRocm93UHJvcHM6IHRydWUsXG5cdFx0XHRcdFx0XHRlZGdlUmVzaXN0YW5jZTogMC45NSxcblx0XHRcdFx0XHRcdG1pbmltdW1Nb3ZlbWVudDogdGhpcy5vcHRpb25zLm1pbmltdW1Nb3ZlbWVudCxcblx0XHRcdFx0XHRcdG9uQ2xpY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHQkKHNlbGYuZWxlbWVudCkudHJpZ2dlcihcInNjcm9sbENsaWNrXCIsIFt0aGlzLnBvaW50ZXJFdmVudF0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXG5cdFx0XHRcdFx0dGhpcy5kcmFnZ2FibGUgPSBEcmFnZ2FibGUuZ2V0KHRoaXMuZWxlbWVudCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXHRcdC8vIENoZWNrIGlmIGNvbnRlbnQgaXMgbGFyZ2VyIHRoYW4gdmlld2FibGUgYXJlYSBhbmQgaWYgdGhlIHNjcm9sbCBzZXR0aW5ncyBpcyBzZXQgdG8gYWN0dWFsbHkgc2Nyb2xsLlxuXHRcdGNhblNjcm9sbDogZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5vcHRpb25zICYmICh0aGlzLnBhZ2UuaGVpZ2h0KCkgPiAkKHRoaXMuZWxlbWVudCkuaGVpZ2h0KCkpO1xuXHRcdH0sXG5cdFx0ZGVzdHJveTogZnVuY3Rpb24oKSB7XG5cdFx0XHQkKHRoaXMuZWxlbWVudCkucmVtb3ZlRGF0YSgpO1xuXHRcdFx0aWYgKHRoaXMudHdlZW4pIHtcblx0XHRcdFx0dGhpcy50d2Vlbi5raWxsKCk7XG5cdFx0XHR9XG5cblx0XHRcdGlmICh0aGlzLmRyYWdnYWJsZSkge1xuXHRcdFx0XHR0aGlzLmRyYWdnYWJsZS5raWxsKCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlbW92ZSBlbGVtZW50cy5cblx0XHRcdHRoaXMuZWxlbWVudCA9IG51bGw7XG5cdFx0XHR0aGlzLnBhZ2UgPSBudWxsO1xuXHRcdFx0dGhpcy5vcHRpb25zID0gbnVsbDtcblx0XHRcdHRoaXMuX2RlZmF1bHRzID0gbnVsbDtcblx0XHRcdHRoaXMuZHJhZ2dhYmxlID0gbnVsbDtcblx0XHRcdHRoaXMudHdlZW4gPSBudWxsO1xuXHRcdFx0dGhpcy5jYWxjdWxhdGVQcm9ncmVzcyA9IG51bGw7XG5cdFx0fVxuXHR9O1xuXG5cdFBsdWdpbi5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICh0aGlzLmNhblNjcm9sbCgpICYmIHRoaXMub3B0aW9ucy5ieSAhPT0gXCJub25lXCIpIHtcblx0XHRcdGlmICh0aGlzLnR3ZWVuKSB7XG5cdFx0XHRcdGlmICh0aGlzLmlzTG9hZGluZykge1xuXHRcdFx0XHRcdHRoaXMudHdlZW4ucGxheSgpO1xuXHRcdFx0XHRcdHRoaXMuaXNMb2FkaW5nID0gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0VHdlZW5MaXRlLnRvKHRoaXMucGFnZSwgMSwge2F1dG9BbHBoYTogMX0pO1xuXHRcdFx0XHRcdFR3ZWVuTGl0ZS5kZWxheWVkQ2FsbCh0aGlzLm9wdGlvbnMucGF1c2UsIHRoaXMuY2FsY3VsYXRlUHJvZ3Jlc3MpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXG5cdFBsdWdpbi5wcm90b3R5cGUucGF1c2UgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAodGhpcy50d2Vlbikge1xuXHRcdFx0VHdlZW5MaXRlLmtpbGxEZWxheWVkQ2FsbHNUbyh0aGlzLmNhbGN1bGF0ZVByb2dyZXNzKTtcblx0XHRcdHRoaXMudHdlZW4ucGF1c2UoKTtcblx0XHR9XG5cdH07XG5cblx0UGx1Z2luLnByb3RvdHlwZS5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKHRoaXMudHdlZW4pIHtcblx0XHRcdFR3ZWVuTGl0ZS5raWxsRGVsYXllZENhbGxzVG8odGhpcy5jYWxjdWxhdGVQcm9ncmVzcyk7XG5cdFx0XHR0aGlzLnR3ZWVuLmtpbGwoKTtcblx0XHR9XG5cblx0XHR0aGlzLmVsZW1lbnQgPSBudWxsO1xuXHRcdHRoaXMucGFnZSA9IG51bGw7XG5cdH07XG5cblx0Ly8gQSBsaWdodHdlaWdodCBwbHVnaW4gd3JhcHBlciBhcm91bmQgdGhlIGNvbnN0cnVjdG9yIHRoYXQgcHJldmVudHNcblx0Ly8gbXVsdGlwbGUgaW5zdGFudGlhdGlvbnMuXG5cdCQuZm4uYXV0b1Njcm9sbCA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCEkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBwbHVnaW5OYW1lKSkge1xuXHRcdFx0XHQkLmRhdGEodGhpcywgXCJwbHVnaW5fXCIgKyBwbHVnaW5OYW1lLCBuZXcgUGx1Z2luKHRoaXMsIG9wdGlvbnMpKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fTtcbn0pKGpRdWVyeSwgd2luZG93LCBkb2N1bWVudCk7XG5cbi8qIGV4cG9ydGVkIFdJREdFVF9DT01NT05fQ09ORklHICovXG52YXIgV0lER0VUX0NPTU1PTl9DT05GSUcgPSB7XG4gIEFVVEhfUEFUSF9VUkw6IFwidjEvd2lkZ2V0L2F1dGhcIixcbiAgTE9HR0VSX0NMSUVOVF9JRDogXCIxMDg4NTI3MTQ3MTA5LTZxMW8ydnRpaG4zNDI5MnBqdDRja2htaGNrMHJrMG83LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tXCIsXG4gIExPR0dFUl9DTElFTlRfU0VDUkVUOiBcIm5sWnlyY1BMZzZvRXdPOWY5V2ZuMjlXaFwiLFxuICBMT0dHRVJfUkVGUkVTSF9UT0tFTjogXCIxL3h6dDRrd3pFMUg3VzlWbktCOGNBYUN4NnpiNEVzNG5LRW9xYVlIZFREMTVJZ09ySkR0ZHVuNnpLNlhpQVRDS1RcIixcbiAgU1RPUkVfVVJMOiBcImh0dHBzOi8vc3RvcmUtZG90LXJ2YXNlcnZlcjIuYXBwc3BvdC5jb20vXCJcbn07XG4vKiBnbG9iYWwgV2ViRm9udCAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uID0gUmlzZVZpc2lvbi5Db21tb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uLlV0aWxpdGllcyA9IChmdW5jdGlvbigpIHtcblxuICBmdW5jdGlvbiBnZXRGb250Q3NzU3R5bGUoY2xhc3NOYW1lLCBmb250T2JqKSB7XG4gICAgdmFyIGZhbWlseSA9IFwiZm9udC1mYW1pbHk6IFwiICsgZGVjb2RlVVJJQ29tcG9uZW50KGZvbnRPYmouZm9udC5mYW1pbHkpLnJlcGxhY2UoLycvZywgXCJcIikgKyBcIjsgXCI7XG4gICAgdmFyIGNvbG9yID0gXCJjb2xvcjogXCIgKyAoZm9udE9iai5jb2xvciA/IGZvbnRPYmouY29sb3IgOiBmb250T2JqLmZvcmVjb2xvcikgKyBcIjsgXCI7XG4gICAgdmFyIHNpemUgPSBcImZvbnQtc2l6ZTogXCIgKyAoZm9udE9iai5zaXplLmluZGV4T2YoXCJweFwiKSA9PT0gLTEgPyBmb250T2JqLnNpemUgKyBcInB4OyBcIiA6IGZvbnRPYmouc2l6ZSArIFwiOyBcIik7XG4gICAgdmFyIHdlaWdodCA9IFwiZm9udC13ZWlnaHQ6IFwiICsgKGZvbnRPYmouYm9sZCA/IFwiYm9sZFwiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIGl0YWxpYyA9IFwiZm9udC1zdHlsZTogXCIgKyAoZm9udE9iai5pdGFsaWMgPyBcIml0YWxpY1wiIDogXCJub3JtYWxcIikgKyBcIjsgXCI7XG4gICAgdmFyIHVuZGVybGluZSA9IFwidGV4dC1kZWNvcmF0aW9uOiBcIiArIChmb250T2JqLnVuZGVybGluZSA/IFwidW5kZXJsaW5lXCIgOiBcIm5vbmVcIikgKyBcIjsgXCI7XG4gICAgdmFyIGhpZ2hsaWdodCA9IFwiYmFja2dyb3VuZC1jb2xvcjogXCIgKyAoZm9udE9iai5oaWdobGlnaHRDb2xvciA/IGZvbnRPYmouaGlnaGxpZ2h0Q29sb3IgOiBmb250T2JqLmJhY2tjb2xvcikgKyBcIjtcIjtcblxuICAgIHJldHVybiBcIi5cIiArIGNsYXNzTmFtZSArIFwiIHtcIiArIGZhbWlseSArIGNvbG9yICsgc2l6ZSArIHdlaWdodCArIGl0YWxpYyArIHVuZGVybGluZSArIGhpZ2hsaWdodCArIFwifVwiO1xuICB9XG5cbiAgZnVuY3Rpb24gYWRkQ1NTUnVsZXMocnVsZXMpIHtcbiAgICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbGVuZ3RoID0gcnVsZXMubGVuZ3RoOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKHJ1bGVzW2ldKSk7XG4gICAgfVxuXG4gICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZSk7XG4gIH1cblxuICAvKlxuICAgKiBMb2FkcyBHb29nbGUgb3IgY3VzdG9tIGZvbnRzLCBpZiBhcHBsaWNhYmxlLCBhbmQgaW5qZWN0cyBDU1Mgc3R5bGVzXG4gICAqIGludG8gdGhlIGhlYWQgb2YgdGhlIGRvY3VtZW50LlxuICAgKlxuICAgKiBAcGFyYW0gICAgYXJyYXkgICAgc2V0dGluZ3MgICAgQXJyYXkgb2Ygb2JqZWN0cyB3aXRoIHRoZSBmb2xsb3dpbmcgZm9ybTpcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbe1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjbGFzc1wiOiBcImRhdGVcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZm9udFNldHRpbmdcIjoge1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvbGQ6IHRydWUsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiYmxhY2tcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250OiB7XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmYW1pbHk6IFwiQWtyb25pbVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udDogXCJBa3JvbmltXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIlZlcmRhbmFcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiZ29vZ2xlXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IFwiaHR0cDovL2N1c3RvbS1mb250LXVybFwiXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoaWdobGlnaHRDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0YWxpYzogZmFsc2UsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2l6ZTogXCIyMFwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVuZGVybGluZTogZmFsc2VcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XVxuICAgKlxuICAgKiAgICAgICAgICAgb2JqZWN0ICAgY29udGVudERvYyAgICBEb2N1bWVudCBvYmplY3QgaW50byB3aGljaCB0byBpbmplY3Qgc3R5bGVzXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFuZCBsb2FkIGZvbnRzIChvcHRpb25hbCkuXG4gICAqL1xuICBmdW5jdGlvbiBsb2FkRm9udHMoc2V0dGluZ3MsIGNiKSB7XG4gICAgdmFyIGZhbWlsaWVzID0gbnVsbCxcbiAgICAgIGdvb2dsZUZhbWlsaWVzID0gW10sXG4gICAgICBjdXN0b21GYW1pbGllcyA9IFtdLFxuICAgICAgY3VzdG9tVXJscyA9IFtdO1xuXG4gICAgZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgICBpZiAoY2IgJiYgdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgY2IoKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBvbkdvb2dsZUZvbnRzTG9hZGVkKCkge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG5cbiAgICBpZiAoIXNldHRpbmdzIHx8IHNldHRpbmdzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBDaGVjayBmb3IgY3VzdG9tIGNzcyBjbGFzcyBuYW1lcyBhbmQgYWRkIHJ1bGVzIGlmIHNvXG4gICAgc2V0dGluZ3MuZm9yRWFjaChmdW5jdGlvbihpdGVtKSB7XG4gICAgICBpZiAoaXRlbS5jbGFzcyAmJiBpdGVtLmZvbnRTdHlsZSkge1xuICAgICAgICBhZGRDU1NSdWxlcyhbIGdldEZvbnRDc3NTdHlsZShpdGVtLmNsYXNzLCBpdGVtLmZvbnRTdHlsZSkgXSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICAvLyBHb29nbGUgZm9udHNcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHNldHRpbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoc2V0dGluZ3NbaV0uZm9udFN0eWxlICYmIHNldHRpbmdzW2ldLmZvbnRTdHlsZS5mb250LnR5cGUgJiZcbiAgICAgICAgKHNldHRpbmdzW2ldLmZvbnRTdHlsZS5mb250LnR5cGUgPT09IFwiZ29vZ2xlXCIpKSB7XG4gICAgICAgIC8vIFJlbW92ZSBmYWxsYmFjayBmb250LlxuICAgICAgICBmYW1pbGllcyA9IHNldHRpbmdzW2ldLmZvbnRTdHlsZS5mb250LmZhbWlseS5zcGxpdChcIixcIilbMF07XG5cbiAgICAgICAgLy8gc3RyaXAgcG9zc2libGUgc2luZ2xlIHF1b3Rlc1xuICAgICAgICBmYW1pbGllcyA9IGZhbWlsaWVzLnJlcGxhY2UoLycvZywgXCJcIik7XG5cbiAgICAgICAgZ29vZ2xlRmFtaWxpZXMucHVzaChmYW1pbGllcyk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gQ3VzdG9tIGZvbnRzXG4gICAgZm9yIChpID0gMDsgaSA8IHNldHRpbmdzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAoc2V0dGluZ3NbaV0uZm9udFN0eWxlICYmIHNldHRpbmdzW2ldLmZvbnRTdHlsZS5mb250LnR5cGUgJiZcbiAgICAgICAgKHNldHRpbmdzW2ldLmZvbnRTdHlsZS5mb250LnR5cGUgPT09IFwiY3VzdG9tXCIpKSB7XG4gICAgICAgIC8vIGRlY29kZSB2YWx1ZSBhbmQgc3RyaXAgc2luZ2xlIHF1b3Rlc1xuICAgICAgICBjdXN0b21GYW1pbGllcy5wdXNoKGRlY29kZVVSSUNvbXBvbmVudChzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC5mYW1pbHkpLnJlcGxhY2UoLycvZywgXCJcIikpO1xuICAgICAgICAvLyBzdHJpcCBzaW5nbGUgcXVvdGVzXG4gICAgICAgIGN1c3RvbVVybHMucHVzaChzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC51cmwucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoZ29vZ2xlRmFtaWxpZXMubGVuZ3RoID09PSAwICYmIGN1c3RvbUZhbWlsaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAvLyBMb2FkIHRoZSBmb250c1xuICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjdXN0b21GYW1pbGllcy5sZW5ndGg7IGogKz0gMSkge1xuICAgICAgICBsb2FkQ3VzdG9tRm9udChjdXN0b21GYW1pbGllc1tqXSwgY3VzdG9tVXJsc1tqXSk7XG4gICAgICB9XG5cbiAgICAgIGlmIChnb29nbGVGYW1pbGllcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxvYWRHb29nbGVGb250cyhnb29nbGVGYW1pbGllcywgb25Hb29nbGVGb250c0xvYWRlZCk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBsb2FkQ3VzdG9tRm9udChmYW1pbHksIHVybCwgY29udGVudERvYykge1xuICAgIHZhciBzaGVldCA9IG51bGw7XG4gICAgdmFyIHJ1bGUgPSBcImZvbnQtZmFtaWx5OiBcIiArIGZhbWlseSArIFwiOyBcIiArIFwic3JjOiB1cmwoJ1wiICsgdXJsICsgXCInKTtcIjtcblxuICAgIGNvbnRlbnREb2MgPSBjb250ZW50RG9jIHx8IGRvY3VtZW50O1xuXG4gICAgc2hlZXQgPSBjb250ZW50RG9jLnN0eWxlU2hlZXRzWzBdO1xuXG4gICAgaWYgKHNoZWV0ICE9PSBudWxsKSB7XG4gICAgICBzaGVldC5hZGRSdWxlKFwiQGZvbnQtZmFjZVwiLCBydWxlKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBsb2FkR29vZ2xlRm9udHMoZmFtaWxpZXMsIGNiKSB7XG4gICAgV2ViRm9udC5sb2FkKHtcbiAgICAgIGdvb2dsZToge1xuICAgICAgICBmYW1pbGllczogZmFtaWxpZXNcbiAgICAgIH0sXG4gICAgICBhY3RpdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoY2IgJiYgdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICBjYigpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgaW5hY3RpdmU6IGZ1bmN0aW9uKCkge1xuICAgICAgICBpZiAoY2IgJiYgdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICBjYigpO1xuICAgICAgICB9XG4gICAgICB9LFxuICAgICAgdGltZW91dDogMjAwMFxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9hZFNjcmlwdCggc3JjICkge1xuICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cbiAgICBzY3JpcHQuc3JjID0gc3JjO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoIHNjcmlwdCApO1xuICB9XG5cbiAgZnVuY3Rpb24gcHJlbG9hZEltYWdlcyh1cmxzKSB7XG4gICAgdmFyIGxlbmd0aCA9IHVybHMubGVuZ3RoLFxuICAgICAgaW1hZ2VzID0gW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBpbWFnZXNbaV0gPSBuZXcgSW1hZ2UoKTtcbiAgICAgIGltYWdlc1tpXS5zcmMgPSB1cmxzW2ldO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIGN1cnJlbnQgVVJJIHF1ZXJ5IHBhcmFtXG4gICAqL1xuICBmdW5jdGlvbiBnZXRRdWVyeVBhcmFtZXRlcihwYXJhbSkge1xuICAgIHJldHVybiBnZXRRdWVyeVN0cmluZ1BhcmFtZXRlcihwYXJhbSwgd2luZG93LmxvY2F0aW9uLnNlYXJjaC5zdWJzdHJpbmcoMSkpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgcXVlcnkgcGFyYW1ldGVyIGZyb20gYSBxdWVyeSBzdHJpbmdcbiAgICovXG4gIGZ1bmN0aW9uIGdldFF1ZXJ5U3RyaW5nUGFyYW1ldGVyKHBhcmFtLCBxdWVyeSkge1xuICAgIHZhciB2YXJzID0gcXVlcnkuc3BsaXQoXCImXCIpLFxuICAgICAgcGFpcjtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmFycy5sZW5ndGg7IGkrKykge1xuICAgICAgcGFpciA9IHZhcnNbaV0uc3BsaXQoXCI9XCIpO1xuXG4gICAgICBpZiAocGFpclswXSA9PSBwYXJhbSkgeyAvLyBqc2hpbnQgaWdub3JlOmxpbmVcbiAgICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChwYWlyWzFdKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gXCJcIjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZGF0ZSBvYmplY3QgZnJvbSBwbGF5ZXIgdmVyc2lvbiBzdHJpbmdcbiAgICovXG4gIGZ1bmN0aW9uIGdldERhdGVPYmplY3RGcm9tUGxheWVyVmVyc2lvblN0cmluZyhwbGF5ZXJWZXJzaW9uKSB7XG4gICAgdmFyIHJlZ2dpZSA9IC8oXFxkezR9KVxcLihcXGR7Mn0pXFwuKFxcZHsyfSlcXC4oXFxkezJ9KVxcLihcXGR7Mn0pLztcbiAgICB2YXIgZGF0ZUFycmF5ID0gcmVnZ2llLmV4ZWMocGxheWVyVmVyc2lvbik7XG4gICAgaWYgKGRhdGVBcnJheSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKFxuICAgICAgICAoK2RhdGVBcnJheVsxXSksXG4gICAgICAgICAgKCtkYXRlQXJyYXlbMl0pLTEsIC8vIENhcmVmdWwsIG1vbnRoIHN0YXJ0cyBhdCAwIVxuICAgICAgICAoK2RhdGVBcnJheVszXSksXG4gICAgICAgICgrZGF0ZUFycmF5WzRdKSxcbiAgICAgICAgKCtkYXRlQXJyYXlbNV0pXG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gZ2V0UmlzZUNhY2hlRXJyb3JNZXNzYWdlKHN0YXR1c0NvZGUpIHtcbiAgICB2YXIgZXJyb3JNZXNzYWdlID0gXCJcIjtcbiAgICBzd2l0Y2ggKHN0YXR1c0NvZGUpIHtcbiAgICAgIGNhc2UgNDA0OlxuICAgICAgICBlcnJvck1lc3NhZ2UgPSBcIlRoZSBmaWxlIGRvZXMgbm90IGV4aXN0IG9yIGNhbm5vdCBiZSBhY2Nlc3NlZC5cIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIDUwNzpcbiAgICAgICAgZXJyb3JNZXNzYWdlID0gXCJUaGVyZSBpcyBub3QgZW5vdWdoIGRpc2sgc3BhY2UgdG8gc2F2ZSB0aGUgZmlsZSBvbiBSaXNlIENhY2hlLlwiO1xuICAgICAgICBicmVhaztcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGVycm9yTWVzc2FnZSA9IFwiVGhlcmUgd2FzIGEgcHJvYmxlbSByZXRyaWV2aW5nIHRoZSBmaWxlIGZyb20gUmlzZSBDYWNoZS5cIjtcbiAgICB9XG5cbiAgICByZXR1cm4gZXJyb3JNZXNzYWdlO1xuICB9XG5cbiAgZnVuY3Rpb24gdW5lc2NhcGVIVE1MKGh0bWwpIHtcbiAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcblxuICAgIGRpdi5pbm5lckhUTUwgPSBodG1sO1xuXG4gICAgcmV0dXJuIGRpdi50ZXh0Q29udGVudDtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhc0ludGVybmV0Q29ubmVjdGlvbihmaWxlUGF0aCwgY2FsbGJhY2spIHtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICBpZiAoIWZpbGVQYXRoIHx8ICFjYWxsYmFjayB8fCB0eXBlb2YgY2FsbGJhY2sgIT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHhoci5vcGVuKFwiSEVBRFwiLCBmaWxlUGF0aCArIFwiP2NiPVwiICsgbmV3IERhdGUoKS5nZXRUaW1lKCksIGZhbHNlKTtcblxuICAgIHRyeSB7XG4gICAgICB4aHIuc2VuZCgpO1xuXG4gICAgICBjYWxsYmFjaygoeGhyLnN0YXR1cyA+PSAyMDAgJiYgeGhyLnN0YXR1cyA8IDMwNCkpO1xuXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY2FsbGJhY2soZmFsc2UpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBDaGVjayBpZiBjaHJvbWUgdmVyc2lvbiBpcyB1bmRlciBhIGNlcnRhaW4gdmVyc2lvblxuICAgKi9cbiAgZnVuY3Rpb24gaXNMZWdhY3koKSB7XG4gICAgdmFyIGxlZ2FjeVZlcnNpb24gPSAyNTtcblxuICAgIHZhciBtYXRjaCA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0Nocm9tZVxcLyhcXFMrKS8pO1xuICAgIHZhciB2ZXJzaW9uID0gbWF0Y2ggPyBtYXRjaFsxXSA6IDA7XG5cbiAgICBpZiAodmVyc2lvbikge1xuICAgICAgdmVyc2lvbiA9IHBhcnNlSW50KHZlcnNpb24uc3Vic3RyaW5nKDAsdmVyc2lvbi5pbmRleE9mKFwiLlwiKSkpO1xuXG4gICAgICBpZiAodmVyc2lvbiA8PSBsZWdhY3lWZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8qKlxuICAgKiBBZGRzIGh0dHA6Ly8gb3IgaHR0cHM6Ly8gcHJvdG9jb2wgdG8gdXJsIGlmIHRoZSBwcm90b2NvbCBpcyBtaXNzaW5nXG4gICAqL1xuICBmdW5jdGlvbiBhZGRQcm90b2NvbCh1cmwsIHNlY3VyZSkge1xuICAgIGlmICghL14oPzpmfGh0KXRwcz9cXDpcXC9cXC8vLnRlc3QodXJsKSkge1xuICAgICAgdXJsID0gKChzZWN1cmUpID8gXCJodHRwczovL1wiIDogXCJodHRwOi8vXCIpICsgdXJsO1xuICAgIH1cbiAgICByZXR1cm4gdXJsO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBhZGRQcm90b2NvbDogICAgICAgICAgICAgIGFkZFByb3RvY29sLFxuICAgIGdldFF1ZXJ5UGFyYW1ldGVyOiAgICAgICAgZ2V0UXVlcnlQYXJhbWV0ZXIsXG4gICAgZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXI6ICBnZXRRdWVyeVN0cmluZ1BhcmFtZXRlcixcbiAgICBnZXRGb250Q3NzU3R5bGU6ICAgICAgICAgIGdldEZvbnRDc3NTdHlsZSxcbiAgICBhZGRDU1NSdWxlczogICAgICAgICAgICAgIGFkZENTU1J1bGVzLFxuICAgIGxvYWRGb250czogICAgICAgICAgICAgICAgbG9hZEZvbnRzLFxuICAgIGxvYWRDdXN0b21Gb250OiAgICAgICAgICAgbG9hZEN1c3RvbUZvbnQsXG4gICAgbG9hZEdvb2dsZUZvbnRzOiAgICAgICAgICBsb2FkR29vZ2xlRm9udHMsXG4gICAgbG9hZFNjcmlwdDogICAgICAgICAgICAgICBsb2FkU2NyaXB0LFxuICAgIHByZWxvYWRJbWFnZXM6ICAgICAgICAgICAgcHJlbG9hZEltYWdlcyxcbiAgICBnZXRSaXNlQ2FjaGVFcnJvck1lc3NhZ2U6IGdldFJpc2VDYWNoZUVycm9yTWVzc2FnZSxcbiAgICB1bmVzY2FwZUhUTUw6ICAgICAgICAgICAgIHVuZXNjYXBlSFRNTCxcbiAgICBoYXNJbnRlcm5ldENvbm5lY3Rpb246ICAgIGhhc0ludGVybmV0Q29ubmVjdGlvbixcbiAgICBpc0xlZ2FjeTogICAgICAgICAgICAgICAgIGlzTGVnYWN5LFxuICAgIGdldERhdGVPYmplY3RGcm9tUGxheWVyVmVyc2lvblN0cmluZzogZ2V0RGF0ZU9iamVjdEZyb21QbGF5ZXJWZXJzaW9uU3RyaW5nXG4gIH07XG59KSgpO1xuXG4vKiBnbG9iYWwgV0lER0VUX0NPTU1PTl9DT05GSUcgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMgPSAoZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gICB2YXIgZGlzcGxheUlkID0gXCJcIixcbiAgICAgY29tcGFueUlkID0gXCJcIixcbiAgICAgdmVyc2lvbiA9IG51bGw7XG5cbiAgLypcbiAgICogIFByaXZhdGUgTWV0aG9kc1xuICAgKi9cblxuICAvKiBSZXRyaWV2ZSBwYXJhbWV0ZXJzIHRvIHBhc3MgdG8gdGhlIGV2ZW50IGxvZ2dlci4gKi9cbiAgZnVuY3Rpb24gZ2V0RXZlbnRQYXJhbXMocGFyYW1zLCBjYikge1xuICAgIHZhciBqc29uID0gbnVsbDtcblxuICAgIC8vIGV2ZW50IGlzIHJlcXVpcmVkLlxuICAgIGlmIChwYXJhbXMuZXZlbnQpIHtcbiAgICAgIGpzb24gPSBwYXJhbXM7XG5cbiAgICAgIGlmIChqc29uLmZpbGVfdXJsKSB7XG4gICAgICAgIGpzb24uZmlsZV9mb3JtYXQgPSBnZXRGaWxlRm9ybWF0KGpzb24uZmlsZV91cmwpO1xuICAgICAgfVxuXG4gICAgICBqc29uLmNvbXBhbnlfaWQgPSBjb21wYW55SWQ7XG4gICAgICBqc29uLmRpc3BsYXlfaWQgPSBkaXNwbGF5SWQ7XG5cbiAgICAgIGlmICh2ZXJzaW9uKSB7XG4gICAgICAgIGpzb24udmVyc2lvbiA9IHZlcnNpb247XG4gICAgICB9XG5cbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBzdWZmaXggZm9yIEJRIHRhYmxlIG5hbWUuXG4gIGZ1bmN0aW9uIGdldFN1ZmZpeCgpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCksXG4gICAgICB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCkgKyAxLFxuICAgICAgZGF5ID0gZGF0ZS5nZXRVVENEYXRlKCk7XG5cbiAgICBpZiAobW9udGggPCAxMCkge1xuICAgICAgbW9udGggPSBcIjBcIiArIG1vbnRoO1xuICAgIH1cblxuICAgIGlmIChkYXkgPCAxMCkge1xuICAgICAgZGF5ID0gXCIwXCIgKyBkYXk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCIgKyB5ZWFyICsgbW9udGggKyBkYXk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGdldEZpbGVGb3JtYXQodXJsKSB7XG4gICAgdmFyIGhhc1BhcmFtcyA9IC9bPyMmXS8sXG4gICAgICBzdHI7XG5cbiAgICBpZiAoIXVybCB8fCB0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzdHIgPSB1cmwuc3Vic3RyKHVybC5sYXN0SW5kZXhPZihcIi5cIikgKyAxKTtcblxuICAgIC8vIGRvbid0IGluY2x1ZGUgYW55IHBhcmFtcyBhZnRlciB0aGUgZmlsZW5hbWVcbiAgICBpZiAoaGFzUGFyYW1zLnRlc3Qoc3RyKSkge1xuICAgICAgc3RyID0gc3RyLnN1YnN0cigwICwoc3RyLmluZGV4T2YoXCI/XCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIj9cIikgOiBzdHIubGVuZ3RoKTtcblxuICAgICAgc3RyID0gc3RyLnN1YnN0cigwLCAoc3RyLmluZGV4T2YoXCIjXCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIiNcIikgOiBzdHIubGVuZ3RoKTtcblxuICAgICAgc3RyID0gc3RyLnN1YnN0cigwLCAoc3RyLmluZGV4T2YoXCImXCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIiZcIikgOiBzdHIubGVuZ3RoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRJbnNlcnREYXRhKHBhcmFtcykge1xuICAgIHZhciBCQVNFX0lOU0VSVF9TQ0hFTUEgPSB7XG4gICAgICBcImtpbmRcIjogXCJiaWdxdWVyeSN0YWJsZURhdGFJbnNlcnRBbGxSZXF1ZXN0XCIsXG4gICAgICBcInNraXBJbnZhbGlkUm93c1wiOiBmYWxzZSxcbiAgICAgIFwiaWdub3JlVW5rbm93blZhbHVlc1wiOiBmYWxzZSxcbiAgICAgIFwidGVtcGxhdGVTdWZmaXhcIjogZ2V0U3VmZml4KCksXG4gICAgICBcInJvd3NcIjogW3tcbiAgICAgICAgXCJpbnNlcnRJZFwiOiBcIlwiXG4gICAgICB9XVxuICAgIH0sXG4gICAgZGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoQkFTRV9JTlNFUlRfU0NIRU1BKSk7XG5cbiAgICBkYXRhLnJvd3NbMF0uaW5zZXJ0SWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMikudG9VcHBlckNhc2UoKTtcbiAgICBkYXRhLnJvd3NbMF0uanNvbiA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocGFyYW1zKSk7XG4gICAgZGF0YS5yb3dzWzBdLmpzb24udHMgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvZ0V2ZW50KHRhYmxlLCBwYXJhbXMpIHtcbiAgICBnZXRFdmVudFBhcmFtcyhwYXJhbXMsIGZ1bmN0aW9uKGpzb24pIHtcbiAgICAgIGlmIChqc29uICE9PSBudWxsKSB7XG4gICAgICAgIFJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlci5sb2codGFibGUsIGpzb24pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9nRXZlbnRUb1BsYXllcih0YWJsZSwgcGFyYW1zKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRvcC5wb3N0VG9QbGF5ZXIoIHtcbiAgICAgICAgbWVzc2FnZTogXCJ3aWRnZXQtbG9nXCIsXG4gICAgICAgIHRhYmxlOiB0YWJsZSxcbiAgICAgICAgcGFyYW1zOiBKU09OLnN0cmluZ2lmeShwYXJhbXMpLFxuICAgICAgICBzdWZmaXg6IGdldFN1ZmZpeCgpXG4gICAgICB9ICk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIndpZGdldC1jb21tb24ubG9nRXZlbnRUb1BsYXllclwiLCBlcnIpO1xuICAgIH1cbiAgfVxuXG4gIC8qIFNldCB0aGUgQ29tcGFueSBhbmQgRGlzcGxheSBJRHMuICovXG4gIGZ1bmN0aW9uIHNldElkcyhjb21wYW55LCBkaXNwbGF5KSB7XG4gICAgY29tcGFueUlkID0gY29tcGFueTtcbiAgICBkaXNwbGF5SWQgPSBkaXNwbGF5O1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0VmVyc2lvbih2YWx1ZSkge1xuICAgIHZlcnNpb24gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJnZXRJbnNlcnREYXRhXCI6IGdldEluc2VydERhdGEsXG4gICAgXCJnZXRGaWxlRm9ybWF0XCI6IGdldEZpbGVGb3JtYXQsXG4gICAgXCJsb2dFdmVudFwiOiBsb2dFdmVudCxcbiAgICBcImxvZ0V2ZW50VG9QbGF5ZXJcIjogbG9nRXZlbnRUb1BsYXllcixcbiAgICBcInNldElkc1wiOiBzZXRJZHMsXG4gICAgXCJzZXRWZXJzaW9uXCI6IHNldFZlcnNpb25cbiAgfTtcbn0pKCk7XG5cblJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlciA9IChmdW5jdGlvbih1dGlscykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgUkVGUkVTSF9VUkwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92My90b2tlbj9jbGllbnRfaWQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX0lEICtcbiAgICAgIFwiJmNsaWVudF9zZWNyZXQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX1NFQ1JFVCArXG4gICAgICBcIiZyZWZyZXNoX3Rva2VuPVwiICsgV0lER0VUX0NPTU1PTl9DT05GSUcuTE9HR0VSX1JFRlJFU0hfVE9LRU4gK1xuICAgICAgXCImZ3JhbnRfdHlwZT1yZWZyZXNoX3Rva2VuXCI7XG5cbiAgdmFyIHNlcnZpY2VVcmwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2JpZ3F1ZXJ5L3YyL3Byb2plY3RzL2NsaWVudC1zaWRlLWV2ZW50cy9kYXRhc2V0cy9XaWRnZXRfRXZlbnRzL3RhYmxlcy9UQUJMRV9JRC9pbnNlcnRBbGxcIixcbiAgICB0aHJvdHRsZSA9IGZhbHNlLFxuICAgIHRocm90dGxlRGVsYXkgPSAxMDAwLFxuICAgIGxhc3RFdmVudCA9IFwiXCIsXG4gICAgcmVmcmVzaERhdGUgPSAwLFxuICAgIHRva2VuID0gXCJcIjtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiByZWZyZXNoVG9rZW4oY2IpIHtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICBpZiAobmV3IERhdGUoKSAtIHJlZnJlc2hEYXRlIDwgMzU4MDAwMCkge1xuICAgICAgcmV0dXJuIGNiKHt9KTtcbiAgICB9XG5cbiAgICB4aHIub3BlbihcIlBPU1RcIiwgUkVGUkVTSF9VUkwsIHRydWUpO1xuICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXNwID0ge307XG4gICAgICB0cnkge1xuICAgICAgICByZXNwID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNhbid0IHJlZnJlc2ggbG9nZ2VyIHRva2VuIC0gXCIsIGUubWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBjYih7IHRva2VuOiByZXNwLmFjY2Vzc190b2tlbiwgcmVmcmVzaGVkQXQ6IG5ldyBEYXRlKCkgfSk7XG4gICAgfTtcblxuICAgIHhoci5zZW5kKCk7XG4gIH1cblxuICBmdW5jdGlvbiBpc1Rocm90dGxlZChldmVudCkge1xuICAgIHJldHVybiB0aHJvdHRsZSAmJiAobGFzdEV2ZW50ID09PSBldmVudCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGxvZyh0YWJsZU5hbWUsIHBhcmFtcykge1xuICAgIGlmICghdGFibGVOYW1lIHx8ICFwYXJhbXMgfHwgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShcImV2ZW50XCIpICYmICFwYXJhbXMuZXZlbnQpIHx8XG4gICAgICAocGFyYW1zLmhhc093blByb3BlcnR5KFwiZXZlbnRcIikgJiYgaXNUaHJvdHRsZWQocGFyYW1zLmV2ZW50KSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBkb24ndCBsb2cgaWYgZGlzcGxheSBpZCBpcyBpbnZhbGlkIG9yIHByZXZpZXcvbG9jYWxcbiAgICBpZiAoIXBhcmFtcy5kaXNwbGF5X2lkIHx8IHBhcmFtcy5kaXNwbGF5X2lkID09PSBcInByZXZpZXdcIiB8fCBwYXJhbXMuZGlzcGxheV9pZCA9PT0gXCJkaXNwbGF5X2lkXCIgfHxcbiAgICAgIHBhcmFtcy5kaXNwbGF5X2lkID09PSBcImRpc3BsYXlJZFwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlmICggdG9wLnBvc3RUb1BsYXllciAmJiB0b3AuZW5hYmxlV2lkZ2V0TG9nZ2luZyApIHtcbiAgICAgICAgLy8gc2VuZCBsb2cgZGF0YSB0byBwbGF5ZXIgaW5zdGVhZCBvZiBCUVxuICAgICAgICByZXR1cm4gdXRpbHMubG9nRXZlbnRUb1BsYXllciggdGFibGVOYW1lLCBwYXJhbXMgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoICggZSApIHtcbiAgICAgIGNvbnNvbGUubG9nKCBcIndpZGdldC1jb21tb246IGxvZ2dlclwiLCBlICk7XG4gICAgfVxuXG4gICAgdGhyb3R0bGUgPSB0cnVlO1xuICAgIGxhc3RFdmVudCA9IHBhcmFtcy5ldmVudDtcblxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgdGhyb3R0bGUgPSBmYWxzZTtcbiAgICB9LCB0aHJvdHRsZURlbGF5KTtcblxuICAgIGZ1bmN0aW9uIGluc2VydFdpdGhUb2tlbihyZWZyZXNoRGF0YSkge1xuICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpLFxuICAgICAgICBpbnNlcnREYXRhLCB1cmw7XG5cbiAgICAgIHVybCA9IHNlcnZpY2VVcmwucmVwbGFjZShcIlRBQkxFX0lEXCIsIHRhYmxlTmFtZSk7XG4gICAgICByZWZyZXNoRGF0ZSA9IHJlZnJlc2hEYXRhLnJlZnJlc2hlZEF0IHx8IHJlZnJlc2hEYXRlO1xuICAgICAgdG9rZW4gPSByZWZyZXNoRGF0YS50b2tlbiB8fCB0b2tlbjtcbiAgICAgIGluc2VydERhdGEgPSB1dGlscy5nZXRJbnNlcnREYXRhKHBhcmFtcyk7XG5cbiAgICAgIC8vIEluc2VydCB0aGUgZGF0YS5cbiAgICAgIHhoci5vcGVuKFwiUE9TVFwiLCB1cmwsIHRydWUpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJBdXRob3JpemF0aW9uXCIsIFwiQmVhcmVyIFwiICsgdG9rZW4pO1xuXG4gICAgICBpZiAocGFyYW1zLmNiICYmIHR5cGVvZiBwYXJhbXMuY2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB4aHIub25sb2FkZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcGFyYW1zLmNiKHhoci5yZXNwb25zZSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KGluc2VydERhdGEpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVmcmVzaFRva2VuKGluc2VydFdpdGhUb2tlbik7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwibG9nXCI6IGxvZ1xuICB9O1xufSkoUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMpO1xuXG4vKiBqc2hpbnQgaWdub3JlOnN0YXJ0ICovXG52YXIgX2dhcSA9IF9nYXEgfHwgW107XG5cbl9nYXEucHVzaChbXCJfc2V0QWNjb3VudFwiLCBcIlVBLTU3MDkyMTU5LTEzXCJdKTtcbl9nYXEucHVzaChbXCJfdHJhY2tQYWdldmlld1wiXSk7XG5cbihmdW5jdGlvbigpIHtcbiAgdmFyIGdhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTsgZ2EudHlwZSA9IFwidGV4dC9qYXZhc2NyaXB0XCI7IGdhLmFzeW5jID0gdHJ1ZTtcbiAgZ2Euc3JjID0gKFwiaHR0cHM6XCIgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyBcImh0dHBzOi8vc3NsXCIgOiBcImh0dHA6Ly93d3dcIikgKyBcIi5nb29nbGUtYW5hbHl0aWNzLmNvbS9nYS5qc1wiO1xuICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpWzBdOyBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhLCBzKTtcbn0pKCk7XG4vKiBqc2hpbnQgaWdub3JlOmVuZCAqL1xuXG4vKiBnbG9iYWwgZ2FkZ2V0czpmYWxzZSwgV2ViRm9udDpmYWxzZSAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5SaXNlVmlzaW9uLlRleHQgPSB7fTtcblxuUmlzZVZpc2lvbi5UZXh0ID0gKGZ1bmN0aW9uKGdhZGdldHMsIFdlYkZvbnQpIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9hZGRpdGlvbmFsUGFyYW1zID0gbnVsbCxcbiAgICBfcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpLFxuICAgIF91dGlscyA9IFJpc2VWaXNpb24uQ29tbW9uLlV0aWxpdGllcztcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfbG9hZEdvb2dsZUZvbnRzKGZvbnRzLCBjYikge1xuXG4gICAgZnVuY3Rpb24gY29tcGxldGUoKSB7XG4gICAgICBpZiAoY2IgJiYgdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIpe1xuICAgICAgICBjYigpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChBcnJheS5pc0FycmF5KGZvbnRzKSAmJiBmb250cy5sZW5ndGggPiAwKSB7XG4gICAgICBXZWJGb250LmxvYWQoe1xuICAgICAgICBnb29nbGU6IHtcbiAgICAgICAgICBmYW1pbGllczogZm9udHNcbiAgICAgICAgfSxcbiAgICAgICAgdGltZW91dDogMjAwMCxcbiAgICAgICAgYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjb21wbGV0ZSgpO1xuICAgICAgICB9LFxuICAgICAgICBpbmFjdGl2ZTogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKFwiTm8gZ29vZ2xlIGZvbnRzIHdlcmUgbG9hZGVkXCIpO1xuICAgICAgICAgIGNvbXBsZXRlKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGZvbnRpbmFjdGl2ZTogZnVuY3Rpb24oZmFtaWx5TmFtZSkge1xuICAgICAgICAgIF9sb2dFdmVudCh7XG4gICAgICAgICAgICBcImV2ZW50XCI6IFwiZXJyb3JcIixcbiAgICAgICAgICAgIFwiZXZlbnRfZGV0YWlsc1wiOiBcIkdvb2dsZSBmb250IG5vdCBsb2FkZWRcIixcbiAgICAgICAgICAgIFwiZXJyb3JfZGV0YWlsc1wiOiBmYW1pbHlOYW1lXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNvbXBsZXRlKCk7XG4gICAgfVxuXG4gIH1cblxuICBmdW5jdGlvbiBfaW5pdCgpIHtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBhZ2VcIikuaW5uZXJIVE1MID0gX2FkZGl0aW9uYWxQYXJhbXMuZGF0YTtcblxuICAgIF9sb2FkR29vZ2xlRm9udHMoX2FkZGl0aW9uYWxQYXJhbXMuZ29vZ2xlRm9udHMsIGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGxvYWQgY3VzdG9tIGZvbnRzXG4gICAgICAkLmVhY2goX2FkZGl0aW9uYWxQYXJhbXMuY3VzdG9tRm9udHMuZm9udHMsIGZ1bmN0aW9uIChpbmRleCwgZm9udCkge1xuICAgICAgICBfdXRpbHMubG9hZEN1c3RvbUZvbnQoZm9udC5mYW1pbHkucmVwbGFjZSgvJy9nLCBcIlwiKSwgZm9udC51cmwucmVwbGFjZSgvJy9nLCBcIlxcXFwnXCIpKTtcbiAgICAgIH0pO1xuXG4gICAgICAkKFwiI2NvbnRhaW5lclwiKS5hdXRvU2Nyb2xsKF9hZGRpdGlvbmFsUGFyYW1zLnNjcm9sbCkub24oXCJkb25lXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICBfZG9uZSgpO1xuICAgICAgfSk7XG5cbiAgICAgIF9yZWFkeSgpO1xuICAgIH0pO1xuXG4gIH1cblxuICBmdW5jdGlvbiBfZ2V0VGFibGVOYW1lKCkge1xuICAgIHJldHVybiBcInRleHRfZXZlbnRzXCI7XG4gIH1cblxuICBmdW5jdGlvbiBfbG9nRXZlbnQocGFyYW1zKSB7XG4gICAgUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMubG9nRXZlbnQoX2dldFRhYmxlTmFtZSgpLCBwYXJhbXMpO1xuICB9XG5cbiAgZnVuY3Rpb24gX3JlYWR5KCkge1xuICAgIGdhZGdldHMucnBjLmNhbGwoXCJcIiwgXCJyc2V2ZW50X3JlYWR5XCIsIG51bGwsIF9wcmVmcy5nZXRTdHJpbmcoXCJpZFwiKSwgdHJ1ZSxcbiAgICAgIHRydWUsIHRydWUsIHRydWUsIHRydWUpO1xuICB9XG5cbiAgZnVuY3Rpb24gX2RvbmUoKSB7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbChcIlwiLCBcInJzZXZlbnRfZG9uZVwiLCBudWxsLCBfcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIikpO1xuICAgIF9sb2dFdmVudCh7IFwiZXZlbnRcIjogXCJkb25lXCIgfSk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIHNldEFkZGl0aW9uYWxQYXJhbXMoYWRkaXRpb25hbFBhcmFtcykge1xuICAgIF9hZGRpdGlvbmFsUGFyYW1zID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShhZGRpdGlvbmFsUGFyYW1zKSk7XG5cbiAgICBfYWRkaXRpb25hbFBhcmFtcy53aWR0aCA9IF9wcmVmcy5nZXRJbnQoXCJyc1dcIik7XG4gICAgX2FkZGl0aW9uYWxQYXJhbXMuaGVpZ2h0ID0gX3ByZWZzLmdldEludChcInJzSFwiKTtcblxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGFpbmVyXCIpLnN0eWxlLndpZHRoID0gX2FkZGl0aW9uYWxQYXJhbXMud2lkdGggKyBcInB4XCI7XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb250YWluZXJcIikuc3R5bGUuaGVpZ2h0ID0gX2FkZGl0aW9uYWxQYXJhbXMuaGVpZ2h0ICsgXCJweFwiO1xuXG4gICAgX2luaXQoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBsYXkoKSB7XG4gICAgaWYgKCQoXCIjY29udGFpbmVyXCIpLmRhdGEoXCJwbHVnaW5fYXV0b1Njcm9sbFwiKSkge1xuICAgICAgJChcIiNjb250YWluZXJcIikuZGF0YShcInBsdWdpbl9hdXRvU2Nyb2xsXCIpLnBsYXkoKTtcbiAgICB9XG5cbiAgICBfbG9nRXZlbnQoeyBcImV2ZW50XCI6IFwicGxheVwifSk7XG4gIH1cblxuICBmdW5jdGlvbiBwYXVzZSgpIHtcbiAgICBpZiAoJChcIiNjb250YWluZXJcIikuZGF0YShcInBsdWdpbl9hdXRvU2Nyb2xsXCIpKSB7XG4gICAgICAkKFwiI2NvbnRhaW5lclwiKS5kYXRhKFwicGx1Z2luX2F1dG9TY3JvbGxcIikucGF1c2UoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHBhdXNlKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwicGF1c2VcIjogcGF1c2UsXG4gICAgXCJwbGF5XCI6IHBsYXksXG4gICAgXCJzZXRBZGRpdGlvbmFsUGFyYW1zXCI6IHNldEFkZGl0aW9uYWxQYXJhbXMsXG4gICAgXCJzdG9wXCI6IHN0b3BcbiAgfTtcbn0pKGdhZGdldHMsIFdlYkZvbnQpO1xuXG4vKiBnbG9iYWwgUmlzZVZpc2lvbiwgZ2FkZ2V0cyAqL1xuXG4oZnVuY3Rpb24gKHdpbmRvdywgZ2FkZ2V0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpLFxuICAgIGlkID0gcHJlZnMuZ2V0U3RyaW5nKFwiaWRcIik7XG5cbiAgd2luZG93Lm9uY29udGV4dG1lbnUgPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIGRvY3VtZW50LmJvZHkub25tb3VzZWRvd24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgZnVuY3Rpb24gY29uZmlndXJlKG5hbWVzLCB2YWx1ZXMpIHtcbiAgICB2YXIgYWRkaXRpb25hbFBhcmFtcyxcbiAgICAgIGNvbXBhbnlJZCA9IFwiXCIsXG4gICAgICBkaXNwbGF5SWQgPSBcIlwiO1xuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkobmFtZXMpICYmIG5hbWVzLmxlbmd0aCA+IDAgJiYgQXJyYXkuaXNBcnJheSh2YWx1ZXMpICYmIHZhbHVlcy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAobmFtZXNbMF0gPT09IFwiY29tcGFueUlkXCIpIHtcbiAgICAgICAgY29tcGFueUlkID0gdmFsdWVzWzBdO1xuICAgICAgfVxuXG4gICAgICBpZiAobmFtZXNbMV0gPT09IFwiZGlzcGxheUlkXCIpIHtcbiAgICAgICAgaWYgKHZhbHVlc1sxXSkge1xuICAgICAgICAgIGRpc3BsYXlJZCA9IHZhbHVlc1sxXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkaXNwbGF5SWQgPSBcInByZXZpZXdcIjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscy5zZXRJZHMoY29tcGFueUlkLCBkaXNwbGF5SWQpO1xuXG4gICAgICBpZiAobmFtZXNbMl0gPT09IFwiYWRkaXRpb25hbFBhcmFtc1wiKSB7XG4gICAgICAgIGFkZGl0aW9uYWxQYXJhbXMgPSBKU09OLnBhcnNlKHZhbHVlc1syXSk7XG5cbiAgICAgICAgUmlzZVZpc2lvbi5UZXh0LnNldEFkZGl0aW9uYWxQYXJhbXMoYWRkaXRpb25hbFBhcmFtcyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKGlkICYmIGlkICE9PSBcIlwiKSB7XG4gICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoXCJyc2NtZF9wbGF5X1wiICsgaWQsIHBsYXkpO1xuICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNjbWRfcGF1c2VfXCIgKyBpZCwgcGF1c2UpO1xuICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNjbWRfc3RvcF9cIiArIGlkLCBzdG9wKTtcblxuICAgIGdhZGdldHMucnBjLnJlZ2lzdGVyKFwicnNwYXJhbV9zZXRfXCIgKyBpZCwgY29uZmlndXJlKTtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKFwiXCIsIFwicnNwYXJhbV9nZXRcIiwgbnVsbCwgaWQsIFtcImNvbXBhbnlJZFwiLCBcImRpc3BsYXlJZFwiLCBcImFkZGl0aW9uYWxQYXJhbXNcIl0pO1xuICB9XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBSaXNlVmlzaW9uLlRleHQucGxheSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgUmlzZVZpc2lvbi5UZXh0LnBhdXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIFJpc2VWaXNpb24uVGV4dC5zdG9wKCk7XG4gIH1cbn0pKHdpbmRvdywgZ2FkZ2V0cyk7XG4iXX0=
