!function(t,e){function n(t,e,n){var i=t.children(),o=!1;t.empty();for(var r=0,a=i.length;a>r;r++){var l=i.eq(r);if(t.append(l),n&&t.append(n),s(t,e)){l.remove(),o=!0;break}n&&n.detach()}return o}function i(e,n,r,a,l){var u=!1,c="a, table, thead, tbody, tfoot, tr, col, colgroup, object, embed, param, ol, ul, dl, blockquote, select, optgroup, option, textarea, script, style",f="script, .dotdotdot-keep";return e.contents().detach().each(function(){var d=this,h=t(d);if("undefined"==typeof d)return!0;if(h.is(f))e.append(h);else{if(u)return!0;e.append(h),!l||h.is(a.after)||h.find(a.after).length||e[e.is(c)?"after":"append"](l),s(r,a)&&(u=3==d.nodeType?o(h,n,r,a,l):i(h,n,r,a,l)),u||l&&l.detach()}}),n.addClass("is-truncated"),u}function o(e,n,i,o,a){var c=e[0];if(!c)return!1;var d=u(c),h=-1!==d.indexOf(" ")?" ":"　",p="letter"==o.wrap?"":h,g=d.split(p),m=-1,y=-1,v=0,w=g.length-1;for(o.fallbackToLetter&&0==v&&0==w&&(p="",g=d.split(p),w=g.length-1);w>=v&&(0!=v||0!=w);){var S=Math.floor((v+w)/2);if(S==y)break;y=S,l(c,g.slice(0,y+1).join(p)+o.ellipsis),i.children().each(function(){t(this).toggle().toggle()}),s(i,o)?(w=y,o.fallbackToLetter&&0==v&&0==w&&(p="",g=g[0].split(p),m=-1,y=-1,v=0,w=g.length-1)):(m=y,v=y)}if(-1==m||1==g.length&&0==g[0].length){var R=e.parent();e.detach();var b=a&&a.closest(R).length?a.length:0;if(R.contents().length>b?c=f(R.contents().eq(-1-b),n):(c=f(R,n,!0),b||R.detach()),c&&(d=r(u(c),o),l(c,d),b&&a)){var T=a.parent();t(c).parent().append(a),t.trim(T.html())||T.remove()}}else d=r(g.slice(0,m+1).join(p),o),l(c,d);return!0}function s(t,e){return t.innerHeight()>e.maxHeight}function r(e,n){for(;t.inArray(e.slice(-1),n.lastCharacter.remove)>-1;)e=e.slice(0,-1);return t.inArray(e.slice(-1),n.lastCharacter.noEllipsis)<0&&(e+=n.ellipsis),e}function a(t){return{width:t.innerWidth(),height:t.innerHeight()}}function l(t,e){t.innerText?t.innerText=e:t.nodeValue?t.nodeValue=e:t.textContent&&(t.textContent=e)}function u(t){return t.innerText?t.innerText:t.nodeValue?t.nodeValue:t.textContent?t.textContent:""}function c(t){do t=t.previousSibling;while(t&&1!==t.nodeType&&3!==t.nodeType);return t}function f(e,n,i){var o,s=e&&e[0];if(s){if(!i){if(3===s.nodeType)return s;if(t.trim(e.text()))return f(e.contents().last(),n)}for(o=c(s);!o;){if(e=e.parent(),e.is(n)||!e.length)return!1;o=c(e[0])}if(o)return f(t(o),n)}return!1}function d(e,n){return e?"string"==typeof e?(e=t(e,n),e.length?e:!1):e.jquery?e:!1:!1}function h(t){for(var e=t.innerHeight(),n=["paddingTop","paddingBottom"],i=0,o=n.length;o>i;i++){var s=parseInt(t.css(n[i]),10);isNaN(s)&&(s=0),e-=s}return e}if(!t.fn.dotdotdot){t.fn.dotdotdot=function(e){if(0==this.length)return t.fn.dotdotdot.debug('No element found for "'+this.selector+'".'),this;if(this.length>1)return this.each(function(){t(this).dotdotdot(e)});var o=this,r=o.contents();o.data("dotdotdot")&&o.trigger("destroy.dot"),o.data("dotdotdot-style",o.attr("style")||""),o.css("word-wrap","break-word"),"nowrap"===o.css("white-space")&&o.css("white-space","normal"),o.bind_events=function(){return o.bind("update.dot",function(e,a){switch(o.removeClass("is-truncated"),e.preventDefault(),e.stopPropagation(),typeof l.height){case"number":l.maxHeight=l.height;break;case"function":l.maxHeight=l.height.call(o[0]);break;default:l.maxHeight=h(o)}l.maxHeight+=l.tolerance,"undefined"!=typeof a&&(("string"==typeof a||"nodeType"in a&&1===a.nodeType)&&(a=t("<div />").append(a).contents()),a instanceof t&&(r=a)),g=o.wrapInner('<div class="dotdotdot" />').children(),g.contents().detach().end().append(r.clone(!0)).find("br").replaceWith("  <br />  ").end().css({height:"auto",width:"auto",border:"none",padding:0,margin:0});var c=!1,f=!1;return u.afterElement&&(c=u.afterElement.clone(!0),c.show(),u.afterElement.detach()),s(g,l)&&(f="children"==l.wrap?n(g,l,c):i(g,o,g,l,c)),g.replaceWith(g.contents()),g=null,t.isFunction(l.callback)&&l.callback.call(o[0],f,r),u.isTruncated=f,f}).bind("isTruncated.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],u.isTruncated),u.isTruncated}).bind("originalContent.dot",function(t,e){return t.preventDefault(),t.stopPropagation(),"function"==typeof e&&e.call(o[0],r),r}).bind("destroy.dot",function(t){t.preventDefault(),t.stopPropagation(),o.unwatch().unbind_events().contents().detach().end().append(r).attr("style",o.data("dotdotdot-style")||"").removeClass("is-truncated").data("dotdotdot",!1)}),o},o.unbind_events=function(){return o.unbind(".dot"),o},o.watch=function(){if(o.unwatch(),"window"==l.watch){var e=t(window),n=e.width(),i=e.height();e.bind("resize.dot"+u.dotId,function(){n==e.width()&&i==e.height()&&l.windowResizeFix||(n=e.width(),i=e.height(),f&&clearInterval(f),f=setTimeout(function(){o.trigger("update.dot")},100))})}else c=a(o),f=setInterval(function(){if(o.is(":visible")){var t=a(o);(c.width!=t.width||c.height!=t.height)&&(o.trigger("update.dot"),c=t)}},500);return o},o.unwatch=function(){return t(window).unbind("resize.dot"+u.dotId),f&&clearInterval(f),o};var l=t.extend(!0,{},t.fn.dotdotdot.defaults,e),u={},c={},f=null,g=null;return l.lastCharacter.remove instanceof Array||(l.lastCharacter.remove=t.fn.dotdotdot.defaultArrays.lastCharacter.remove),l.lastCharacter.noEllipsis instanceof Array||(l.lastCharacter.noEllipsis=t.fn.dotdotdot.defaultArrays.lastCharacter.noEllipsis),u.afterElement=d(l.after,o),u.isTruncated=!1,u.dotId=p++,o.data("dotdotdot",!0).bind_events().trigger("update.dot"),l.watch&&o.watch(),o},t.fn.dotdotdot.defaults={ellipsis:"... ",wrap:"word",fallbackToLetter:!0,lastCharacter:{},tolerance:0,callback:null,after:null,height:null,watch:!1,windowResizeFix:!0},t.fn.dotdotdot.defaultArrays={lastCharacter:{remove:[" ","　",",",";",".","!","?"],noEllipsis:[]}},t.fn.dotdotdot.debug=function(){};var p=1,g=t.fn.html;t.fn.html=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?this.trigger("update",[n]):g.apply(this,arguments)};var m=t.fn.text;t.fn.text=function(n){return n!=e&&!t.isFunction(n)&&this.data("dotdotdot")?(n=t("<div />").text(n).html(),this.trigger("update",[n])):m.apply(this,arguments)}}}(jQuery),jQuery(document).ready(function(t){t(".dot-ellipsis").each(function(){var e=t(this).hasClass("dot-resize-update"),n=t(this).hasClass("dot-timer-update"),i=0,o=t(this).attr("class").split(/\s+/);t.each(o,function(t,e){var n=e.match(/^dot-height-(\d+)$/);null!==n&&(i=Number(n[1]))});var s=new Object;n&&(s.watch=!0),e&&(s.watch="window"),i>0&&(s.height=i),t(this).dotdotdot(s)})}),jQuery(window).on("load",function(){jQuery(".dot-ellipsis.dot-load-update").trigger("update.dot")}),function(){function t(t){return t.call.apply(t.bind,arguments)}function e(t,e){if(!t)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var i=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(i,n),t.apply(e,i)}}return function(){return t.apply(e,arguments)}}function n(){return n=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?t:e,n.apply(null,arguments)}function i(t,e){this.a=t,this.o=e||t,this.c=this.o.document}function o(t,e,n,i){if(e=t.c.createElement(e),n)for(var o in n)n.hasOwnProperty(o)&&("style"==o?e.style.cssText=n[o]:e.setAttribute(o,n[o]));return i&&e.appendChild(t.c.createTextNode(i)),e}function s(t,e,n){t=t.c.getElementsByTagName(e)[0],t||(t=document.documentElement),t.insertBefore(n,t.lastChild)}function r(t){t.parentNode&&t.parentNode.removeChild(t)}function a(t,e,n){e=e||[],n=n||[];for(var i=t.className.split(/\s+/),o=0;o<e.length;o+=1){for(var s=!1,r=0;r<i.length;r+=1)if(e[o]===i[r]){s=!0;break}s||i.push(e[o])}for(e=[],o=0;o<i.length;o+=1){for(s=!1,r=0;r<n.length;r+=1)if(i[o]===n[r]){s=!0;break}s||e.push(i[o])}t.className=e.join(" ").replace(/\s+/g," ").replace(/^\s+|\s+$/,"")}function l(t,e){for(var n=t.className.split(/\s+/),i=0,o=n.length;o>i;i++)if(n[i]==e)return!0;return!1}function u(t){return t.o.location.hostname||t.a.location.hostname}function c(t,e,n){function i(){u&&r&&a&&(u(l),u=null)}e=o(t,"link",{rel:"stylesheet",href:e,media:"all"});var r=!1,a=!0,l=null,u=n||null;ee?(e.onload=function(){r=!0,i()},e.onerror=function(){r=!0,l=Error("Stylesheet failed to load"),i()}):setTimeout(function(){r=!0,i()},0),s(t,"head",e)}function f(t,e,n,i){var s=t.c.getElementsByTagName("head")[0];if(s){var r=o(t,"script",{src:e}),a=!1;return r.onload=r.onreadystatechange=function(){a||this.readyState&&"loaded"!=this.readyState&&"complete"!=this.readyState||(a=!0,n&&n(null),r.onload=r.onreadystatechange=null,"HEAD"==r.parentNode.tagName&&s.removeChild(r))},s.appendChild(r),setTimeout(function(){a||(a=!0,n&&n(Error("Script load timeout")))},i||5e3),r}return null}function d(){this.a=0,this.c=null}function h(t){return t.a++,function(){t.a--,g(t)}}function p(t,e){t.c=e,g(t)}function g(t){0==t.a&&t.c&&(t.c(),t.c=null)}function m(t){this.a=t||"-"}function y(t,e){this.c=t,this.f=4,this.a="n";var n=(e||"n4").match(/^([nio])([1-9])$/i);n&&(this.a=n[1],this.f=parseInt(n[2],10))}function v(t){return R(t)+" "+(t.f+"00")+" 300px "+w(t.c)}function w(t){var e=[];t=t.split(/,\s*/);for(var n=0;n<t.length;n++){var i=t[n].replace(/['"]/g,"");-1!=i.indexOf(" ")||/^\d/.test(i)?e.push("'"+i+"'"):e.push(i)}return e.join(",")}function S(t){return t.a+t.f}function R(t){var e="normal";return"o"===t.a?e="oblique":"i"===t.a&&(e="italic"),e}function b(t){var e=4,n="n",i=null;return t&&((i=t.match(/(normal|oblique|italic)/i))&&i[1]&&(n=i[1].substr(0,1).toLowerCase()),(i=t.match(/([1-9]00|normal|bold)/i))&&i[1]&&(/bold/i.test(i[1])?e=7:/[1-9]00/.test(i[1])&&(e=parseInt(i[1].substr(0,1),10)))),n+e}function T(t,e){this.c=t,this.f=t.o.document.documentElement,this.h=e,this.a=new m("-"),this.j=!1!==e.events,this.g=!1!==e.classes}function C(t){t.g&&a(t.f,[t.a.c("wf","loading")]),x(t,"loading")}function _(t){if(t.g){var e=l(t.f,t.a.c("wf","active")),n=[],i=[t.a.c("wf","loading")];e||n.push(t.a.c("wf","inactive")),a(t.f,n,i)}x(t,"inactive")}function x(t,e,n){t.j&&t.h[e]&&(n?t.h[e](n.c,S(n)):t.h[e]())}function I(){this.c={}}function V(t,e,n){var i,o=[];for(i in e)if(e.hasOwnProperty(i)){var s=t.c[i];s&&o.push(s(e[i],n))}return o}function E(t,e){this.c=t,this.f=e,this.a=o(this.c,"span",{"aria-hidden":"true"},this.f)}function k(t){s(t.c,"body",t.a)}function L(t){return"display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:"+w(t.c)+";"+("font-style:"+R(t)+";font-weight:"+(t.f+"00")+";")}function O(t,e,n,i,o,s){this.g=t,this.j=e,this.a=i,this.c=n,this.f=o||3e3,this.h=s||void 0}function A(t,e,n,i,o,s,r){this.v=t,this.B=e,this.c=n,this.a=i,this.s=r||"BESbswy",this.f={},this.w=o||3e3,this.u=s||null,this.m=this.j=this.h=this.g=null,this.g=new E(this.c,this.s),this.h=new E(this.c,this.s),this.j=new E(this.c,this.s),this.m=new E(this.c,this.s),t=new y(this.a.c+",serif",S(this.a)),t=L(t),this.g.a.style.cssText=t,t=new y(this.a.c+",sans-serif",S(this.a)),t=L(t),this.h.a.style.cssText=t,t=new y("serif",S(this.a)),t=L(t),this.j.a.style.cssText=t,t=new y("sans-serif",S(this.a)),t=L(t),this.m.a.style.cssText=t,k(this.g),k(this.h),k(this.j),k(this.m)}function D(){if(null===ie){var t=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent);ie=!!t&&(536>parseInt(t[1],10)||536===parseInt(t[1],10)&&11>=parseInt(t[2],10))}return ie}function N(t,e,n){for(var i in ne)if(ne.hasOwnProperty(i)&&e===t.f[ne[i]]&&n===t.f[ne[i]])return!0;return!1}function P(t){var e,n=t.g.a.offsetWidth,i=t.h.a.offsetWidth;(e=n===t.f.serif&&i===t.f["sans-serif"])||(e=D()&&N(t,n,i)),e?te()-t.A>=t.w?D()&&N(t,n,i)&&(null===t.u||t.u.hasOwnProperty(t.a.c))?H(t,t.v):H(t,t.B):j(t):H(t,t.v)}function j(t){setTimeout(n(function(){P(this)},t),50)}function H(t,e){setTimeout(n(function(){r(this.g.a),r(this.h.a),r(this.j.a),r(this.m.a),e(this.a)},t),0)}function M(t,e,n){this.c=t,this.a=e,this.f=0,this.m=this.j=!1,this.s=n}function z(t){0==--t.f&&t.j&&(t.m?(t=t.a,t.g&&a(t.f,[t.a.c("wf","active")],[t.a.c("wf","loading"),t.a.c("wf","inactive")]),x(t,"active")):_(t.a))}function F(t){this.j=t,this.a=new I,this.h=0,this.f=this.g=!0}function $(t,e,i,o,s){var r=0==--t.h;(t.f||t.g)&&setTimeout(function(){var t=s||null,l=o||null||{};if(0===i.length&&r)_(e.a);else{e.f+=i.length,r&&(e.j=r);var u,c=[];for(u=0;u<i.length;u++){var f=i[u],d=l[f.c],h=e.a,p=f;if(h.g&&a(h.f,[h.a.c("wf",p.c,S(p).toString(),"loading")]),x(h,"fontloading",p),h=null,null===oe)if(window.FontFace){var p=/Gecko.*Firefox\/(\d+)/.exec(window.navigator.userAgent),g=/OS X.*Version\/10\..*Safari/.exec(window.navigator.userAgent)&&/Apple/.exec(window.navigator.vendor);oe=p?42<parseInt(p[1],10):g?!1:!0}else oe=!1;h=oe?new O(n(e.g,e),n(e.h,e),e.c,f,e.s,d):new A(n(e.g,e),n(e.h,e),e.c,f,e.s,t,d),c.push(h)}for(u=0;u<c.length;u++)c[u].start()}},0)}function W(t,e,n){var i=[],o=n.timeout;C(e);var i=V(t.a,n,t.c),s=new M(t.c,e,o);for(t.h=i.length,e=0,n=i.length;n>e;e++)i[e].load(function(e,n,i){$(t,s,e,n,i)})}function U(t,e){this.c=t,this.a=e}function B(t,e){this.c=t,this.a=e}function q(t,e){this.c=t?t:se,this.a=[],this.f=[],this.g=e||""}function G(t,e){for(var n=e.length,i=0;n>i;i++){var o=e[i].split(":");3==o.length&&t.f.push(o.pop());var s="";2==o.length&&""!=o[1]&&(s=":"),t.a.push(o.join(s))}}function J(t){if(0==t.a.length)throw Error("No fonts to load!");if(-1!=t.c.indexOf("kit="))return t.c;for(var e=t.a.length,n=[],i=0;e>i;i++)n.push(t.a[i].replace(/ /g,"+"));return e=t.c+"?family="+n.join("%7C"),0<t.f.length&&(e+="&subset="+t.f.join(",")),0<t.g.length&&(e+="&text="+encodeURIComponent(t.g)),e}function Q(t){this.f=t,this.a=[],this.c={}}function K(t){for(var e=t.f.length,n=0;e>n;n++){var i=t.f[n].split(":"),o=i[0].replace(/\+/g," "),s=["n4"];if(2<=i.length){var r,a=i[1];if(r=[],a)for(var a=a.split(","),l=a.length,u=0;l>u;u++){var c;if(c=a[u],c.match(/^[\w-]+$/)){var f=ue.exec(c.toLowerCase());if(null==f)c="";else{if(c=f[2],c=null==c||""==c?"n":le[c],f=f[1],null==f||""==f)f="4";else var d=ae[f],f=d?d:isNaN(f)?"4":f.substr(0,1);c=[c,f].join("")}}else c="";c&&r.push(c)}0<r.length&&(s=r),3==i.length&&(i=i[2],r=[],i=i?i.split(","):r,0<i.length&&(i=re[i[0]])&&(t.c[o]=i))}for(t.c[o]||(i=re[o])&&(t.c[o]=i),i=0;i<s.length;i+=1)t.a.push(new y(o,s[i]))}}function X(t,e){this.c=t,this.a=e}function Y(t,e){this.c=t,this.a=e}function Z(t,e){this.c=t,this.f=e,this.a=[]}var te=Date.now||function(){return+new Date},ee=!!window.FontFace;m.prototype.c=function(){for(var t=[],e=0;e<arguments.length;e++)t.push(arguments[e].replace(/[\W_]+/g,"").toLowerCase());return t.join(this.a)},O.prototype.start=function(){var t=this.c.o.document,e=this,n=te(),i=new Promise(function(i,o){function s(){te()-n>=e.f?o():t.fonts.load(v(e.a),e.h).then(function(t){1<=t.length?i():setTimeout(s,25)},function(){o()})}s()}),o=null,s=new Promise(function(t,n){o=setTimeout(n,e.f)});Promise.race([s,i]).then(function(){o&&(clearTimeout(o),o=null),e.g(e.a)},function(){e.j(e.a)})};var ne={D:"serif",C:"sans-serif"},ie=null;A.prototype.start=function(){this.f.serif=this.j.a.offsetWidth,this.f["sans-serif"]=this.m.a.offsetWidth,this.A=te(),P(this)};var oe=null;M.prototype.g=function(t){var e=this.a;e.g&&a(e.f,[e.a.c("wf",t.c,S(t).toString(),"active")],[e.a.c("wf",t.c,S(t).toString(),"loading"),e.a.c("wf",t.c,S(t).toString(),"inactive")]),x(e,"fontactive",t),this.m=!0,z(this)},M.prototype.h=function(t){var e=this.a;if(e.g){var n=l(e.f,e.a.c("wf",t.c,S(t).toString(),"active")),i=[],o=[e.a.c("wf",t.c,S(t).toString(),"loading")];n||i.push(e.a.c("wf",t.c,S(t).toString(),"inactive")),a(e.f,i,o)}x(e,"fontinactive",t),z(this)},F.prototype.load=function(t){this.c=new i(this.j,t.context||this.j),this.g=!1!==t.events,this.f=!1!==t.classes,W(this,new T(this.c,t),t)},U.prototype.load=function(t){function e(){if(s["__mti_fntLst"+i]){var n,o=s["__mti_fntLst"+i](),r=[];if(o)for(var a=0;a<o.length;a++){var l=o[a].fontfamily;void 0!=o[a].fontStyle&&void 0!=o[a].fontWeight?(n=o[a].fontStyle+o[a].fontWeight,r.push(new y(l,n))):r.push(new y(l))}t(r)}else setTimeout(function(){e()},50)}var n=this,i=n.a.projectId,o=n.a.version;if(i){var s=n.c.o;f(this.c,(n.a.api||"https://fast.fonts.net/jsapi")+"/"+i+".js"+(o?"?v="+o:""),function(o){o?t([]):(s["__MonotypeConfiguration__"+i]=function(){return n.a},e())}).id="__MonotypeAPIScript__"+i}else t([])},B.prototype.load=function(t){var e,n,i=this.a.urls||[],o=this.a.families||[],s=this.a.testStrings||{},r=new d;for(e=0,n=i.length;n>e;e++)c(this.c,i[e],h(r));var a=[];for(e=0,n=o.length;n>e;e++)if(i=o[e].split(":"),i[1])for(var l=i[1].split(","),u=0;u<l.length;u+=1)a.push(new y(i[0],l[u]));else a.push(new y(i[0]));p(r,function(){t(a,s)})};var se="https://fonts.googleapis.com/css",re={latin:"BESbswy","latin-ext":"çöüğş",cyrillic:"йяЖ",greek:"αβΣ",khmer:"កខគ",Hanuman:"កខគ"},ae={thin:"1",extralight:"2","extra-light":"2",ultralight:"2","ultra-light":"2",light:"3",regular:"4",book:"4",medium:"5","semi-bold":"6",semibold:"6","demi-bold":"6",demibold:"6",bold:"7","extra-bold":"8",extrabold:"8","ultra-bold":"8",ultrabold:"8",black:"9",heavy:"9",l:"3",r:"4",b:"7"},le={i:"i",italic:"i",n:"n",normal:"n"},ue=/^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/,ce={Arimo:!0,Cousine:!0,Tinos:!0};X.prototype.load=function(t){var e=new d,n=this.c,i=new q(this.a.api,this.a.text),o=this.a.families;G(i,o);var s=new Q(o);K(s),c(n,J(i),h(e)),p(e,function(){t(s.a,s.c,ce)})},Y.prototype.load=function(t){var e=this.a.id,n=this.c.o;e?f(this.c,(this.a.api||"https://use.typekit.net")+"/"+e+".js",function(e){if(e)t([]);else if(n.Typekit&&n.Typekit.config&&n.Typekit.config.fn){e=n.Typekit.config.fn;for(var i=[],o=0;o<e.length;o+=2)for(var s=e[o],r=e[o+1],a=0;a<r.length;a++)i.push(new y(s,r[a]));try{n.Typekit.load({events:!1,classes:!1,async:!0})}catch(l){}t(i)}},2e3):t([])},Z.prototype.load=function(t){var e=this.f.id,n=this.c.o,i=this;e?(n.__webfontfontdeckmodule__||(n.__webfontfontdeckmodule__={}),n.__webfontfontdeckmodule__[e]=function(e,n){for(var o=0,s=n.fonts.length;s>o;++o){var r=n.fonts[o];i.a.push(new y(r.name,b("font-weight:"+r.weight+";font-style:"+r.style)))}t(i.a)},f(this.c,(this.f.api||"https://f.fontdeck.com/s/css/js/")+u(this.c)+"/"+e+".js",function(e){e&&t([])})):t([])};var fe=new F(window);fe.a.c.custom=function(t,e){return new B(e,t)},fe.a.c.fontdeck=function(t,e){return new Z(e,t)},fe.a.c.monotype=function(t,e){return new U(e,t)},fe.a.c.typekit=function(t,e){return new Y(e,t)},fe.a.c.google=function(t,e){return new X(e,t)};var de={load:n(fe.load,fe)};"function"==typeof define&&define.amd?define(function(){return de}):"undefined"!=typeof module&&module.exports?module.exports=de:(window.WebFont=de,window.WebFontConfig&&fe.load(window.WebFontConfig))}(),function(t,e,n,i){"use strict";function o(e,n){this.element=e,this.page=t(e).find(".page"),this.options=t.extend({},r,n),this._defaults=r,this._name=s,this.isLoading=!0,this.draggable=null,this.tween=null,this.calculateProgress=null,this.init()}var s="autoScroll",r={by:"continuous",speed:"medium",duration:10,pause:5,click:!1,minimumMovement:3};o.prototype={init:function(){function e(){s.tween.pause(),TweenLite.killDelayedCallsTo(s.calculateProgress),TweenLite.killDelayedCallsTo(r),TweenLite.killDelayedCallsTo(a)}var n,o,s=this,r=null,a=null,l=t(this.element).outerHeight(!0),u=l,c=this.element.scrollHeight-this.element.offsetHeight;this.calculateProgress=function(){u=t(s.element).scrollTop()+l,s.tween.progress(t(s.element).scrollTop()/c).play()},this.canScroll()?("page"===this.options.by?(n="fastest"===this.options.speed?.4:"fast"===this.options.speed?.8:"medium"===this.options.speed?1.2:"slow"===this.options.speed?1.6:2,o=this.page.outerHeight(!0)/t(this.element).outerHeight(!0)*n):(n="fastest"===this.options.speed?60:"fast"===this.options.speed?50:"medium"===this.options.speed?40:"slow"===this.options.speed?30:20,o=Math.abs((this.page.outerHeight(!0)-t(this.element).outerHeight(!0))/n)),Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.75,minimumMovement:s.options.minimumMovement,onPress:function(){e()},onRelease:function(){"none"!==s.options.by&&TweenLite.delayedCall(s.options.pause,s.calculateProgress)},onClick:function(){s.options.click&&(e(),t(s.element).trigger("scrollClick",[this.pointerEvent]))}}),this.draggable=Draggable.get(this.element),this.tween=TweenLite.to(this.draggable.scrollProxy,o,{scrollTop:c,ease:Linear.easeNone,delay:"page"===this.options.by?this.options.duration:this.options.pause,paused:!0,onUpdate:"page"===this.options.by?function(){Math.abs(s.draggable.scrollProxy.top())>=u&&(s.tween.pause(),u+=l,TweenLite.delayedCall(s.options.duration,a=function(){s.tween.resume()}))}:i,onComplete:function(){TweenLite.delayedCall("page"===s.options.by?s.options.duration:s.options.pause,r=function(){TweenLite.to(s.page,1,{autoAlpha:0,onComplete:function(){s.tween.seek(0).pause(),"page"===s.options.by&&(u=l),t(s.element).trigger("done")}})})}}),TweenLite.set(this.element,{overflowY:"hidden"})):this.options.click&&(Draggable.create(this.element,{type:"scrollTop",throwProps:!0,edgeResistance:.95,minimumMovement:this.options.minimumMovement,onClick:function(){t(s.element).trigger("scrollClick",[this.pointerEvent])}}),this.draggable=Draggable.get(this.element))},canScroll:function(){return this.options&&this.page.height()>t(this.element).height()},destroy:function(){t(this.element).removeData(),this.tween&&this.tween.kill(),this.draggable&&this.draggable.kill(),this.element=null,this.page=null,this.options=null,this._defaults=null,this.draggable=null,this.tween=null,this.calculateProgress=null}},o.prototype.play=function(){this.canScroll()&&"none"!==this.options.by&&this.tween&&(this.isLoading?(this.tween.play(),this.isLoading=!1):(TweenLite.to(this.page,1,{autoAlpha:1}),TweenLite.delayedCall("page"===this.options.by?this.options.duration:this.options.pause,this.calculateProgress)))},o.prototype.pause=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.pause())},o.prototype.stop=function(){this.tween&&(TweenLite.killDelayedCallsTo(this.calculateProgress),this.tween.kill()),this.element=null,this.page=null},t.fn.autoScroll=function(e){return this.each(function(){t.data(this,"plugin_"+s)||t.data(this,"plugin_"+s,new o(this,e))})}}(jQuery,window,document);var WIDGET_COMMON_CONFIG={AUTH_PATH_URL:"v1/widget/auth",LOGGER_CLIENT_ID:"1088527147109-6q1o2vtihn34292pjt4ckhmhck0rk0o7.apps.googleusercontent.com",LOGGER_CLIENT_SECRET:"nlZyrcPLg6oEwO9f9Wfn29Wh",LOGGER_REFRESH_TOKEN:"1/xzt4kwzE1H7W9VnKB8cAaCx6zb4Es4nKEoqaYHdTD15IgOrJDtdun6zK6XiATCKT",STORE_URL:"https://store-dot-rvaserver2.appspot.com/"},RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Utilities=function(){function t(t,e){var n="font-family: "+decodeURIComponent(e.font.family).replace(/'/g,"")+"; ",i="color: "+(e.color?e.color:e.forecolor)+"; ",o="font-size: "+(-1===e.size.indexOf("px")?e.size+"px; ":e.size+"; "),s="font-weight: "+(e.bold?"bold":"normal")+"; ",r="font-style: "+(e.italic?"italic":"normal")+"; ",a="text-decoration: "+(e.underline?"underline":"none")+"; ",l="background-color: "+(e.highlightColor?e.highlightColor:e.backcolor)+";";return"."+t+" {"+n+i+o+s+r+a+l+"}"}function e(t){for(var e=document.createElement("style"),n=0,i=t.length;i>n;n++)e.appendChild(document.createTextNode(t[n]));document.head.appendChild(e)}function n(n,s){function r(){s&&"function"==typeof s&&s()}function a(){r()}var l=null,u=[],c=[],f=[];if(!n||0===n.length)return r(),void 0;n.forEach(function(n){n.class&&n.fontStyle&&e([t(n.class,n.fontStyle)])});for(var d=0;d<n.length;d++)n[d].fontStyle&&n[d].fontStyle.font.type&&"google"===n[d].fontStyle.font.type&&(l=n[d].fontStyle.font.family.split(",")[0],l=l.replace(/'/g,""),u.push(l));for(d=0;d<n.length;d++)n[d].fontStyle&&n[d].fontStyle.font.type&&"custom"===n[d].fontStyle.font.type&&(c.push(decodeURIComponent(n[d].fontStyle.font.family).replace(/'/g,"")),f.push(n[d].fontStyle.font.url.replace(/'/g,"\\'")));if(0===u.length&&0===c.length)r();else{for(var h=0;h<c.length;h+=1)i(c[h],f[h]);u.length>0?o(u,a):r()}}function i(t,e,n){var i=null,o="font-family: "+t+"; src: url('"+e+"');";n=n||document,i=n.styleSheets[0],null!==i&&i.addRule("@font-face",o)}function o(t,e){WebFont.load({google:{families:t},active:function(){e&&"function"==typeof e&&e()},inactive:function(){e&&"function"==typeof e&&e()},timeout:5e3})}function s(t){var e=document.createElement("script");e.src=t,document.body.appendChild(e)}function r(t){for(var e=t.length,n=[],i=0;e>i;i++)n[i]=new Image,n[i].src=t[i]}function a(t){return l(t,window.location.search.substring(1))}function l(t,e){for(var n,i=e.split("&"),o=0;o<i.length;o++)if(n=i[o].split("="),n[0]==t)return decodeURIComponent(n[1]);return""}function u(t){var e=/(\d{4})\.(\d{2})\.(\d{2})\.(\d{2})\.(\d{2})/,n=e.exec(t);return n?new Date(+n[1],+n[2]-1,+n[3],+n[4],+n[5]):void 0}function c(t){var e="";switch(t){case 404:e="The file does not exist or cannot be accessed.";break;case 507:e="There is not enough disk space to save the file on Rise Cache.";break;default:e="There was a problem retrieving the file from Rise Cache."}return e}function f(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent}function d(t,e){var n=new XMLHttpRequest;if(t&&e&&"function"==typeof e){n.open("HEAD",t+"?cb="+(new Date).getTime(),!1);try{n.send(),e(n.status>=200&&n.status<304)}catch(i){e(!1)}}}function h(){var t=25,e=navigator.userAgent.match(/Chrome\/(\S+)/),n=e?e[1]:0;return n&&(n=parseInt(n.substring(0,n.indexOf("."))),t>=n)?!0:!1}function p(t,e){return/^(?:f|ht)tps?\:\/\//.test(t)||(t=(e?"https://":"http://")+t),t}return{addProtocol:p,getQueryParameter:a,getQueryStringParameter:l,getFontCssStyle:t,addCSSRules:e,loadFonts:n,loadCustomFont:i,loadGoogleFonts:o,loadScript:s,preloadImages:r,getRiseCacheErrorMessage:c,unescapeHTML:f,hasInternetConnection:d,isLegacy:h,getDateObjectFromPlayerVersionString:u}}();var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Scroller=function(t){"use strict";function e(){i(),l(),T>x&&n(),w.width=T,i(),l()}function n(){var t=new Event("scroller-oversized-canvas");y.dispatchEvent(t)}function i(){T=0;for(var t=0;t<b.length;t++)b[t].separator?o(b[t]):s(b[t])}function o(t){var e=w.height/2,n=t.size/2;S.save(),S.fillStyle=t.color,S.beginPath(),S.arc(T+n,e,n,0,2*Math.PI),S.fill(),T+=t.size+10,S.restore()}function s(t){var e,n={};t&&(n.text=_.unescapeHTML(t.text),t.fontStyle&&(e=t.fontStyle,e.font&&e.font.family&&(n.font=e.font.family),e.size&&(n.size=e.size),e.forecolor&&(n.foreColor=e.forecolor),e.bold&&(n.bold=e.bold),e.italic&&(n.italic=e.italic)),r(n))}function r(t){var e="";S.save(),t.bold&&(e="bold "),t.italic&&(e+="italic "),t.size&&(e+=t.size+" "),t.font&&(e+=t.font),S.font=e,S.fillStyle=t.foreColor,S.textBaseline="middle",S.translate(0,w.height/2),S.fillText(t.text,T,0),T+=S.measureText(t.text).width+10,S.restore()}function a(){v.clearRect(0,0,y.width,y.height),v.drawImage(w,v.xpos,0)}function l(){var t=0,e=0;if(C=T,b.length>0)for(;t<y.width;)b[e].separator?o(b[e]):s(b[e]),t=T-C,e=e===b.length-1?0:e+1}function u(){var e;if(t.transition&&t.transition.speed)switch(t.transition.speed){case"slow":e=100;break;case"medium":e=150;break;case"fast":e=200;break;default:e=150}return C/e}function c(){R=null,v.xpos=0,y.dispatchEvent(new CustomEvent("done",{bubbles:!0}))}function f(){w=document.createElement("canvas"),w.id="secondary",w.style.display="none",S=d(w),document.body.appendChild(w)}function d(e){var n=e.getContext("2d");return e.width=t.width,e.height=t.height,n.xpos=0,n}function h(t){b=t,y=document.getElementById("scroller"),v=d(y),f(),e(),TweenLite.ticker.addEventListener("tick",a),y.dispatchEvent(new CustomEvent("ready",{bubbles:!0}))}function p(t){b=t,e()}function g(){R||(R=TweenLite.to(v,u(),{xpos:-C,ease:Linear.easeNone,onComplete:c})),R.play()}function m(){R&&R.pause()}var y=null,v=null,w=null,S=null,R=null,b=[],T=0,C=0,_=RiseVision.Common.Utilities,x=32767;return{init:h,play:g,pause:m,refresh:p}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.LoggerUtils=function(){"use strict";function t(t,e){var i=null;t.event?(i=t,i.file_url&&(i.file_format=n(i.file_url)),i.company_id=u,i.display_id=l,c&&(i.version=c),e(i)):e(i)}function e(){var t=new Date,e=t.getUTCFullYear(),n=t.getUTCMonth()+1,i=t.getUTCDate();return 10>n&&(n="0"+n),10>i&&(i="0"+i),""+e+n+i}function n(t){var e,n=/[?#&]/;return t&&"string"==typeof t?(e=t.substr(t.lastIndexOf(".")+1),n.test(e)&&(e=e.substr(0,-1!==e.indexOf("?")?e.indexOf("?"):e.length),e=e.substr(0,-1!==e.indexOf("#")?e.indexOf("#"):e.length),e=e.substr(0,-1!==e.indexOf("&")?e.indexOf("&"):e.length)),e.toLowerCase()):null}function i(t){var n={kind:"bigquery#tableDataInsertAllRequest",skipInvalidRows:!1,ignoreUnknownValues:!1,templateSuffix:e(),rows:[{insertId:""}]},i=JSON.parse(JSON.stringify(n));return i.rows[0].insertId=Math.random().toString(36).substr(2).toUpperCase(),i.rows[0].json=JSON.parse(JSON.stringify(t)),i.rows[0].json.ts=(new Date).toISOString(),i}function o(e,n){t(n,function(t){null!==t&&RiseVision.Common.Logger.log(e,t)})}function s(t,n){try{top.postToPlayer({message:"widget-log",table:t,params:JSON.stringify(n),suffix:e()})}catch(i){console.log("widget-common.logEventToPlayer",i)}}function r(t,e){u=t,l=e}function a(t){c=t}var l="",u="",c=null;return{getInsertData:i,getFileFormat:n,logEvent:o,logEventToPlayer:s,setIds:r,setVersion:a}}(),RiseVision.Common.Logger=function(t){"use strict";function e(t){var e=new XMLHttpRequest;return new Date-u<358e4?t({}):(e.open("POST",o,!0),e.onloadend=function(){var n={};try{n=JSON.parse(e.response)}catch(i){console.warn("Can't refresh logger token - ",i.message)}t({token:n.access_token,refreshedAt:new Date})},e.send(),void 0)}function n(t){return r&&l===t}function i(i,o){function f(e){var n,r,a=new XMLHttpRequest;r=s.replace("TABLE_ID",i),u=e.refreshedAt||u,c=e.token||c,n=t.getInsertData(o),a.open("POST",r,!0),a.setRequestHeader("Content-Type","application/json"),a.setRequestHeader("Authorization","Bearer "+c),o.cb&&"function"==typeof o.cb&&(a.onloadend=function(){o.cb(a.response)}),a.send(JSON.stringify(n))}if(!(!i||!o||o.hasOwnProperty("event")&&!o.event||o.hasOwnProperty("event")&&n(o.event))&&o.display_id&&"preview"!==o.display_id&&"display_id"!==o.display_id&&"displayId"!==o.display_id){try{if(top.postToPlayer&&top.enableWidgetLogging)return t.logEventToPlayer(i,o)}catch(d){console.log("widget-common: logger",d)}return r=!0,l=o.event,setTimeout(function(){r=!1},a),e(f)}}var o="https://www.googleapis.com/oauth2/v3/token?client_id="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_ID+"&client_secret="+WIDGET_COMMON_CONFIG.LOGGER_CLIENT_SECRET+"&refresh_token="+WIDGET_COMMON_CONFIG.LOGGER_REFRESH_TOKEN+"&grant_type=refresh_token",s="https://www.googleapis.com/bigquery/v2/projects/client-side-events/datasets/Widget_Events/tables/TABLE_ID/insertAll",r=!1,a=1e3,l="",u=0,c="";return{log:i}}(RiseVision.Common.LoggerUtils);var RiseVision=RiseVision||{};RiseVision.RSS={},RiseVision.RSS=function(t,e){"use strict";function n(){e.rpc.call("","rsevent_ready",null,I.getString("id"),!0,!0,!0,!0,!0)}function i(){e.rpc.call("","rsevent_done",null,I.getString("id")),null!==D&&m(D,!0),m({event:"done",feed_url:x.url},!1)}function o(){var t={event:"error",event_details:"no feed items",feed_url:x.url};m(t,!0),T("There are no items to show from this RSS feed.")}function s(){clearTimeout(A),A=null}function r(){s(),A=setTimeout(function(){i()},5e3)}function a(){V=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),V.show("Please wait while your feed is loaded.")}function l(t){var e=[{"class":"story_font-style",fontStyle:x.story.fontStyle}];x.headline&&!_.isEmpty(x.headline.fontStyle)&&e.push({"class":"headline_font-style",fontStyle:x.headline.fontStyle}),x.timestamp&&!_.isEmpty(x.timestamp.fontStyle)&&e.push({"class":"timestamp_font-style",fontStyle:x.timestamp.fontStyle}),x.author&&!_.isEmpty(x.author.fontStyle)&&e.push({"class":"author_font-style",fontStyle:x.author.fontStyle}),t&&"function"==typeof t?RiseVision.Common.Utilities.loadFonts(e,t):RiseVision.Common.Utilities.loadFonts(e)
}function u(){E=new RiseVision.RSS.RiseRSS(x),E.init()}function c(){var t=window.location.pathname,e=t.lastIndexOf("/")+1;t=t.substr(0,e)+"layouts/","undefined"==typeof x.layout?t+="layout-4x1.html":"custom"===x.layout?t=x.layoutUrl:t+=x.layout+".html",$.get(t).done(function(t){f(t)}).fail(function(){d(t)})}function f(t){$("#container").append(t),a(),l(),u(),n()}function d(e){V=new RiseVision.Common.Message(t.getElementById("container"),t.getElementById("messageContainer")),V.show("The layout file could not be loaded."),m({event:"error",event_details:"layout not loaded",error_details:e,feed_url:x.url},!0),n()}function h(){return x.transition?"scroll"===x.transition.type&&"left"===x.transition.direction?!0:!1:!1}function p(){t.getElementById("scroller").style.display="block",a(),l(function(){u(),n()})}function g(){return"rss_events"}function m(t,e){e&&(D=t),RiseVision.Common.LoggerUtils.logEvent(g(),t)}function y(){i()}function v(t){k=new RiseVision.RSS.Content(I,x),t.items&&t.items.length>0?(V.hide(),L=_.clone(t),k.init(L),O||k.play()):o()}function w(t){var e,n=!1;if(t.items&&0!==t.items.length)if(L&&t.items.length===L.items.length){for(e=0;e<L.items.length;e+=1)if(!_.isEqual(t.items[e],L.items[e])){n=!0;break}}else n=!0;else o();n&&(L=_.clone(t),N?(k||(k=new RiseVision.RSS.Content(I,x)),V.hide(),k.init(L),N=!1,D=null):k.update(t))}function S(){return O=!0,N?(s(),void 0):(k&&k.pause(),void 0)}function R(){return O=!1,m({event:"play",feed_url:x.url},!1),N?(r(),void 0):(k&&k.play(),void 0)}function b(n){x=JSON.parse(JSON.stringify(n)),I=new e.Prefs,x.width=I.getInt("rsW"),x.height=I.getInt("rsH"),t.getElementById("container").style.width=x.width+"px",t.getElementById("container").style.height=x.height+"px",h()?p():c()}function T(t){N=!0,k||(k=new RiseVision.RSS.Content(I,x)),k.reset(),L=null,V.show(t),O||r()}function C(){S()}var x=null,I=new e.Prefs,V=null,E=null,k=null,L=null,O=!0,A=null,D=null,N=!1;return{getTableName:g,logEvent:m,onContentDone:y,onRiseRSSInit:v,onRiseRSSRefresh:w,pause:S,play:R,setAdditionalParams:b,showError:T,stop:C}}(document,gadgets);var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Utils=function(){"use strict";function t(t){var e,n,i=document.createElement("div");for(i.innerHTML=t,e=i.getElementsByTagName("script"),n=e.length;n--;)e[n].parentNode.removeChild(e[n]);return i.innerHTML}function e(t,e){var n=e?e:120;return t.length>n&&(t=t.substring(0,n),t=t.replace(/\w+$/,""),t+=" ..."),t}return{stripScripts:t,truncate:e}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Images={},RiseVision.RSS.Images=function(){"use strict";function t(t){a.push(t),r+=1,r===s.length&&l&&"function"==typeof l&&l()}function e(e){var n=new Image;n.onload=function(){t(this)},n.onerror=function(){t(this)},n.src=e}function n(){var n;for(n=0;n<s.length;n+=1)null===s[n]?t(null):e(s[n])}function i(t,e){t.length>0?(s=t,a=[],r=0,e&&(l=e),n()):e&&"function"==typeof e&&e()}function o(){return a}var s=[],r=0,a=[],l=null;return{getImages:o,load:i}}();var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.RiseRSS=function(t){"use strict";function e(){var e=document.querySelector("rise-rss");e.addEventListener("rise-rss-response",function(t){t.detail&&t.detail.feed&&(n?(n=!1,RiseVision.RSS.onRiseRSSInit(t.detail.feed)):RiseVision.RSS.onRiseRSSRefresh(t.detail.feed))}),e.addEventListener("rise-rss-error",function(e){var n="",i={event:"error",feed_url:t.url};e.detail&&"string"==typeof e.detail?n=e.detail:e.detail&&Array.isArray(e.detail)&&e.detail.length>0&&(n=e.detail[0]),i.error_details=n,i.event_details="rise rss error","401 unauthorized"===n.toLowerCase()?(i.event_details="feed authentication error",RiseVision.RSS.showError("The feed at the URL provided cannot be shown because it is protected and requires authentication.")):"404 not found"===n.toLowerCase()?(i.event_details="feed not found",RiseVision.RSS.showError("The feed URL <span class='error-link'>"+t.url+"</span> could not be found.")):"not a feed"===n.toLowerCase()?RiseVision.RSS.showError("The URL provided is not an RSS feed."):RiseVision.RSS.showError("Sorry, there was a problem with the RSS feed."),RiseVision.RSS.logEvent(i,!0)}),e.setAttribute("url",t.url),t.itemsInQueue&&e.setAttribute("entries",t.itemsInQueue),e.go()}var n=!0;return{init:e}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionNoScroll=function(t,e){"use strict";function n(e){var n={};return e+t.itemsToShow>=g.length-1?(n.itemsToShow=g.length-(e+1),n.currentItemIndex=g.length-1):(n.itemsToShow=t.itemsToShow,n.currentItemIndex=e+t.itemsToShow),n}function i(){var e={};return g.length<=t.itemsToShow?(e.itemsToShow=g.length,e.currentItemIndex=g.length-1):(e.itemsToShow=t.itemsToShow,e.currentItemIndex=t.itemsToShow-1),e}function o(t){$(".page").empty(),t&&"function"==typeof t&&t()}function s(e){"fade"===t.transition.type?($(".item").one("webkitTransitionEnd transitionend",function(){o(e)}),$(".item").addClass("fade-out").removeClass("fade-in")):o(e)}function r(n){e.showItem(n),"fade"===t.transition.type&&$(".item").addClass("fade-in"),$(".item").removeClass("hide")}function a(){var t,o,a=i(),l=n(m);return m===g.length-1?(u(),s(function(){for(o=0;o<a.itemsToShow;o+=1)r(o);m=a.currentItemIndex,RiseVision.RSS.onContentDone()}),v=!1,void 0):(v?(v=!1,e.loadImages(function(){s(function(){for(o=0;o<a.itemsToShow;o+=1)r(o);m=a.currentItemIndex})})):(t=m+1,m=l.currentItemIndex,s(function(){for(o=t;o<t+l.itemsToShow;o+=1)r(o)})),void 0)}function l(){var e=t.transition.duration/1e3>=1?t.transition.duration:1e3*t.transition.duration;null===y&&(y=setInterval(function(){a()},e))}function u(){clearInterval(y),y=null}function c(t){var e,n;for(g=t,e=i(),m=e.currentItemIndex,n=0;n<e.itemsToShow;n+=1)r(n);w&&(w=!1,d())}function f(){s(),w=!1,v=!1,g=[]}function d(){g.length>0?l():w=!0}function h(){w=!1,u()}function p(t){g=t,v=!0}var g=[],m=0,y=null,v=!1,w=!1;return{init:c,reset:f,start:d,stop:h,update:p}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.TransitionVerticalScroll=function(t,e){"use strict";function n(){$(".page").empty()}function i(){var t=$("#container");return"undefined"!=typeof t.data("plugin_autoScroll")?t.data("plugin_autoScroll"):null}function o(){var t=i();t&&($("#container").autoScroll().off("done",a),t.destroy(),$(".page").css("visibility","inherit"),$(".page").css("opacity","1"))}function s(){var t;for(t=0;t<p.length;t+=1)e.showItem(t);$(".item").removeClass("hide")}function r(){var e;e=void 0===t.transition.pud||t.transition.pud<1?1e4:1e3*t.transition.pud,y||(y=setTimeout(function(){y=null,a()},e))}function a(){g?(g=!1,o(),e.loadImages(function(){n(),s(),l(),RiseVision.RSS.onContentDone()})):RiseVision.RSS.onContentDone()}function l(){var e=$("#container");e.autoScroll({by:"scroll"===t.transition.type?"continuous":"page",speed:t.transition.speed,duration:t.transition.duration,pause:t.transition.resume}).on("done",a)}function u(t){p=t,s(),l(),m&&(m=!1,f())}function c(){o(),n(),m=!1,p=[]}function f(){var t=i();p.length>0?t&&t.canScroll()?t.play():r():m=!0}function d(){var t=i();m=!1,t&&t.canScroll()&&t.pause(),y&&(clearTimeout(y),y=null)}function h(t){p=t,g=!0}var p=[],g=!1,m=!1,y=null;return{init:u,reset:c,start:f,stop:d,update:h}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.HorizontalScroll=function(t,e){"use strict";function n(){var e=document.querySelector("#scroller");g=new RiseVision.Common.Scroller(t),e.addEventListener("scroller-oversized-canvas",function(){RiseVision.RSS.logEvent({event:"error",event_details:"canvas width is over the max size",feed_url:t.url})}),e.addEventListener("ready",o),e.addEventListener("done",s),g.init(i())}function i(){var n,i="",o="",s="",r="",a=null,l=[],u=t.separator&&t.separator.show;for(n=0;n<f.length;n++)i=e.getTitle(f[n]),o=e.getAuthor(f[n]),s=e.getDate(f[n]),r=e.getStory(f[n]),i&&("undefined"==typeof t.dataSelection.showTitle||t.dataSelection.showTitle)&&(a={},a.text=i,a.fontStyle=t.headline.fontStyle,l.push(a)),o&&("undefined"==typeof t.dataSelection.showAuthor||t.dataSelection.showAuthor)&&(a={},a.text=o,a.fontStyle=t.author.fontStyle,l.push(a)),s&&("undefined"==typeof t.dataSelection.showTimestamp||t.dataSelection.showTimestamp)&&(a={},a.text=s,a.fontStyle=t.timestamp.fontStyle,l.push(a)),r&&(a={},a.text=r,a.fontStyle=t.story.fontStyle,l.push(a)),u&&(a={},a.separator=!0,a.size=t.separator.size,a.color=t.separator.color,l.push(a));return l}function o(){p=!0,l()}function s(){d&&(d=!1,g.refresh(i())),RiseVision.RSS.onContentDone()}function r(t){document.getElementById("container").style.display="none",f=t,n(),h&&(h=!1,l())}function a(){h=!1,f=[]}function l(){g&&p&&f.length>0?g.play():h=!0}function u(){h=!1,g&&g.pause()}function c(t){f=t,d=!0}var f=[],d=!1,h=!1,p=!1,g=null;return{init:r,reset:a,start:l,stop:u,update:c}};var RiseVision=RiseVision||{};RiseVision.RSS=RiseVision.RSS||{},RiseVision.RSS.Content=function(t,e){"use strict";function n(){var t=S.length<=e.itemsToShow?S.length:e.itemsToShow;return e.separator&&e.separator.show?e.height/t-e.separator.size:e.height/t}function i(t){var e=null;return _.has(t,"enclosures")&&t.enclosures[0]&&_.contains(C,t.enclosures[0].type)?e=t.enclosures[0].url:t.image&&t.image.url&&(e=t.image.url),e}function o(){var t,e=[];for(t=0;t<S.length;t+=1)e.push(i(S[t]));return e}function s(t,n){var i,o,s,r=null,a=parseInt(t.css("margin-left"),10)+parseInt(t.css("margin-right"),10),l=parseInt(t.css("margin-top"),10)+parseInt(t.css("margin-bottom"),10);switch(e.layout){case"layout-4x1":r={},r.width=.33*e.width,r.height=e.height/e.itemsToShow-l;break;case"layout-2x1":r={},r.width=0===$(n).find(".story").length?e.width-a:.5*e.width,r.height=e.height/e.itemsToShow-$(n).find(".textWrapper").outerHeight(!0)-l;break;case"layout-16x9":r={},r.width=e.width-a,r.height=e.height/e.itemsToShow-l;break;case"layout-1x2":r={},r.width=e.width-a,r.height=(e.height/e.itemsToShow-l)/2}return r&&(i=r.width/parseInt(t.width()),o=r.height/parseInt(t.height()),s=o>i?i:o,r.width=parseInt(parseInt(t.width())*s),r.height=parseInt(parseInt(t.height())*s)),r}function r(t,n){var o,s,r,a=h(t),l=d(t),u=c(t),p=i(t),g=f(t),m=document.querySelector("#layout").content,y=$(m.cloneNode(!0)),v=!1;return!t.title||"undefined"!=typeof e.dataSelection.showTitle&&!e.dataSelection.showTitle?y.find(".headline").remove():(y.find(".headline").css("textAlign",e.headline.fontStyle.align),y.find(".headline a").html(a).text()),!g||"undefined"!=typeof e.dataSelection.showTimestamp&&!e.dataSelection.showTimestamp?(v=!0,y.find(".timestamp").remove()):(e.timestamp&&y.find(".timestamp").css("textAlign",e.timestamp.fontStyle.align),y.find(".timestamp").text(g)),!u||"undefined"!=typeof e.dataSelection.showAuthor&&!e.dataSelection.showAuthor?(v=!0,y.find(".author").remove()):(e.author&&y.find(".author").css("textAlign",e.author.fontStyle.align),y.find(".author").text(u)),v&&y.find(".separator").remove(),!p||"undefined"!=typeof e.dataSelection.showImage&&!e.dataSelection.showImage?y.find(".image").remove():(r=b.getImages()[n],r&&y.find(".image").attr("src",p)),l?(o=y.find(".story"),o.css("textAlign",e.story.fontStyle.align),o.html(l),o.find("p").addClass("story_font-style"),o.find("div").addClass("story_font-style"),o.find("span").addClass("story_font-style")):y.remove(".story"),s=$(document.importNode(y[0],!0))}function a(){$(".item").each(function(){var t=$(this).find(".image"),e=null;t&&(e=s(t,this),e&&(t.width(e.width),t.height(e.height)))})}function l(t){$(".page").append(r(S[t],t)),a(),e.separator&&e.separator.show&&$(".item").css("border-bottom","solid "+e.separator.size+"px "+e.separator.color),$(".item").height(n()),"layout-16x9"!==e.layout&&$(".item").dotdotdot({height:n()})}function u(t){S=t.items,T||(e.transition||(e.transition={type:"none",duration:10,direction:"up"}),"none"===e.transition.type||"fade"===e.transition.type?T=new RiseVision.RSS.TransitionNoScroll(e,this):"scroll"===e.transition.type?"up"===e.transition.direction?T=new RiseVision.RSS.TransitionVerticalScroll(e,this):"left"===e.transition.direction&&(T=new RiseVision.RSS.HorizontalScroll(e,this)):"page"===e.transition.type&&(T=new RiseVision.RSS.TransitionVerticalScroll(e,this))),p(function(){T.init(S)})}function c(t){var e=null;return t.author?e=t.author:_.has(t,"dc:creator")&&(e=t["dc:creator"]["#"]),e}function f(t){var e,n=t.date,i=null;return n&&(n=new Date(n),e={year:"numeric",month:"long",day:"numeric"},i=n.toLocaleDateString("en-us",e)),i}function d(t){var n=null;return _.has(t,"description")&&("full"===e.dataSelection.showDescription?n=R.stripScripts(t.description):"snippet"===e.dataSelection.showDescription&&e.dataSelection.snippetLength>0&&(n=R.truncate($("<div/>").html(R.stripScripts(t.description)).text(),e.dataSelection.snippetLength))),n}function h(t){var e=null;return t.title&&(e=R.stripScripts(t.title)),e}function p(t){b.load(o(),function(){t&&"function"==typeof t&&t()})}function g(){T&&T.stop()}function m(){T&&T.start()}function y(){T&&(T.stop(),T.reset()),S=[]}function v(t){l(t)}function w(t){S=t.items,T&&T.update(S)}var S=[],R=RiseVision.RSS.Utils,b=RiseVision.RSS.Images,T=null,C=["image/bmp","image/gif","image/jpeg","image/jpg","image/png","image/tiff"];return{init:u,getAuthor:c,getDate:f,getStory:d,getTitle:h,loadImages:p,pause:g,play:m,reset:y,showItem:v,update:w}};var RiseVision=RiseVision||{};RiseVision.Common=RiseVision.Common||{},RiseVision.Common.Message=function(t,e){"use strict";function n(){try{e.style.height=t.style.height}catch(n){console.warn("Can't initialize Message - ",n.message)}}function i(){if(s){for(;e.firstChild;)e.removeChild(e.firstChild);e.style.display="none",t.style.display="block",s=!1}}function o(n){var i,o=document.createDocumentFragment();s?(i=e.querySelector(".message"),i.innerHTML=n):(t.style.display="none",e.style.display="block",i=document.createElement("p"),i.innerHTML=n,i.setAttribute("class","message"),o.appendChild(i),e.appendChild(o),s=!0)}var s=!1;return n(),{hide:i,show:o}},function(t,e,n){"use strict";function i(t,e){var n,i="",o="";Array.isArray(t)&&t.length>0&&Array.isArray(e)&&e.length>0&&("companyId"===t[0]&&(i=e[0]),"displayId"===t[1]&&(o=e[1]?e[1]:"preview"),RiseVision.Common.LoggerUtils.setIds(i,o),"additionalParams"===t[2]&&(n=JSON.parse(e[2]),RiseVision.RSS.setAdditionalParams(n)))}function o(){RiseVision.RSS.play()}function s(){RiseVision.RSS.pause()}function r(){RiseVision.RSS.stop()}function a(){t.removeEventListener("WebComponentsReady",a),u&&""!==u&&(n.rpc.register("rscmd_play_"+u,o),n.rpc.register("rscmd_pause_"+u,s),n.rpc.register("rscmd_stop_"+u,r),n.rpc.register("rsparam_set_"+u,i),n.rpc.call("","rsparam_get",null,u,["companyId","displayId","additionalParams"]))}var l=new n.Prefs,u=l.getString("id");t.oncontextmenu=function(){return!1},e.body.onmousedown=function(){return!1},t.addEventListener("WebComponentsReady",a)}(window,document,gadgets);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3dpZGdldC5taW4uanMiXSwibmFtZXMiOlsiJCIsInVuZGVmIiwiY2hpbGRyZW4iLCIkZWxlbSIsIm8iLCJhZnRlciIsIiRlbGVtZW50cyIsImlzVHJ1bmNhdGVkIiwiZW1wdHkiLCJhIiwibCIsImxlbmd0aCIsIiRlIiwiZXEiLCJhcHBlbmQiLCJ0ZXN0IiwicmVtb3ZlIiwiZGV0YWNoIiwiZWxsaXBzaXMiLCIkZCIsIiRpIiwibm90eCIsIm5vdHkiLCJjb250ZW50cyIsImVhY2giLCJlIiwidGhpcyIsImlzIiwiZmluZCIsIm5vZGVUeXBlIiwiZWxsaXBzaXNFbGVtZW50IiwiYWRkQ2xhc3MiLCJ0eHQiLCJnZXRUZXh0Q29udGVudCIsInNwYWNlIiwiaW5kZXhPZiIsInNlcGFyYXRvciIsIndyYXAiLCJ0ZXh0QXJyIiwic3BsaXQiLCJwb3NpdGlvbiIsIm1pZFBvcyIsInN0YXJ0UG9zIiwiZW5kUG9zIiwiZmFsbGJhY2tUb0xldHRlciIsIm0iLCJNYXRoIiwiZmxvb3IiLCJzZXRUZXh0Q29udGVudCIsInNsaWNlIiwiam9pbiIsInRvZ2dsZSIsIiR3IiwicGFyZW50IiwiYWZ0ZXJMZW5ndGgiLCJjbG9zZXN0IiwiZmluZExhc3RUZXh0Tm9kZSIsImFkZEVsbGlwc2lzIiwiJHBhcmVudCIsInRyaW0iLCJodG1sIiwiaW5uZXJIZWlnaHQiLCJtYXhIZWlnaHQiLCJpbkFycmF5IiwibGFzdENoYXJhY3RlciIsIm5vRWxsaXBzaXMiLCJnZXRTaXplcyIsIndpZHRoIiwiaW5uZXJXaWR0aCIsImhlaWdodCIsImNvbnRlbnQiLCJpbm5lclRleHQiLCJub2RlVmFsdWUiLCJ0ZXh0Q29udGVudCIsImdldFByZXZOb2RlIiwibiIsInByZXZpb3VzU2libGluZyIsIiRlbCIsIiR0b3AiLCJleGNsdWRlQ3VycmVudCIsInAiLCJ0ZXh0IiwibGFzdCIsImdldEVsZW1lbnQiLCJqcXVlcnkiLCJnZXRUcnVlSW5uZXJIZWlnaHQiLCJoIiwieiIsInBhcnNlSW50IiwiY3NzIiwiaXNOYU4iLCJmbiIsImRvdGRvdGRvdCIsImRlYnVnIiwic2VsZWN0b3IiLCIkZG90Iiwib3JnQ29udGVudCIsImRhdGEiLCJ0cmlnZ2VyIiwiYXR0ciIsImJpbmRfZXZlbnRzIiwiYmluZCIsImMiLCJyZW1vdmVDbGFzcyIsInByZXZlbnREZWZhdWx0Iiwic3RvcFByb3BhZ2F0aW9uIiwib3B0cyIsImNhbGwiLCJ0b2xlcmFuY2UiLCIkaW5yIiwid3JhcElubmVyIiwiZW5kIiwiY2xvbmUiLCJyZXBsYWNlV2l0aCIsImJvcmRlciIsInBhZGRpbmciLCJtYXJnaW4iLCJ0cnVuYyIsImNvbmYiLCJhZnRlckVsZW1lbnQiLCJzaG93IiwiaXNGdW5jdGlvbiIsImNhbGxiYWNrIiwidW53YXRjaCIsInVuYmluZF9ldmVudHMiLCJ1bmJpbmQiLCJ3YXRjaCIsIiR3aW5kb3ciLCJ3aW5kb3ciLCJfd1dpZHRoIiwiX3dIZWlnaHQiLCJkb3RJZCIsIndpbmRvd1Jlc2l6ZUZpeCIsIndhdGNoSW50IiwiY2xlYXJJbnRlcnZhbCIsInNldFRpbWVvdXQiLCJ3YXRjaE9yZyIsInNldEludGVydmFsIiwid2F0Y2hOZXciLCJleHRlbmQiLCJkZWZhdWx0cyIsIkFycmF5IiwiZGVmYXVsdEFycmF5cyIsIl9vcmdIdG1sIiwic3RyIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJfb3JnVGV4dCIsImpRdWVyeSIsImRvY3VtZW50IiwicmVhZHkiLCJ3YXRjaF93aW5kb3ciLCJoYXNDbGFzcyIsIndhdGNoX3RpbWVyIiwiY2xhc3NMaXN0IiwiaW5kZXgiLCJpdGVtIiwibWF0Y2hSZXN1bHQiLCJtYXRjaCIsIk51bWJlciIsIngiLCJPYmplY3QiLCJvbiIsImFhIiwiYmEiLCJiIiwiRXJyb3IiLCJkIiwicHJvdG90eXBlIiwidW5zaGlmdCIsIkZ1bmN0aW9uIiwidG9TdHJpbmciLCJjYSIsInQiLCJjcmVhdGVFbGVtZW50IiwiaGFzT3duUHJvcGVydHkiLCJzdHlsZSIsImNzc1RleHQiLCJzZXRBdHRyaWJ1dGUiLCJhcHBlbmRDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwidSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiZG9jdW1lbnRFbGVtZW50IiwiaW5zZXJ0QmVmb3JlIiwibGFzdENoaWxkIiwidiIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInciLCJjbGFzc05hbWUiLCJmIiwiZyIsInB1c2giLCJyZXBsYWNlIiwieSIsImVhIiwibG9jYXRpb24iLCJob3N0bmFtZSIsInJlbCIsImhyZWYiLCJtZWRpYSIsImRhIiwib25sb2FkIiwib25lcnJvciIsIkEiLCJzcmMiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwidGFnTmFtZSIsIkIiLCJDIiwiRCIsIkUiLCJGIiwiRyIsImZhIiwiSCIsIkkiLCJKIiwiZ2EiLCJzdWJzdHIiLCJ0b0xvd2VyQ2FzZSIsImhhIiwiaiIsImV2ZW50cyIsImNsYXNzZXMiLCJpYSIsIksiLCJMIiwiamEiLCJrYSIsIk0iLCJhcmlhLWhpZGRlbiIsIk4iLCJPIiwiUCIsIlEiLCJzIiwiVCIsIlMiLCJleGVjIiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwibGEiLCJSIiwiVSIsIm9mZnNldFdpZHRoIiwic2VyaWYiLCJxIiwiViIsIm1hIiwiVyIsIm5hIiwib2EiLCJxYSIsImsiLCJyIiwiWCIsIkZvbnRGYWNlIiwieGEiLCJ2ZW5kb3IiLCJzdGFydCIsInBhIiwidGltZW91dCIsImxvYWQiLCJyYSIsInNhIiwidGEiLCJ1YSIsInZhIiwicG9wIiwid2EiLCJlbmNvZGVVUklDb21wb25lbnQiLCJ5YSIsIkRhIiwiQ2EiLCJCYSIsIkFhIiwiemEiLCJFYSIsIkdhIiwiSGEiLCJEYXRlIiwibm93IiwiUHJvbWlzZSIsImZvbnRzIiwidGhlbiIsInJhY2UiLCJjbGVhclRpbWVvdXQiLCJjb250ZXh0IiwiZm9udGZhbWlseSIsImZvbnRTdHlsZSIsImZvbnRXZWlnaHQiLCJwcm9qZWN0SWQiLCJ2ZXJzaW9uIiwiYXBpIiwiaWQiLCJ1cmxzIiwiZmFtaWxpZXMiLCJ0ZXN0U3RyaW5ncyIsImxhdGluIiwibGF0aW4tZXh0IiwiY3lyaWxsaWMiLCJncmVlayIsImtobWVyIiwiSGFudW1hbiIsInRoaW4iLCJleHRyYWxpZ2h0IiwiZXh0cmEtbGlnaHQiLCJ1bHRyYWxpZ2h0IiwidWx0cmEtbGlnaHQiLCJsaWdodCIsInJlZ3VsYXIiLCJib29rIiwibWVkaXVtIiwic2VtaS1ib2xkIiwic2VtaWJvbGQiLCJkZW1pLWJvbGQiLCJkZW1pYm9sZCIsImJvbGQiLCJleHRyYS1ib2xkIiwiZXh0cmFib2xkIiwidWx0cmEtYm9sZCIsInVsdHJhYm9sZCIsImJsYWNrIiwiaGVhdnkiLCJpIiwiaXRhbGljIiwibm9ybWFsIiwiRmEiLCJBcmltbyIsIkNvdXNpbmUiLCJUaW5vcyIsIlR5cGVraXQiLCJjb25maWciLCJhc3luYyIsIl9fd2ViZm9udGZvbnRkZWNrbW9kdWxlX18iLCJuYW1lIiwid2VpZ2h0IiwiWSIsImN1c3RvbSIsImZvbnRkZWNrIiwibW9ub3R5cGUiLCJ0eXBla2l0IiwiZ29vZ2xlIiwiWiIsImRlZmluZSIsImFtZCIsIm1vZHVsZSIsImV4cG9ydHMiLCJXZWJGb250IiwiV2ViRm9udENvbmZpZyIsInVuZGVmaW5lZCIsIlBsdWdpbiIsImVsZW1lbnQiLCJvcHRpb25zIiwicGFnZSIsIl9kZWZhdWx0cyIsIl9uYW1lIiwicGx1Z2luTmFtZSIsImlzTG9hZGluZyIsImRyYWdnYWJsZSIsInR3ZWVuIiwiY2FsY3VsYXRlUHJvZ3Jlc3MiLCJpbml0IiwiYnkiLCJzcGVlZCIsImR1cmF0aW9uIiwicGF1c2UiLCJjbGljayIsIm1pbmltdW1Nb3ZlbWVudCIsInBhdXNlVHdlZW4iLCJzZWxmIiwiVHdlZW5MaXRlIiwia2lsbERlbGF5ZWRDYWxsc1RvIiwic2Nyb2xsQ29tcGxldGUiLCJwYWdlQ29tcGxldGUiLCJlbGVtZW50SGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJwYXVzZUhlaWdodCIsIm1heCIsInNjcm9sbEhlaWdodCIsIm9mZnNldEhlaWdodCIsInNjcm9sbFRvcCIsInByb2dyZXNzIiwicGxheSIsImNhblNjcm9sbCIsImFicyIsIkRyYWdnYWJsZSIsImNyZWF0ZSIsInR5cGUiLCJ0aHJvd1Byb3BzIiwiZWRnZVJlc2lzdGFuY2UiLCJvblByZXNzIiwib25SZWxlYXNlIiwiZGVsYXllZENhbGwiLCJvbkNsaWNrIiwicG9pbnRlckV2ZW50IiwiZ2V0IiwidG8iLCJzY3JvbGxQcm94eSIsImVhc2UiLCJMaW5lYXIiLCJlYXNlTm9uZSIsImRlbGF5IiwicGF1c2VkIiwib25VcGRhdGUiLCJ0b3AiLCJyZXN1bWUiLCJvbkNvbXBsZXRlIiwiYXV0b0FscGhhIiwic2VlayIsInNldCIsIm92ZXJmbG93WSIsImRlc3Ryb3kiLCJyZW1vdmVEYXRhIiwia2lsbCIsInN0b3AiLCJhdXRvU2Nyb2xsIiwiV0lER0VUX0NPTU1PTl9DT05GSUciLCJBVVRIX1BBVEhfVVJMIiwiTE9HR0VSX0NMSUVOVF9JRCIsIkxPR0dFUl9DTElFTlRfU0VDUkVUIiwiTE9HR0VSX1JFRlJFU0hfVE9LRU4iLCJTVE9SRV9VUkwiLCJSaXNlVmlzaW9uIiwiQ29tbW9uIiwiVXRpbGl0aWVzIiwiZ2V0Rm9udENzc1N0eWxlIiwiZm9udE9iaiIsImZhbWlseSIsImRlY29kZVVSSUNvbXBvbmVudCIsImZvbnQiLCJjb2xvciIsImZvcmVjb2xvciIsInNpemUiLCJ1bmRlcmxpbmUiLCJoaWdobGlnaHQiLCJoaWdobGlnaHRDb2xvciIsImJhY2tjb2xvciIsImFkZENTU1J1bGVzIiwicnVsZXMiLCJoZWFkIiwibG9hZEZvbnRzIiwic2V0dGluZ3MiLCJjYiIsIm9uR29vZ2xlRm9udHNMb2FkZWQiLCJnb29nbGVGYW1pbGllcyIsImN1c3RvbUZhbWlsaWVzIiwiY3VzdG9tVXJscyIsImZvckVhY2giLCJjbGFzcyIsInVybCIsImxvYWRDdXN0b21Gb250IiwibG9hZEdvb2dsZUZvbnRzIiwiY29udGVudERvYyIsInNoZWV0IiwicnVsZSIsInN0eWxlU2hlZXRzIiwiYWRkUnVsZSIsImFjdGl2ZSIsImluYWN0aXZlIiwibG9hZFNjcmlwdCIsInNjcmlwdCIsImJvZHkiLCJwcmVsb2FkSW1hZ2VzIiwiaW1hZ2VzIiwiSW1hZ2UiLCJnZXRRdWVyeVBhcmFtZXRlciIsInBhcmFtIiwiZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXIiLCJzZWFyY2giLCJzdWJzdHJpbmciLCJxdWVyeSIsInBhaXIiLCJ2YXJzIiwiZ2V0RGF0ZU9iamVjdEZyb21QbGF5ZXJWZXJzaW9uU3RyaW5nIiwicGxheWVyVmVyc2lvbiIsInJlZ2dpZSIsImRhdGVBcnJheSIsImdldFJpc2VDYWNoZUVycm9yTWVzc2FnZSIsInN0YXR1c0NvZGUiLCJlcnJvck1lc3NhZ2UiLCJ1bmVzY2FwZUhUTUwiLCJkaXYiLCJpbm5lckhUTUwiLCJoYXNJbnRlcm5ldENvbm5lY3Rpb24iLCJmaWxlUGF0aCIsInhociIsIlhNTEh0dHBSZXF1ZXN0Iiwib3BlbiIsImdldFRpbWUiLCJzZW5kIiwic3RhdHVzIiwiaXNMZWdhY3kiLCJsZWdhY3lWZXJzaW9uIiwiYWRkUHJvdG9jb2wiLCJzZWN1cmUiLCJTY3JvbGxlciIsInBhcmFtcyIsImluaXRTZWNvbmRhcnlDYW52YXMiLCJkcmF3SXRlbXMiLCJmaWxsU2Nyb2xsZXIiLCJfeHBvcyIsIk1BWF9DQU5WQVNfU0laRSIsInRocm93T3ZlcnNpemVkQ2FudmVzRXJyb3IiLCJfc2Vjb25kYXJ5IiwiZXZlbnQiLCJFdmVudCIsIl9zY3JvbGxlciIsImRpc3BhdGNoRXZlbnQiLCJfaXRlbXMiLCJkcmF3U2VwYXJhdG9yIiwiZHJhd0l0ZW0iLCJyYWRpdXMiLCJfc2Vjb25kYXJ5Q3R4Iiwic2F2ZSIsImZpbGxTdHlsZSIsImJlZ2luUGF0aCIsImFyYyIsIlBJIiwiZmlsbCIsInJlc3RvcmUiLCJ0ZXh0T2JqIiwiX3V0aWxzIiwiZm9yZUNvbG9yIiwiZHJhd1RleHQiLCJ0ZXh0QmFzZWxpbmUiLCJ0cmFuc2xhdGUiLCJmaWxsVGV4dCIsIm1lYXN1cmVUZXh0IiwiZHJhdyIsIl9zY3JvbGxlckN0eCIsImNsZWFyUmVjdCIsImRyYXdJbWFnZSIsInhwb3MiLCJfb3JpZ2luYWxYcG9zIiwiZ2V0RGVsYXkiLCJmYWN0b3IiLCJ0cmFuc2l0aW9uIiwiX3R3ZWVuIiwiQ3VzdG9tRXZlbnQiLCJidWJibGVzIiwiY3JlYXRlU2Vjb25kYXJ5Q2FudmFzIiwiZGlzcGxheSIsImluaXRDYW52YXMiLCJjYW52YXMiLCJnZXRDb250ZXh0IiwiaXRlbXMiLCJnZXRFbGVtZW50QnlJZCIsInRpY2tlciIsImFkZEV2ZW50TGlzdGVuZXIiLCJyZWZyZXNoIiwiTG9nZ2VyVXRpbHMiLCJnZXRFdmVudFBhcmFtcyIsImpzb24iLCJmaWxlX3VybCIsImZpbGVfZm9ybWF0IiwiZ2V0RmlsZUZvcm1hdCIsImNvbXBhbnlfaWQiLCJjb21wYW55SWQiLCJkaXNwbGF5X2lkIiwiZGlzcGxheUlkIiwiZ2V0U3VmZml4IiwiZGF0ZSIsInllYXIiLCJnZXRVVENGdWxsWWVhciIsIm1vbnRoIiwiZ2V0VVRDTW9udGgiLCJkYXkiLCJnZXRVVENEYXRlIiwiaGFzUGFyYW1zIiwibGFzdEluZGV4T2YiLCJnZXRJbnNlcnREYXRhIiwiQkFTRV9JTlNFUlRfU0NIRU1BIiwia2luZCIsInNraXBJbnZhbGlkUm93cyIsImlnbm9yZVVua25vd25WYWx1ZXMiLCJ0ZW1wbGF0ZVN1ZmZpeCIsInJvd3MiLCJpbnNlcnRJZCIsIkpTT04iLCJwYXJzZSIsInN0cmluZ2lmeSIsInJhbmRvbSIsInRvVXBwZXJDYXNlIiwidHMiLCJ0b0lTT1N0cmluZyIsImxvZ0V2ZW50IiwidGFibGUiLCJMb2dnZXIiLCJsb2ciLCJsb2dFdmVudFRvUGxheWVyIiwicG9zdFRvUGxheWVyIiwibWVzc2FnZSIsInN1ZmZpeCIsImVyciIsImNvbnNvbGUiLCJzZXRJZHMiLCJjb21wYW55Iiwic2V0VmVyc2lvbiIsInZhbHVlIiwidXRpbHMiLCJyZWZyZXNoVG9rZW4iLCJyZWZyZXNoRGF0ZSIsIlJFRlJFU0hfVVJMIiwib25sb2FkZW5kIiwicmVzcCIsInJlc3BvbnNlIiwid2FybiIsInRva2VuIiwiYWNjZXNzX3Rva2VuIiwicmVmcmVzaGVkQXQiLCJpc1Rocm90dGxlZCIsInRocm90dGxlIiwibGFzdEV2ZW50IiwidGFibGVOYW1lIiwiaW5zZXJ0V2l0aFRva2VuIiwicmVmcmVzaERhdGEiLCJpbnNlcnREYXRhIiwic2VydmljZVVybCIsInNldFJlcXVlc3RIZWFkZXIiLCJlbmFibGVXaWRnZXRMb2dnaW5nIiwidGhyb3R0bGVEZWxheSIsIlJTUyIsImdhZGdldHMiLCJfcmVhZHkiLCJycGMiLCJfcHJlZnMiLCJnZXRTdHJpbmciLCJfZG9uZSIsIl9lcnJvckxvZyIsImZlZWRfdXJsIiwiX2FkZGl0aW9uYWxQYXJhbXMiLCJfbm9GZWVkSXRlbXMiLCJldmVudF9kZXRhaWxzIiwic2hvd0Vycm9yIiwiX2NsZWFyRXJyb3JUaW1lciIsIl9lcnJvclRpbWVyIiwiX3N0YXJ0RXJyb3JUaW1lciIsIl9zaG93TG9hZGluZ01lc3NhZ2UiLCJfbWVzc2FnZSIsIk1lc3NhZ2UiLCJfbG9hZEZvbnRzIiwiZm9udFNldHRpbmdzIiwic3RvcnkiLCJoZWFkbGluZSIsIl8iLCJpc0VtcHR5IiwidGltZXN0YW1wIiwiYXV0aG9yIiwiX2luaXRSaXNlUlNTIiwiX3Jpc2Vyc3MiLCJSaXNlUlNTIiwiX2xvYWRMYXlvdXQiLCJwYXRobmFtZSIsImxheW91dCIsImxheW91dFVybCIsImRvbmUiLCJfb25MYXlvdXRMb2FkZWQiLCJmYWlsIiwiX29uTGF5b3V0Tm90TG9hZGVkIiwiZXJyb3JfZGV0YWlscyIsIl9pc0hvcml6b250YWxTY3JvbGwiLCJkaXJlY3Rpb24iLCJfaW5pdEhvcml6b250YWxTY3JvbGwiLCJnZXRUYWJsZU5hbWUiLCJpc0Vycm9yIiwib25Db250ZW50RG9uZSIsIm9uUmlzZVJTU0luaXQiLCJmZWVkIiwiX2NvbnRlbnQiLCJDb250ZW50IiwiaGlkZSIsIl9jdXJyZW50RmVlZCIsIl92aWV3ZXJQYXVzZWQiLCJvblJpc2VSU1NSZWZyZXNoIiwidXBkYXRlZCIsImlzRXF1YWwiLCJfZXJyb3JGbGFnIiwidXBkYXRlIiwic2V0QWRkaXRpb25hbFBhcmFtcyIsImFkZGl0aW9uYWxQYXJhbXMiLCJQcmVmcyIsImdldEludCIsInJlc2V0IiwiVXRpbHMiLCJzdHJpcFNjcmlwdHMiLCJzY3JpcHRzIiwidHJ1bmNhdGUiLCJtYXhMZW5ndGgiLCJJbWFnZXMiLCJfb25JbWFnZUxvYWRlZCIsImltYWdlIiwiX2ltYWdlcyIsIl9pbWFnZUNvdW50IiwiX2ltYWdlc1RvTG9hZCIsIl9jYWxsYmFjayIsIl9sb2FkSW1hZ2UiLCJpbWciLCJfbG9hZEltYWdlcyIsImdldEltYWdlcyIsInJzcyIsInF1ZXJ5U2VsZWN0b3IiLCJkZXRhaWwiLCJfaW5pdGlhbExvYWQiLCJlcnJvckRldGFpbHMiLCJpc0FycmF5IiwiaXRlbXNJblF1ZXVlIiwiZ28iLCJUcmFuc2l0aW9uTm9TY3JvbGwiLCJfZ2V0VHJhbnNpdGlvbkNvbmZpZyIsIml0ZW1zVG9TaG93IiwiY3VycmVudEl0ZW1JbmRleCIsIl9nZXRTdGFydENvbmZpZyIsIl9jbGVhclBhZ2UiLCJfY2xlYXIiLCJvbmUiLCJfc2hvdyIsInNob3dJdGVtIiwiX21ha2VUcmFuc2l0aW9uIiwic3RhcnRpbmdJbmRleCIsInN0YXJ0Q29uZmlnIiwidHJhbnNDb25maWciLCJfY3VycmVudEl0ZW1JbmRleCIsIl9zdG9wVHJhbnNpdGlvblRpbWVyIiwiX3dhaXRpbmdGb3JVcGRhdGUiLCJsb2FkSW1hZ2VzIiwiX3N0YXJ0VHJhbnNpdGlvblRpbWVyIiwiX3RyYW5zaXRpb25JbnRlcnZhbElkIiwiX3dhaXRpbmdUb1N0YXJ0IiwiVHJhbnNpdGlvblZlcnRpY2FsU2Nyb2xsIiwiX2dldFNjcm9sbEVsIiwiJHNjcm9sbENvbnRhaW5lciIsIl9yZW1vdmVBdXRvc2Nyb2xsIiwib2ZmIiwiX29uU2Nyb2xsRG9uZSIsIl9zaG93SXRlbXMiLCJfc3RhcnRQVURUaW1lciIsInB1ZCIsIl9wdWRUaW1lcklEIiwiX2FwcGx5QXV0b1Njcm9sbCIsIiRzY3JvbGwiLCJIb3Jpem9udGFsU2Nyb2xsIiwiX2luaXRTY3JvbGxlciIsInNjcm9sbGVyRWxlbSIsIl9vblNjcm9sbGVyUmVhZHkiLCJfb25TY3JvbGxlckRvbmUiLCJfZ2V0SXRlbXMiLCJ0aXRsZSIsInNob3dTZXBhcmF0b3IiLCJnZXRUaXRsZSIsImdldEF1dGhvciIsImdldERhdGUiLCJnZXRTdG9yeSIsImRhdGFTZWxlY3Rpb24iLCJzaG93VGl0bGUiLCJzaG93QXV0aG9yIiwic2hvd1RpbWVzdGFtcCIsIl9zY3JvbGxlclJlYWR5IiwicHJlZnMiLCJfZ2V0SXRlbUhlaWdodCIsIl9nZXRJbWFnZVVybCIsImltYWdlVXJsIiwiaGFzIiwiZW5jbG9zdXJlcyIsImNvbnRhaW5zIiwiX2ltYWdlVHlwZXMiLCJfZ2V0SW1hZ2VVcmxzIiwiX2dldEltYWdlRGltZW5zaW9ucyIsIiRpbWFnZSIsInJhdGlvWCIsInJhdGlvWSIsInNjYWxlIiwiZGltZW5zaW9ucyIsIm1hcmdpbldpZHRoIiwibWFyZ2luSGVpZ2h0IiwiX2dldFRlbXBsYXRlIiwiJHN0b3J5IiwidGVtcGxhdGUiLCIkY29udGVudCIsImNsb25lTm9kZSIsInJlbW92ZVNlcGFyYXRvciIsImFsaWduIiwic2hvd0ltYWdlIiwiaW1wb3J0Tm9kZSIsIl9zZXRJbWFnZURpbWVuc2lvbnMiLCJfc2hvd0l0ZW0iLCJfdHJhbnNpdGlvbiIsInB1YmRhdGUiLCJmb3JtYXR0ZWREYXRlIiwidG9Mb2NhbGVEYXRlU3RyaW5nIiwic2hvd0Rlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJzbmlwcGV0TGVuZ3RoIiwibWFpbkNvbnRhaW5lciIsIm1lc3NhZ2VDb250YWluZXIiLCJfaW5pdCIsIl9hY3RpdmUiLCJmaXJzdENoaWxkIiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50IiwiY29uZmlndXJlIiwibmFtZXMiLCJ2YWx1ZXMiLCJ3ZWJDb21wb25lbnRzUmVhZHkiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwicmVnaXN0ZXIiLCJvbmNvbnRleHRtZW51Iiwib25tb3VzZWRvd24iXSwibWFwcGluZ3MiOiJD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QixxQkFBc0JELEdBRTdDN2YsR0FBYSxLQUFQQSxJQUNUeVUsRUFBUUUsSUFBSW9MLFNBQVUsY0FBZ0IvZixFQUFJeUYsR0FDMUNnUCxFQUFRRSxJQUFJb0wsU0FBVSxlQUFpQi9mLEVBQUl3RSxHQUMzQ2lRLEVBQVFFLElBQUlvTCxTQUFVLGNBQWdCL2YsRUFBSXlILEdBQzFDZ04sRUFBUUUsSUFBSW9MLFNBQVUsZUFBaUIvZixFQUFJMGYsR0FDM0NqTCxFQUFRRSxJQUFJemdCLEtBQU0sR0FBSSxjQUFlLEtBQU04TCxHQUFNLFlBQWEsWUFBYSxzQkE1RC9FLEdBQUlnZCxHQUFRLEdBQUl2SSxHQUFRMEQsTUFDdEJuWSxFQUFLZ2QsRUFBTW5JLFVBQVcsS0FHeEJ0ZixHQUFPeXFCLGNBQWdCLFdBQ3JCLE9BQU8sR0FHVHBwQixFQUFTNFQsS0FBS3lWLFlBQWMsV0FDMUIsT0FBTyxHQXVEVDFxQixFQUFPd2EsaUJBQWtCLHFCQUFzQjhQLElBRzVDdHFCLE9BQVFxQixTQUFVNmQiLCJmaWxlIjoianMvd2lkZ2V0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqXHRqUXVlcnkgZG90ZG90ZG90IDEuOC4zXHJcbiAqXHJcbiAqXHRDb3B5cmlnaHQgKGMpIEZyZWQgSGV1c3NjaGVuXHJcbiAqXHR3d3cuZnJlYnNpdGUubmxcclxuICpcclxuICpcdFBsdWdpbiB3ZWJzaXRlOlxyXG4gKlx0ZG90ZG90ZG90LmZyZWJzaXRlLm5sXHJcbiAqXHJcbiAqXHRMaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuXHJcbiAqXHRodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL01JVF9MaWNlbnNlXHJcbiAqL1xyXG5cclxuKGZ1bmN0aW9uKCAkLCB1bmRlZiApXHJcbntcclxuXHRpZiAoICQuZm4uZG90ZG90ZG90IClcclxuXHR7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHQkLmZuLmRvdGRvdGRvdCA9IGZ1bmN0aW9uKCBvIClcclxuXHR7XHJcblx0XHRpZiAoIHRoaXMubGVuZ3RoID09IDAgKVxyXG5cdFx0e1xyXG5cdFx0XHQkLmZuLmRvdGRvdGRvdC5kZWJ1ZyggJ05vIGVsZW1lbnQgZm91bmQgZm9yIFwiJyArIHRoaXMuc2VsZWN0b3IgKyAnXCIuJyApO1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcdGlmICggdGhpcy5sZW5ndGggPiAxIClcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaChcclxuXHRcdFx0XHRmdW5jdGlvbigpXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0JCh0aGlzKS5kb3Rkb3Rkb3QoIG8gKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdHZhciAkZG90ID0gdGhpcztcclxuXHRcdHZhciBvcmdDb250ZW50XHQ9ICRkb3QuY29udGVudHMoKTtcclxuXHJcblx0XHRpZiAoICRkb3QuZGF0YSggJ2RvdGRvdGRvdCcgKSApXHJcblx0XHR7XHJcblx0XHRcdCRkb3QudHJpZ2dlciggJ2Rlc3Ryb3kuZG90JyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdCRkb3QuZGF0YSggJ2RvdGRvdGRvdC1zdHlsZScsICRkb3QuYXR0ciggJ3N0eWxlJyApIHx8ICcnICk7XHJcblx0XHQkZG90LmNzcyggJ3dvcmQtd3JhcCcsICdicmVhay13b3JkJyApO1xyXG5cdFx0aWYgKCRkb3QuY3NzKCAnd2hpdGUtc3BhY2UnICkgPT09ICdub3dyYXAnKVxyXG5cdFx0e1xyXG5cdFx0XHQkZG90LmNzcyggJ3doaXRlLXNwYWNlJywgJ25vcm1hbCcgKTtcclxuXHRcdH1cclxuXHJcblx0XHQkZG90LmJpbmRfZXZlbnRzID0gZnVuY3Rpb24oKVxyXG5cdFx0e1xyXG5cdFx0XHQkZG90LmJpbmQoXHJcblx0XHRcdFx0J3VwZGF0ZS5kb3QnLFxyXG5cdFx0XHRcdGZ1bmN0aW9uKCBlLCBjIClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHQkZG90LnJlbW92ZUNsYXNzKFwiaXMtdHJ1bmNhdGVkXCIpO1xyXG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcblx0XHRcdFx0XHRzd2l0Y2goIHR5cGVvZiBvcHRzLmhlaWdodCApXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdGNhc2UgJ251bWJlcic6XHJcblx0XHRcdFx0XHRcdFx0b3B0cy5tYXhIZWlnaHQgPSBvcHRzLmhlaWdodDtcclxuXHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHJcblx0XHRcdFx0XHRcdGNhc2UgJ2Z1bmN0aW9uJzpcclxuXHRcdFx0XHRcdFx0XHRvcHRzLm1heEhlaWdodCA9IG9wdHMuaGVpZ2h0LmNhbGwoICRkb3RbIDAgXSApO1xyXG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdFx0XHRcdFx0ZGVmYXVsdDpcclxuXHRcdFx0XHRcdFx0XHRvcHRzLm1heEhlaWdodCA9IGdldFRydWVJbm5lckhlaWdodCggJGRvdCApO1xyXG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdG9wdHMubWF4SGVpZ2h0ICs9IG9wdHMudG9sZXJhbmNlO1xyXG5cclxuXHRcdFx0XHRcdGlmICggdHlwZW9mIGMgIT0gJ3VuZGVmaW5lZCcgKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiBjID09ICdzdHJpbmcnIHx8ICgnbm9kZVR5cGUnIGluIGMgJiYgYy5ub2RlVHlwZSA9PT0gMSkgKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHQgXHRcdGMgPSAkKCc8ZGl2IC8+JykuYXBwZW5kKCBjICkuY29udGVudHMoKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRpZiAoIGMgaW5zdGFuY2VvZiAkIClcclxuXHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdG9yZ0NvbnRlbnQgPSBjO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0JGluciA9ICRkb3Qud3JhcElubmVyKCAnPGRpdiBjbGFzcz1cImRvdGRvdGRvdFwiIC8+JyApLmNoaWxkcmVuKCk7XHJcblx0XHRcdFx0XHQkaW5yLmNvbnRlbnRzKClcclxuXHRcdFx0XHRcdFx0LmRldGFjaCgpXHJcblx0XHRcdFx0XHRcdC5lbmQoKVxyXG5cdFx0XHRcdFx0XHQuYXBwZW5kKCBvcmdDb250ZW50LmNsb25lKCB0cnVlICkgKVxyXG5cdFx0XHRcdFx0XHQuZmluZCggJ2JyJyApXHJcblx0XHRcdFx0XHRcdC5yZXBsYWNlV2l0aCggJyAgPGJyIC8+ICAnIClcclxuXHRcdFx0XHRcdFx0LmVuZCgpXHJcblx0XHRcdFx0XHRcdC5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdCdoZWlnaHQnXHQ6ICdhdXRvJyxcclxuXHRcdFx0XHRcdFx0XHQnd2lkdGgnXHRcdDogJ2F1dG8nLFxyXG5cdFx0XHRcdFx0XHRcdCdib3JkZXInXHQ6ICdub25lJyxcclxuXHRcdFx0XHRcdFx0XHQncGFkZGluZydcdDogMCxcclxuXHRcdFx0XHRcdFx0XHQnbWFyZ2luJ1x0OiAwXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cclxuXHRcdFx0XHRcdHZhciBhZnRlciA9IGZhbHNlLFxyXG5cdFx0XHRcdFx0XHR0cnVuYyA9IGZhbHNlO1xyXG5cclxuXHRcdFx0XHRcdGlmICggY29uZi5hZnRlckVsZW1lbnQgKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRhZnRlciA9IGNvbmYuYWZ0ZXJFbGVtZW50LmNsb25lKCB0cnVlICk7XHJcblx0XHRcdFx0XHQgICAgYWZ0ZXIuc2hvdygpO1xyXG5cdFx0XHRcdFx0XHRjb25mLmFmdGVyRWxlbWVudC5kZXRhY2goKTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRpZiAoIHRlc3QoICRpbnIsIG9wdHMgKSApXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdGlmICggb3B0cy53cmFwID09ICdjaGlsZHJlbicgKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0dHJ1bmMgPSBjaGlsZHJlbiggJGluciwgb3B0cywgYWZ0ZXIgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRlbHNlXHJcblx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHR0cnVuYyA9IGVsbGlwc2lzKCAkaW5yLCAkZG90LCAkaW5yLCBvcHRzLCBhZnRlciApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQkaW5yLnJlcGxhY2VXaXRoKCAkaW5yLmNvbnRlbnRzKCkgKTtcclxuXHRcdFx0XHRcdCRpbnIgPSBudWxsO1xyXG5cclxuXHRcdFx0XHRcdGlmICggJC5pc0Z1bmN0aW9uKCBvcHRzLmNhbGxiYWNrICkgKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRvcHRzLmNhbGxiYWNrLmNhbGwoICRkb3RbIDAgXSwgdHJ1bmMsIG9yZ0NvbnRlbnQgKTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRjb25mLmlzVHJ1bmNhdGVkID0gdHJ1bmM7XHJcblx0XHRcdFx0XHRyZXR1cm4gdHJ1bmM7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0KS5iaW5kKFxyXG5cdFx0XHRcdCdpc1RydW5jYXRlZC5kb3QnLFxyXG5cdFx0XHRcdGZ1bmN0aW9uKCBlLCBmbiApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nIClcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0Zm4uY2FsbCggJGRvdFsgMCBdLCBjb25mLmlzVHJ1bmNhdGVkICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gY29uZi5pc1RydW5jYXRlZDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHQpLmJpbmQoXHJcblx0XHRcdFx0J29yaWdpbmFsQ29udGVudC5kb3QnLFxyXG5cdFx0XHRcdGZ1bmN0aW9uKCBlLCBmbiApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nIClcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0Zm4uY2FsbCggJGRvdFsgMCBdLCBvcmdDb250ZW50ICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gb3JnQ29udGVudDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHQpLmJpbmQoXHJcblx0XHRcdFx0J2Rlc3Ryb3kuZG90JyxcclxuXHRcdFx0XHRmdW5jdGlvbiggZSApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHJcblx0XHRcdFx0XHQkZG90LnVud2F0Y2goKVxyXG5cdFx0XHRcdFx0XHQudW5iaW5kX2V2ZW50cygpXHJcblx0XHRcdFx0XHRcdC5jb250ZW50cygpXHJcblx0XHRcdFx0XHRcdC5kZXRhY2goKVxyXG5cdFx0XHRcdFx0XHQuZW5kKClcclxuXHRcdFx0XHRcdFx0LmFwcGVuZCggb3JnQ29udGVudCApXHJcblx0XHRcdFx0XHRcdC5hdHRyKCAnc3R5bGUnLCAkZG90LmRhdGEoICdkb3Rkb3Rkb3Qtc3R5bGUnICkgfHwgJycgKVxyXG5cdFx0XHRcdFx0XHQucmVtb3ZlQ2xhc3MoICdpcy10cnVuY2F0ZWQnIClcclxuXHRcdFx0XHRcdFx0LmRhdGEoICdkb3Rkb3Rkb3QnLCBmYWxzZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0KTtcclxuXHRcdFx0cmV0dXJuICRkb3Q7XHJcblx0XHR9O1x0Ly9cdC9iaW5kX2V2ZW50c1xyXG5cclxuXHRcdCRkb3QudW5iaW5kX2V2ZW50cyA9IGZ1bmN0aW9uKClcclxuXHRcdHtcclxuXHRcdFx0JGRvdC51bmJpbmQoJy5kb3QnKTtcclxuXHRcdFx0cmV0dXJuICRkb3Q7XHJcblx0XHR9O1x0Ly9cdC91bmJpbmRfZXZlbnRzXHJcblxyXG5cdFx0JGRvdC53YXRjaCA9IGZ1bmN0aW9uKClcclxuXHRcdHtcclxuXHRcdFx0JGRvdC51bndhdGNoKCk7XHJcblx0XHRcdGlmICggb3B0cy53YXRjaCA9PSAnd2luZG93JyApXHJcblx0XHRcdHtcclxuXHRcdFx0XHR2YXIgJHdpbmRvdyA9ICQod2luZG93KSxcclxuXHRcdFx0XHRcdF93V2lkdGggPSAkd2luZG93LndpZHRoKCksXHJcblx0XHRcdFx0XHRfd0hlaWdodCA9ICR3aW5kb3cuaGVpZ2h0KCk7XHJcblxyXG5cdFx0XHRcdCR3aW5kb3cuYmluZChcclxuXHRcdFx0XHRcdCdyZXNpemUuZG90JyArIGNvbmYuZG90SWQsXHJcblx0XHRcdFx0XHRmdW5jdGlvbigpXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdGlmICggX3dXaWR0aCAhPSAkd2luZG93LndpZHRoKCkgfHwgX3dIZWlnaHQgIT0gJHdpbmRvdy5oZWlnaHQoKSB8fCAhb3B0cy53aW5kb3dSZXNpemVGaXggKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0X3dXaWR0aCA9ICR3aW5kb3cud2lkdGgoKTtcclxuXHRcdFx0XHRcdFx0XHRfd0hlaWdodCA9ICR3aW5kb3cuaGVpZ2h0KCk7XHJcblxyXG5cdFx0XHRcdFx0XHRcdGlmICggd2F0Y2hJbnQgKVxyXG5cdFx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwoIHdhdGNoSW50ICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdHdhdGNoSW50ID0gc2V0VGltZW91dChcclxuXHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKClcclxuXHRcdFx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0JGRvdC50cmlnZ2VyKCAndXBkYXRlLmRvdCcgKTtcclxuXHRcdFx0XHRcdFx0XHRcdH0sIDEwMFxyXG5cdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0e1xyXG5cdFx0XHRcdHdhdGNoT3JnID0gZ2V0U2l6ZXMoICRkb3QgKTtcclxuXHRcdFx0XHR3YXRjaEludCA9IHNldEludGVydmFsKFxyXG5cdFx0XHRcdFx0ZnVuY3Rpb24oKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRpZiAoICRkb3QuaXMoICc6dmlzaWJsZScgKSApXHJcblx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHR2YXIgd2F0Y2hOZXcgPSBnZXRTaXplcyggJGRvdCApO1xyXG5cdFx0XHRcdFx0XHRcdGlmICggd2F0Y2hPcmcud2lkdGggICE9IHdhdGNoTmV3LndpZHRoIHx8XHJcblx0XHRcdFx0XHRcdFx0XHQgd2F0Y2hPcmcuaGVpZ2h0ICE9IHdhdGNoTmV3LmhlaWdodCApXHJcblx0XHRcdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRcdFx0JGRvdC50cmlnZ2VyKCAndXBkYXRlLmRvdCcgKTtcclxuXHRcdFx0XHRcdFx0XHRcdHdhdGNoT3JnID0gd2F0Y2hOZXc7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9LCA1MDBcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiAkZG90O1xyXG5cdFx0fTtcclxuXHRcdCRkb3QudW53YXRjaCA9IGZ1bmN0aW9uKClcclxuXHRcdHtcclxuXHRcdFx0JCh3aW5kb3cpLnVuYmluZCggJ3Jlc2l6ZS5kb3QnICsgY29uZi5kb3RJZCApO1xyXG5cdFx0XHRpZiAoIHdhdGNoSW50IClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGNsZWFySW50ZXJ2YWwoIHdhdGNoSW50ICk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuICRkb3Q7XHJcblx0XHR9O1xyXG5cclxuXHRcdHZhclx0b3B0cyBcdFx0PSAkLmV4dGVuZCggdHJ1ZSwge30sICQuZm4uZG90ZG90ZG90LmRlZmF1bHRzLCBvICksXHJcblx0XHRcdGNvbmZcdFx0PSB7fSxcclxuXHRcdFx0d2F0Y2hPcmdcdD0ge30sXHJcblx0XHRcdHdhdGNoSW50XHQ9IG51bGwsXHJcblx0XHRcdCRpbnJcdFx0PSBudWxsO1xyXG5cclxuXHJcblx0XHRpZiAoICEoIG9wdHMubGFzdENoYXJhY3Rlci5yZW1vdmUgaW5zdGFuY2VvZiBBcnJheSApIClcclxuXHRcdHtcclxuXHRcdFx0b3B0cy5sYXN0Q2hhcmFjdGVyLnJlbW92ZSA9ICQuZm4uZG90ZG90ZG90LmRlZmF1bHRBcnJheXMubGFzdENoYXJhY3Rlci5yZW1vdmU7XHJcblx0XHR9XHJcblx0XHRpZiAoICEoIG9wdHMubGFzdENoYXJhY3Rlci5ub0VsbGlwc2lzIGluc3RhbmNlb2YgQXJyYXkgKSApXHJcblx0XHR7XHJcblx0XHRcdG9wdHMubGFzdENoYXJhY3Rlci5ub0VsbGlwc2lzID0gJC5mbi5kb3Rkb3Rkb3QuZGVmYXVsdEFycmF5cy5sYXN0Q2hhcmFjdGVyLm5vRWxsaXBzaXM7XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdGNvbmYuYWZ0ZXJFbGVtZW50XHQ9IGdldEVsZW1lbnQoIG9wdHMuYWZ0ZXIsICRkb3QgKTtcclxuXHRcdGNvbmYuaXNUcnVuY2F0ZWRcdD0gZmFsc2U7XHJcblx0XHRjb25mLmRvdElkXHRcdFx0PSBkb3RJZCsrO1xyXG5cclxuXHJcblx0XHQkZG90LmRhdGEoICdkb3Rkb3Rkb3QnLCB0cnVlIClcclxuXHRcdFx0LmJpbmRfZXZlbnRzKClcclxuXHRcdFx0LnRyaWdnZXIoICd1cGRhdGUuZG90JyApO1xyXG5cclxuXHRcdGlmICggb3B0cy53YXRjaCApXHJcblx0XHR7XHJcblx0XHRcdCRkb3Qud2F0Y2goKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gJGRvdDtcclxuXHR9O1xyXG5cclxuXHJcblx0Ly9cdHB1YmxpY1xyXG5cdCQuZm4uZG90ZG90ZG90LmRlZmF1bHRzID0ge1xyXG5cdFx0J2VsbGlwc2lzJ1x0XHRcdDogJy4uLiAnLFxyXG5cdFx0J3dyYXAnXHRcdFx0XHQ6ICd3b3JkJyxcclxuXHRcdCdmYWxsYmFja1RvTGV0dGVyJ1x0OiB0cnVlLFxyXG5cdFx0J2xhc3RDaGFyYWN0ZXInXHRcdDoge30sXHJcblx0XHQndG9sZXJhbmNlJ1x0XHRcdDogMCxcclxuXHRcdCdjYWxsYmFjaydcdFx0XHQ6IG51bGwsXHJcblx0XHQnYWZ0ZXInXHRcdFx0XHQ6IG51bGwsXHJcblx0XHQnaGVpZ2h0J1x0XHRcdDogbnVsbCxcclxuXHRcdCd3YXRjaCdcdFx0XHRcdDogZmFsc2UsXHJcblx0XHQnd2luZG93UmVzaXplRml4J1x0OiB0cnVlXHJcblx0fTtcclxuXHQkLmZuLmRvdGRvdGRvdC5kZWZhdWx0QXJyYXlzID0ge1xyXG5cdFx0J2xhc3RDaGFyYWN0ZXInXHRcdDoge1xyXG5cdFx0XHQncmVtb3ZlJ1x0XHRcdDogWyAnICcsICdcXHUzMDAwJywgJywnLCAnOycsICcuJywgJyEnLCAnPycgXSxcclxuXHRcdFx0J25vRWxsaXBzaXMnXHRcdDogW11cclxuXHRcdH1cclxuXHR9O1xyXG5cdCQuZm4uZG90ZG90ZG90LmRlYnVnID0gZnVuY3Rpb24oIG1zZyApIHt9O1xyXG5cclxuXHJcblx0Ly9cdHByaXZhdGVcclxuXHR2YXIgZG90SWQgPSAxO1xyXG5cclxuXHRmdW5jdGlvbiBjaGlsZHJlbiggJGVsZW0sIG8sIGFmdGVyIClcclxuXHR7XHJcblx0XHR2YXIgJGVsZW1lbnRzIFx0PSAkZWxlbS5jaGlsZHJlbigpLFxyXG5cdFx0XHRpc1RydW5jYXRlZFx0PSBmYWxzZTtcclxuXHJcblx0XHQkZWxlbS5lbXB0eSgpO1xyXG5cclxuXHRcdGZvciAoIHZhciBhID0gMCwgbCA9ICRlbGVtZW50cy5sZW5ndGg7IGEgPCBsOyBhKysgKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgJGUgPSAkZWxlbWVudHMuZXEoIGEgKTtcclxuXHRcdFx0JGVsZW0uYXBwZW5kKCAkZSApO1xyXG5cdFx0XHRpZiAoIGFmdGVyIClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdCRlbGVtLmFwcGVuZCggYWZ0ZXIgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIHRlc3QoICRlbGVtLCBvICkgKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0JGUucmVtb3ZlKCk7XHJcblx0XHRcdFx0aXNUcnVuY2F0ZWQgPSB0cnVlO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2VcclxuXHRcdFx0e1xyXG5cdFx0XHRcdGlmICggYWZ0ZXIgKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGFmdGVyLmRldGFjaCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGlzVHJ1bmNhdGVkO1xyXG5cdH1cclxuXHRmdW5jdGlvbiBlbGxpcHNpcyggJGVsZW0sICRkLCAkaSwgbywgYWZ0ZXIgKVxyXG5cdHtcclxuXHRcdHZhciBpc1RydW5jYXRlZFx0PSBmYWxzZTtcclxuXHJcblx0XHQvL1x0RG9uJ3QgcHV0IHRoZSBlbGxpcHNpcyBkaXJlY3RseSBpbnNpZGUgdGhlc2UgZWxlbWVudHNcclxuXHRcdHZhciBub3R4ID0gJ2EsIHRhYmxlLCB0aGVhZCwgdGJvZHksIHRmb290LCB0ciwgY29sLCBjb2xncm91cCwgb2JqZWN0LCBlbWJlZCwgcGFyYW0sIG9sLCB1bCwgZGwsIGJsb2NrcXVvdGUsIHNlbGVjdCwgb3B0Z3JvdXAsIG9wdGlvbiwgdGV4dGFyZWEsIHNjcmlwdCwgc3R5bGUnO1xyXG5cclxuXHRcdC8vXHREb24ndCByZW1vdmUgdGhlc2UgZWxlbWVudHMgZXZlbiBpZiB0aGV5IGFyZSBhZnRlciB0aGUgZWxsaXBzaXNcclxuXHRcdHZhciBub3R5ID0gJ3NjcmlwdCwgLmRvdGRvdGRvdC1rZWVwJztcclxuXHJcblx0XHQkZWxlbVxyXG5cdFx0XHQuY29udGVudHMoKVxyXG5cdFx0XHQuZGV0YWNoKClcclxuXHRcdFx0LmVhY2goXHJcblx0XHRcdFx0ZnVuY3Rpb24oKVxyXG5cdFx0XHRcdHtcclxuXHJcblx0XHRcdFx0XHR2YXIgZVx0PSB0aGlzLFxyXG5cdFx0XHRcdFx0XHQkZVx0PSAkKGUpO1xyXG5cclxuXHRcdFx0XHRcdGlmICggdHlwZW9mIGUgPT0gJ3VuZGVmaW5lZCcgKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGVsc2UgaWYgKCAkZS5pcyggbm90eSApIClcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0JGVsZW0uYXBwZW5kKCAkZSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSBpZiAoIGlzVHJ1bmNhdGVkIClcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRlbHNlXHJcblx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdCRlbGVtLmFwcGVuZCggJGUgKTtcclxuXHRcdFx0XHRcdFx0aWYgKCBhZnRlciAmJiAhJGUuaXMoIG8uYWZ0ZXIgKSAmJiAhJGUuZmluZCggby5hZnRlciApLmxlbmd0aCAgKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0JGVsZW1bICRlbGVtLmlzKCBub3R4ICkgPyAnYWZ0ZXInIDogJ2FwcGVuZCcgXSggYWZ0ZXIgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRpZiAoIHRlc3QoICRpLCBvICkgKVxyXG5cdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0aWYgKCBlLm5vZGVUeXBlID09IDMgKSAvLyBub2RlIGlzIFRFWFRcclxuXHRcdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0XHRpc1RydW5jYXRlZCA9IGVsbGlwc2lzRWxlbWVudCggJGUsICRkLCAkaSwgbywgYWZ0ZXIgKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHRcdGlzVHJ1bmNhdGVkID0gZWxsaXBzaXMoICRlLCAkZCwgJGksIG8sIGFmdGVyICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRpZiAoICFpc1RydW5jYXRlZCApXHJcblx0XHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoIGFmdGVyIClcclxuXHRcdFx0XHRcdFx0XHR7XHJcblx0XHRcdFx0XHRcdFx0XHRhZnRlci5kZXRhY2goKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdCk7XHJcblx0XHQkZC5hZGRDbGFzcyhcImlzLXRydW5jYXRlZFwiKTtcclxuXHRcdHJldHVybiBpc1RydW5jYXRlZDtcclxuXHR9XHJcblx0ZnVuY3Rpb24gZWxsaXBzaXNFbGVtZW50KCAkZSwgJGQsICRpLCBvLCBhZnRlciApXHJcblx0e1xyXG5cdFx0dmFyIGUgPSAkZVsgMCBdO1xyXG5cclxuXHRcdGlmICggIWUgKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIHR4dFx0XHRcdD0gZ2V0VGV4dENvbnRlbnQoIGUgKSxcclxuXHRcdFx0c3BhY2VcdFx0PSAoIHR4dC5pbmRleE9mKCcgJykgIT09IC0xICkgPyAnICcgOiAnXFx1MzAwMCcsXHJcblx0XHRcdHNlcGFyYXRvclx0PSAoIG8ud3JhcCA9PSAnbGV0dGVyJyApID8gJycgOiBzcGFjZSxcclxuXHRcdFx0dGV4dEFyclx0XHQ9IHR4dC5zcGxpdCggc2VwYXJhdG9yICksXHJcblx0XHRcdHBvc2l0aW9uIFx0PSAtMSxcclxuXHRcdFx0bWlkUG9zXHRcdD0gLTEsXHJcblx0XHRcdHN0YXJ0UG9zXHQ9IDAsXHJcblx0XHRcdGVuZFBvc1x0XHQ9IHRleHRBcnIubGVuZ3RoIC0gMTtcclxuXHJcblxyXG5cdFx0Ly9cdE9ubHkgb25lIHdvcmRcclxuXHRcdGlmICggby5mYWxsYmFja1RvTGV0dGVyICYmIHN0YXJ0UG9zID09IDAgJiYgZW5kUG9zID09IDAgKVxyXG5cdFx0e1xyXG5cdFx0XHRzZXBhcmF0b3JcdD0gJyc7XHJcblx0XHRcdHRleHRBcnJcdFx0PSB0eHQuc3BsaXQoIHNlcGFyYXRvciApO1xyXG5cdFx0XHRlbmRQb3NcdFx0PSB0ZXh0QXJyLmxlbmd0aCAtIDE7XHJcblx0XHR9XHJcblxyXG5cdFx0d2hpbGUgKCBzdGFydFBvcyA8PSBlbmRQb3MgJiYgISggc3RhcnRQb3MgPT0gMCAmJiBlbmRQb3MgPT0gMCApIClcclxuXHRcdHtcclxuXHRcdFx0dmFyIG0gPSBNYXRoLmZsb29yKCAoIHN0YXJ0UG9zICsgZW5kUG9zICkgLyAyICk7XHJcblx0XHRcdGlmICggbSA9PSBtaWRQb3MgKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0bWlkUG9zID0gbTtcclxuXHJcblx0XHRcdHNldFRleHRDb250ZW50KCBlLCB0ZXh0QXJyLnNsaWNlKCAwLCBtaWRQb3MgKyAxICkuam9pbiggc2VwYXJhdG9yICkgKyBvLmVsbGlwc2lzICk7XHJcblx0XHRcdCRpLmNoaWxkcmVuKClcclxuXHRcdFx0XHQuZWFjaChcclxuXHRcdFx0XHRcdGZ1bmN0aW9uKClcclxuXHRcdFx0XHRcdHtcclxuXHRcdFx0XHRcdFx0JCh0aGlzKS50b2dnbGUoKS50b2dnbGUoKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHQpO1xyXG5cclxuXHRcdFx0aWYgKCAhdGVzdCggJGksIG8gKSApXHJcblx0XHRcdHtcclxuXHRcdFx0XHRwb3NpdGlvbiA9IG1pZFBvcztcclxuXHRcdFx0XHRzdGFydFBvcyA9IG1pZFBvcztcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdHtcclxuXHRcdFx0XHRlbmRQb3MgPSBtaWRQb3M7XHJcblxyXG5cdFx0XHRcdC8vXHRGYWxsYmFjayB0byBsZXR0ZXJcclxuXHRcdFx0XHRpZiAoby5mYWxsYmFja1RvTGV0dGVyICYmIHN0YXJ0UG9zID09IDAgJiYgZW5kUG9zID09IDAgKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHNlcGFyYXRvclx0PSAnJztcclxuXHRcdFx0XHRcdHRleHRBcnJcdFx0PSB0ZXh0QXJyWyAwIF0uc3BsaXQoIHNlcGFyYXRvciApO1xyXG5cdFx0XHRcdFx0cG9zaXRpb25cdD0gLTE7XHJcblx0XHRcdFx0XHRtaWRQb3NcdFx0PSAtMTtcclxuXHRcdFx0XHRcdHN0YXJ0UG9zXHQ9IDA7XHJcblx0XHRcdFx0XHRlbmRQb3NcdFx0PSB0ZXh0QXJyLmxlbmd0aCAtIDE7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBwb3NpdGlvbiAhPSAtMSAmJiAhKCB0ZXh0QXJyLmxlbmd0aCA9PSAxICYmIHRleHRBcnJbIDAgXS5sZW5ndGggPT0gMCApIClcclxuXHRcdHtcclxuXHRcdFx0dHh0ID0gYWRkRWxsaXBzaXMoIHRleHRBcnIuc2xpY2UoIDAsIHBvc2l0aW9uICsgMSApLmpvaW4oIHNlcGFyYXRvciApLCBvICk7XHJcblx0XHRcdHNldFRleHRDb250ZW50KCBlLCB0eHQgKTtcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0dmFyICR3ID0gJGUucGFyZW50KCk7XHJcblx0XHRcdCRlLmRldGFjaCgpO1xyXG5cclxuXHRcdFx0dmFyIGFmdGVyTGVuZ3RoID0gKCBhZnRlciAmJiBhZnRlci5jbG9zZXN0KCR3KS5sZW5ndGggKSA/IGFmdGVyLmxlbmd0aCA6IDA7XHJcblxyXG5cdFx0XHRpZiAoICR3LmNvbnRlbnRzKCkubGVuZ3RoID4gYWZ0ZXJMZW5ndGggKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0ZSA9IGZpbmRMYXN0VGV4dE5vZGUoICR3LmNvbnRlbnRzKCkuZXEoIC0xIC0gYWZ0ZXJMZW5ndGggKSwgJGQgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdHtcclxuXHRcdFx0XHRlID0gZmluZExhc3RUZXh0Tm9kZSggJHcsICRkLCB0cnVlICk7XHJcblx0XHRcdFx0aWYgKCAhYWZ0ZXJMZW5ndGggKVxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdCR3LmRldGFjaCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIGUgKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0dHh0ID0gYWRkRWxsaXBzaXMoIGdldFRleHRDb250ZW50KCBlICksIG8gKTtcclxuXHRcdFx0XHRzZXRUZXh0Q29udGVudCggZSwgdHh0ICk7XHJcblx0XHRcdFx0aWYgKCBhZnRlckxlbmd0aCAmJiBhZnRlciApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0dmFyICRwYXJlbnQgPSBhZnRlci5wYXJlbnQoKTtcclxuXHJcblx0XHRcdFx0XHQkKGUpLnBhcmVudCgpLmFwcGVuZCggYWZ0ZXIgKTtcclxuXHJcblx0XHRcdFx0XHRpZiAoICEkLnRyaW0oICRwYXJlbnQuaHRtbCgpICkgKVxyXG5cdFx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0XHQkcGFyZW50LnJlbW92ZSgpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0cnVlO1xyXG5cdH1cclxuXHRmdW5jdGlvbiB0ZXN0KCAkaSwgbyApXHJcblx0e1xyXG5cdFx0cmV0dXJuICRpLmlubmVySGVpZ2h0KCkgPiBvLm1heEhlaWdodDtcclxuXHR9XHJcblx0ZnVuY3Rpb24gYWRkRWxsaXBzaXMoIHR4dCwgbyApXHJcblx0e1xyXG5cdFx0d2hpbGUoICQuaW5BcnJheSggdHh0LnNsaWNlKCAtMSApLCBvLmxhc3RDaGFyYWN0ZXIucmVtb3ZlICkgPiAtMSApXHJcblx0XHR7XHJcblx0XHRcdHR4dCA9IHR4dC5zbGljZSggMCwgLTEgKTtcclxuXHRcdH1cclxuXHRcdGlmICggJC5pbkFycmF5KCB0eHQuc2xpY2UoIC0xICksIG8ubGFzdENoYXJhY3Rlci5ub0VsbGlwc2lzICkgPCAwIClcclxuXHRcdHtcclxuXHRcdFx0dHh0ICs9IG8uZWxsaXBzaXM7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdHh0O1xyXG5cdH1cclxuXHRmdW5jdGlvbiBnZXRTaXplcyggJGQgKVxyXG5cdHtcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdCd3aWR0aCdcdDogJGQuaW5uZXJXaWR0aCgpLFxyXG5cdFx0XHQnaGVpZ2h0JzogJGQuaW5uZXJIZWlnaHQoKVxyXG5cdFx0fTtcclxuXHR9XHJcblx0ZnVuY3Rpb24gc2V0VGV4dENvbnRlbnQoIGUsIGNvbnRlbnQgKVxyXG5cdHtcclxuXHRcdGlmICggZS5pbm5lclRleHQgKVxyXG5cdFx0e1xyXG5cdFx0XHRlLmlubmVyVGV4dCA9IGNvbnRlbnQ7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmICggZS5ub2RlVmFsdWUgKVxyXG5cdFx0e1xyXG5cdFx0XHRlLm5vZGVWYWx1ZSA9IGNvbnRlbnQ7XHJcblx0XHR9XHJcblx0XHRlbHNlIGlmIChlLnRleHRDb250ZW50KVxyXG5cdFx0e1xyXG5cdFx0XHRlLnRleHRDb250ZW50ID0gY29udGVudDtcclxuXHRcdH1cclxuXHJcblx0fVxyXG5cdGZ1bmN0aW9uIGdldFRleHRDb250ZW50KCBlIClcclxuXHR7XHJcblx0XHRpZiAoIGUuaW5uZXJUZXh0IClcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIGUuaW5uZXJUZXh0O1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoIGUubm9kZVZhbHVlIClcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIGUubm9kZVZhbHVlO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoIGUudGV4dENvbnRlbnQgKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gZS50ZXh0Q29udGVudDtcclxuXHRcdH1cclxuXHRcdGVsc2VcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIFwiXCI7XHJcblx0XHR9XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGdldFByZXZOb2RlKCBuIClcclxuXHR7XHJcblx0XHRkb1xyXG5cdFx0e1xyXG5cdFx0XHRuID0gbi5wcmV2aW91c1NpYmxpbmc7XHJcblx0XHR9XHJcblx0XHR3aGlsZSAoIG4gJiYgbi5ub2RlVHlwZSAhPT0gMSAmJiBuLm5vZGVUeXBlICE9PSAzICk7XHJcblxyXG5cdFx0cmV0dXJuIG47XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGZpbmRMYXN0VGV4dE5vZGUoICRlbCwgJHRvcCwgZXhjbHVkZUN1cnJlbnQgKVxyXG5cdHtcclxuXHRcdHZhciBlID0gJGVsICYmICRlbFsgMCBdLCBwO1xyXG5cdFx0aWYgKCBlIClcclxuXHRcdHtcclxuXHRcdFx0aWYgKCAhZXhjbHVkZUN1cnJlbnQgKVxyXG5cdFx0XHR7XHJcblx0XHRcdFx0aWYgKCBlLm5vZGVUeXBlID09PSAzIClcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRyZXR1cm4gZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKCAkLnRyaW0oICRlbC50ZXh0KCkgKSApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZpbmRMYXN0VGV4dE5vZGUoICRlbC5jb250ZW50cygpLmxhc3QoKSwgJHRvcCApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRwID0gZ2V0UHJldk5vZGUoIGUgKTtcclxuXHRcdFx0d2hpbGUgKCAhcCApXHJcblx0XHRcdHtcclxuXHRcdFx0XHQkZWwgPSAkZWwucGFyZW50KCk7XHJcblx0XHRcdFx0aWYgKCAkZWwuaXMoICR0b3AgKSB8fCAhJGVsLmxlbmd0aCApXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRwID0gZ2V0UHJldk5vZGUoICRlbFswXSApO1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmICggcCApXHJcblx0XHRcdHtcclxuXHRcdFx0XHRyZXR1cm4gZmluZExhc3RUZXh0Tm9kZSggJChwKSwgJHRvcCApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cdGZ1bmN0aW9uIGdldEVsZW1lbnQoIGUsICRpIClcclxuXHR7XHJcblx0XHRpZiAoICFlIClcclxuXHRcdHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCB0eXBlb2YgZSA9PT0gJ3N0cmluZycgKVxyXG5cdFx0e1xyXG5cdFx0XHRlID0gJChlLCAkaSk7XHJcblx0XHRcdHJldHVybiAoIGUubGVuZ3RoIClcclxuXHRcdFx0XHQ/IGVcclxuXHRcdFx0XHQ6IGZhbHNlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuICFlLmpxdWVyeVxyXG5cdFx0XHQ/IGZhbHNlXHJcblx0XHRcdDogZTtcclxuXHR9XHJcblx0ZnVuY3Rpb24gZ2V0VHJ1ZUlubmVySGVpZ2h0KCAkZWwgKVxyXG5cdHtcclxuXHRcdHZhciBoID0gJGVsLmlubmVySGVpZ2h0KCksXHJcblx0XHRcdGEgPSBbICdwYWRkaW5nVG9wJywgJ3BhZGRpbmdCb3R0b20nIF07XHJcblxyXG5cdFx0Zm9yICggdmFyIHogPSAwLCBsID0gYS5sZW5ndGg7IHogPCBsOyB6KysgKVxyXG5cdFx0e1xyXG5cdFx0XHR2YXIgbSA9IHBhcnNlSW50KCAkZWwuY3NzKCBhWyB6IF0gKSwgMTAgKTtcclxuXHRcdFx0aWYgKCBpc05hTiggbSApIClcclxuXHRcdFx0e1xyXG5cdFx0XHRcdG0gPSAwO1xyXG5cdFx0XHR9XHJcblx0XHRcdGggLT0gbTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBoO1xyXG5cdH1cclxuXHJcblxyXG5cdC8vXHRvdmVycmlkZSBqUXVlcnkuaHRtbFxyXG5cdHZhciBfb3JnSHRtbCA9ICQuZm4uaHRtbDtcclxuXHQkLmZuLmh0bWwgPSBmdW5jdGlvbiggc3RyIClcclxuXHR7XHJcblx0XHRpZiAoIHN0ciAhPSB1bmRlZiAmJiAhJC5pc0Z1bmN0aW9uKCBzdHIgKSAmJiB0aGlzLmRhdGEoICdkb3Rkb3Rkb3QnICkgKVxyXG5cdFx0e1xyXG5cdFx0XHRyZXR1cm4gdGhpcy50cmlnZ2VyKCAndXBkYXRlJywgWyBzdHIgXSApO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIF9vcmdIdG1sLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcclxuXHR9O1xyXG5cclxuXHJcblx0Ly9cdG92ZXJyaWRlIGpRdWVyeS50ZXh0XHJcblx0dmFyIF9vcmdUZXh0ID0gJC5mbi50ZXh0O1xyXG5cdCQuZm4udGV4dCA9IGZ1bmN0aW9uKCBzdHIgKVxyXG5cdHtcclxuXHRcdGlmICggc3RyICE9IHVuZGVmICYmICEkLmlzRnVuY3Rpb24oIHN0ciApICYmIHRoaXMuZGF0YSggJ2RvdGRvdGRvdCcgKSApXHJcblx0XHR7XHJcblx0XHRcdHN0ciA9ICQoICc8ZGl2IC8+JyApLnRleHQoIHN0ciApLmh0bWwoKTtcclxuXHRcdFx0cmV0dXJuIHRoaXMudHJpZ2dlciggJ3VwZGF0ZScsIFsgc3RyIF0gKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBfb3JnVGV4dC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0fTtcclxuXHJcblxyXG59KSggalF1ZXJ5ICk7XHJcblxyXG4vKlxyXG5cclxuIyMgQXV0b21hdGljIHBhcnNpbmcgZm9yIENTUyBjbGFzc2VzXHJcbkNvbnRyaWJ1dGVkIGJ5IFtSYW1pbCBWYWxpdG92XShodHRwczovL2dpdGh1Yi5jb20vcnZhbGl0b3YpXHJcblxyXG4jIyMgVGhlIGlkZWFcclxuWW91IGNhbiBhZGQgb25lIG9yIHNldmVyYWwgQ1NTIGNsYXNzZXMgdG8gSFRNTCBlbGVtZW50cyB0byBhdXRvbWF0aWNhbGx5IGludm9rZSBcImpRdWVyeS5kb3Rkb3Rkb3QgZnVuY3Rpb25hbGl0eVwiIGFuZCBzb21lIGV4dHJhIGZlYXR1cmVzLiBJdCBhbGxvd3MgdG8gdXNlIGpRdWVyeS5kb3Rkb3Rkb3Qgb25seSBieSBhZGRpbmcgYXBwcm9wcmlhdGUgQ1NTIGNsYXNzZXMgd2l0aG91dCBKUyBwcm9ncmFtbWluZy5cclxuXHJcbiMjIyBBdmFpbGFibGUgY2xhc3NlcyBhbmQgdGhlaXIgZGVzY3JpcHRpb25cclxuKiBkb3QtZWxsaXBzaXMgLSBhdXRvbWF0aWNhbGx5IGludm9rZSBqUXVlcnkuZG90ZG90ZG90IHRvIHRoaXMgZWxlbWVudC4gVGhpcyBjbGFzcyBtdXN0IGJlIGluY2x1ZGVkIGlmIHlvdSBwbGFuIHRvIHVzZSBvdGhlciBjbGFzc2VzIGJlbG93LlxyXG4qIGRvdC1yZXNpemUtdXBkYXRlIC0gYXV0b21hdGljYWxseSB1cGRhdGUgaWYgd2luZG93IHJlc2l6ZSBldmVudCBvY2N1cnMuIEl0J3MgZXF1aXZhbGVudCB0byBvcHRpb24gYHdhdGNoOid3aW5kb3cnYC5cclxuKiBkb3QtdGltZXItdXBkYXRlIC0gYXV0b21hdGljYWxseSB1cGRhdGUgaWYgd2luZG93IHJlc2l6ZSBldmVudCBvY2N1cnMuIEl0J3MgZXF1aXZhbGVudCB0byBvcHRpb24gYHdhdGNoOnRydWVgLlxyXG4qIGRvdC1sb2FkLXVwZGF0ZSAtIGF1dG9tYXRpY2FsbHkgdXBkYXRlIGFmdGVyIHRoZSB3aW5kb3cgaGFzIGJlZW0gY29tcGxldGVseSByZW5kZXJlZC4gQ2FuIGJlIHVzZWZ1bCBpZiB5b3VyIGNvbnRlbnQgaXMgZ2VuZXJhdGVkIGR5bmFtaWNhbGx5IHVzaW5nIHVzaW5nIEpTIGFuZCwgaGVuY2UsIGpRdWVyeS5kb3Rkb3Rkb3QgY2FuJ3QgY29ycmVjdGx5IGRldGVjdCB0aGUgaGVpZ2h0IG9mIHRoZSBlbGVtZW50IGJlZm9yZSBpdCdzIHJlbmRlcmVkIGNvbXBsZXRlbHkuXHJcbiogZG90LWhlaWdodC1YWFggLSBhdmFpbGFibGUgaGVpZ2h0IG9mIGNvbnRlbnQgYXJlYSBpbiBwaXhlbHMsIHdoZXJlIFhYWCBpcyBhIG51bWJlciwgZS5nLiBjYW4gYmUgYGRvdC1oZWlnaHQtMzVgIGlmIHlvdSB3YW50IHRvIHNldCBtYXhpbXVtIGhlaWdodCBmb3IgMzUgcGl4ZWxzLiBJdCdzIGVxdWl2YWxlbnQgdG8gb3B0aW9uIGBoZWlnaHQ6J1hYWCdgLlxyXG5cclxuIyMjIFVzYWdlIGV4YW1wbGVzXHJcbipBZGRpbmcgalF1ZXJ5LmRvdGRvdGRvdCB0byBlbGVtZW50KlxyXG4gICAgXHJcblx0PGRpdiBjbGFzcz1cImRvdC1lbGxpcHNpc1wiPlxyXG5cdDxwPkxvcmVtIElwc3VtIGlzIHNpbXBseSBkdW1teSB0ZXh0LjwvcD5cclxuXHQ8L2Rpdj5cclxuXHRcclxuKkFkZGluZyBqUXVlcnkuZG90ZG90ZG90IHRvIGVsZW1lbnQgd2l0aCB1cGRhdGUgb24gd2luZG93IHJlc2l6ZSpcclxuICAgIFxyXG5cdDxkaXYgY2xhc3M9XCJkb3QtZWxsaXBzaXMgZG90LXJlc2l6ZS11cGRhdGVcIj5cclxuXHQ8cD5Mb3JlbSBJcHN1bSBpcyBzaW1wbHkgZHVtbXkgdGV4dC48L3A+XHJcblx0PC9kaXY+XHJcblx0XHJcbipBZGRpbmcgalF1ZXJ5LmRvdGRvdGRvdCB0byBlbGVtZW50IHdpdGggcHJlZGVmaW5lZCBoZWlnaHQgb2YgNTBweCpcclxuICAgIFxyXG5cdDxkaXYgY2xhc3M9XCJkb3QtZWxsaXBzaXMgZG90LWhlaWdodC01MFwiPlxyXG5cdDxwPkxvcmVtIElwc3VtIGlzIHNpbXBseSBkdW1teSB0ZXh0LjwvcD5cclxuXHQ8L2Rpdj5cclxuXHRcclxuKi9cclxuXHJcbmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xyXG5cdC8vV2Ugb25seSBpbnZva2UgalF1ZXJ5LmRvdGRvdGRvdCBvbiBlbGVtZW50cyB0aGF0IGhhdmUgZG90LWVsbGlwc2lzIGNsYXNzXHJcblx0JChcIi5kb3QtZWxsaXBzaXNcIikuZWFjaChmdW5jdGlvbigpe1xyXG5cdFx0Ly9DaGVja2luZyBpZiB1cGRhdGUgb24gd2luZG93IHJlc2l6ZSByZXF1aXJlZFxyXG5cdFx0dmFyIHdhdGNoX3dpbmRvdz0kKHRoaXMpLmhhc0NsYXNzKFwiZG90LXJlc2l6ZS11cGRhdGVcIik7XHJcblx0XHRcclxuXHRcdC8vQ2hlY2tpbmcgaWYgdXBkYXRlIG9uIHRpbWVyIHJlcXVpcmVkXHJcblx0XHR2YXIgd2F0Y2hfdGltZXI9JCh0aGlzKS5oYXNDbGFzcyhcImRvdC10aW1lci11cGRhdGVcIik7XHJcblx0XHRcclxuXHRcdC8vQ2hlY2tpbmcgaWYgaGVpZ2h0IHNldFxyXG5cdFx0dmFyIGhlaWdodD0wO1x0XHRcclxuXHRcdHZhciBjbGFzc0xpc3QgPSAkKHRoaXMpLmF0dHIoJ2NsYXNzJykuc3BsaXQoL1xccysvKTtcclxuXHRcdCQuZWFjaChjbGFzc0xpc3QsIGZ1bmN0aW9uKGluZGV4LCBpdGVtKSB7XHJcblx0XHRcdHZhciBtYXRjaFJlc3VsdCA9IGl0ZW0ubWF0Y2goL15kb3QtaGVpZ2h0LShcXGQrKSQvKTtcclxuXHRcdFx0aWYobWF0Y2hSZXN1bHQgIT09IG51bGwpXHJcblx0XHRcdFx0aGVpZ2h0ID0gTnVtYmVyKG1hdGNoUmVzdWx0WzFdKTtcclxuXHRcdH0pO1xyXG5cdFx0XHJcblx0XHQvL0ludm9raW5nIGpRdWVyeS5kb3Rkb3Rkb3RcclxuXHRcdHZhciB4ID0gbmV3IE9iamVjdCgpO1xyXG5cdFx0aWYgKHdhdGNoX3RpbWVyKVxyXG5cdFx0XHR4LndhdGNoPXRydWU7XHJcblx0XHRpZiAod2F0Y2hfd2luZG93KVxyXG5cdFx0XHR4LndhdGNoPSd3aW5kb3cnO1xyXG5cdFx0aWYgKGhlaWdodD4wKVxyXG5cdFx0XHR4LmhlaWdodD1oZWlnaHQ7XHJcblx0XHQkKHRoaXMpLmRvdGRvdGRvdCh4KTtcclxuXHR9KTtcclxuXHRcdFxyXG59KTtcclxuXHJcbi8vVXBkYXRpbmcgZWxlbWVudHMgKGlmIGFueSkgb24gd2luZG93LmxvYWQgZXZlbnRcclxualF1ZXJ5KHdpbmRvdykub24oJ2xvYWQnLCBmdW5jdGlvbigpe1xyXG5cdGpRdWVyeShcIi5kb3QtZWxsaXBzaXMuZG90LWxvYWQtdXBkYXRlXCIpLnRyaWdnZXIoXCJ1cGRhdGUuZG90XCIpO1xyXG59KTtcclxuXG4vKiBXZWIgRm9udCBMb2FkZXIgdjEuNi4yOCAtIChjKSBBZG9iZSBTeXN0ZW1zLCBHb29nbGUuIExpY2Vuc2U6IEFwYWNoZSAyLjAgKi8oZnVuY3Rpb24oKXtmdW5jdGlvbiBhYShhLGIsYyl7cmV0dXJuIGEuY2FsbC5hcHBseShhLmJpbmQsYXJndW1lbnRzKX1mdW5jdGlvbiBiYShhLGIsYyl7aWYoIWEpdGhyb3cgRXJyb3IoKTtpZigyPGFyZ3VtZW50cy5sZW5ndGgpe3ZhciBkPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO0FycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KGMsZCk7cmV0dXJuIGEuYXBwbHkoYixjKX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGEuYXBwbHkoYixhcmd1bWVudHMpfX1mdW5jdGlvbiBwKGEsYixjKXtwPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kJiYtMSE9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQudG9TdHJpbmcoKS5pbmRleE9mKFwibmF0aXZlIGNvZGVcIik/YWE6YmE7cmV0dXJuIHAuYXBwbHkobnVsbCxhcmd1bWVudHMpfXZhciBxPURhdGUubm93fHxmdW5jdGlvbigpe3JldHVybituZXcgRGF0ZX07ZnVuY3Rpb24gY2EoYSxiKXt0aGlzLmE9YTt0aGlzLm89Ynx8YTt0aGlzLmM9dGhpcy5vLmRvY3VtZW50fXZhciBkYT0hIXdpbmRvdy5Gb250RmFjZTtmdW5jdGlvbiB0KGEsYixjLGQpe2I9YS5jLmNyZWF0ZUVsZW1lbnQoYik7aWYoYylmb3IodmFyIGUgaW4gYyljLmhhc093blByb3BlcnR5KGUpJiYoXCJzdHlsZVwiPT1lP2Iuc3R5bGUuY3NzVGV4dD1jW2VdOmIuc2V0QXR0cmlidXRlKGUsY1tlXSkpO2QmJmIuYXBwZW5kQ2hpbGQoYS5jLmNyZWF0ZVRleHROb2RlKGQpKTtyZXR1cm4gYn1mdW5jdGlvbiB1KGEsYixjKXthPWEuYy5nZXRFbGVtZW50c0J5VGFnTmFtZShiKVswXTthfHwoYT1kb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpO2EuaW5zZXJ0QmVmb3JlKGMsYS5sYXN0Q2hpbGQpfWZ1bmN0aW9uIHYoYSl7YS5wYXJlbnROb2RlJiZhLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoYSl9XG5mdW5jdGlvbiB3KGEsYixjKXtiPWJ8fFtdO2M9Y3x8W107Zm9yKHZhciBkPWEuY2xhc3NOYW1lLnNwbGl0KC9cXHMrLyksZT0wO2U8Yi5sZW5ndGg7ZSs9MSl7Zm9yKHZhciBmPSExLGc9MDtnPGQubGVuZ3RoO2crPTEpaWYoYltlXT09PWRbZ10pe2Y9ITA7YnJlYWt9Znx8ZC5wdXNoKGJbZV0pfWI9W107Zm9yKGU9MDtlPGQubGVuZ3RoO2UrPTEpe2Y9ITE7Zm9yKGc9MDtnPGMubGVuZ3RoO2crPTEpaWYoZFtlXT09PWNbZ10pe2Y9ITA7YnJlYWt9Znx8Yi5wdXNoKGRbZV0pfWEuY2xhc3NOYW1lPWIuam9pbihcIiBcIikucmVwbGFjZSgvXFxzKy9nLFwiIFwiKS5yZXBsYWNlKC9eXFxzK3xcXHMrJC8sXCJcIil9ZnVuY3Rpb24geShhLGIpe2Zvcih2YXIgYz1hLmNsYXNzTmFtZS5zcGxpdCgvXFxzKy8pLGQ9MCxlPWMubGVuZ3RoO2Q8ZTtkKyspaWYoY1tkXT09YilyZXR1cm4hMDtyZXR1cm4hMX1cbmZ1bmN0aW9uIGVhKGEpe3JldHVybiBhLm8ubG9jYXRpb24uaG9zdG5hbWV8fGEuYS5sb2NhdGlvbi5ob3N0bmFtZX1mdW5jdGlvbiB6KGEsYixjKXtmdW5jdGlvbiBkKCl7bSYmZSYmZiYmKG0oZyksbT1udWxsKX1iPXQoYSxcImxpbmtcIix7cmVsOlwic3R5bGVzaGVldFwiLGhyZWY6YixtZWRpYTpcImFsbFwifSk7dmFyIGU9ITEsZj0hMCxnPW51bGwsbT1jfHxudWxsO2RhPyhiLm9ubG9hZD1mdW5jdGlvbigpe2U9ITA7ZCgpfSxiLm9uZXJyb3I9ZnVuY3Rpb24oKXtlPSEwO2c9RXJyb3IoXCJTdHlsZXNoZWV0IGZhaWxlZCB0byBsb2FkXCIpO2QoKX0pOnNldFRpbWVvdXQoZnVuY3Rpb24oKXtlPSEwO2QoKX0sMCk7dShhLFwiaGVhZFwiLGIpfVxuZnVuY3Rpb24gQShhLGIsYyxkKXt2YXIgZT1hLmMuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdO2lmKGUpe3ZhciBmPXQoYSxcInNjcmlwdFwiLHtzcmM6Yn0pLGc9ITE7Zi5vbmxvYWQ9Zi5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtnfHx0aGlzLnJlYWR5U3RhdGUmJlwibG9hZGVkXCIhPXRoaXMucmVhZHlTdGF0ZSYmXCJjb21wbGV0ZVwiIT10aGlzLnJlYWR5U3RhdGV8fChnPSEwLGMmJmMobnVsbCksZi5vbmxvYWQ9Zi5vbnJlYWR5c3RhdGVjaGFuZ2U9bnVsbCxcIkhFQURcIj09Zi5wYXJlbnROb2RlLnRhZ05hbWUmJmUucmVtb3ZlQ2hpbGQoZikpfTtlLmFwcGVuZENoaWxkKGYpO3NldFRpbWVvdXQoZnVuY3Rpb24oKXtnfHwoZz0hMCxjJiZjKEVycm9yKFwiU2NyaXB0IGxvYWQgdGltZW91dFwiKSkpfSxkfHw1RTMpO3JldHVybiBmfXJldHVybiBudWxsfTtmdW5jdGlvbiBCKCl7dGhpcy5hPTA7dGhpcy5jPW51bGx9ZnVuY3Rpb24gQyhhKXthLmErKztyZXR1cm4gZnVuY3Rpb24oKXthLmEtLTtEKGEpfX1mdW5jdGlvbiBFKGEsYil7YS5jPWI7RChhKX1mdW5jdGlvbiBEKGEpezA9PWEuYSYmYS5jJiYoYS5jKCksYS5jPW51bGwpfTtmdW5jdGlvbiBGKGEpe3RoaXMuYT1hfHxcIi1cIn1GLnByb3RvdHlwZS5jPWZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1bXSxjPTA7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliLnB1c2goYXJndW1lbnRzW2NdLnJlcGxhY2UoL1tcXFdfXSsvZyxcIlwiKS50b0xvd2VyQ2FzZSgpKTtyZXR1cm4gYi5qb2luKHRoaXMuYSl9O2Z1bmN0aW9uIEcoYSxiKXt0aGlzLmM9YTt0aGlzLmY9NDt0aGlzLmE9XCJuXCI7dmFyIGM9KGJ8fFwibjRcIikubWF0Y2goL14oW25pb10pKFsxLTldKSQvaSk7YyYmKHRoaXMuYT1jWzFdLHRoaXMuZj1wYXJzZUludChjWzJdLDEwKSl9ZnVuY3Rpb24gZmEoYSl7cmV0dXJuIEgoYSkrXCIgXCIrKGEuZitcIjAwXCIpK1wiIDMwMHB4IFwiK0koYS5jKX1mdW5jdGlvbiBJKGEpe3ZhciBiPVtdO2E9YS5zcGxpdCgvLFxccyovKTtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrKyl7dmFyIGQ9YVtjXS5yZXBsYWNlKC9bJ1wiXS9nLFwiXCIpOy0xIT1kLmluZGV4T2YoXCIgXCIpfHwvXlxcZC8udGVzdChkKT9iLnB1c2goXCInXCIrZCtcIidcIik6Yi5wdXNoKGQpfXJldHVybiBiLmpvaW4oXCIsXCIpfWZ1bmN0aW9uIEooYSl7cmV0dXJuIGEuYSthLmZ9ZnVuY3Rpb24gSChhKXt2YXIgYj1cIm5vcm1hbFwiO1wib1wiPT09YS5hP2I9XCJvYmxpcXVlXCI6XCJpXCI9PT1hLmEmJihiPVwiaXRhbGljXCIpO3JldHVybiBifVxuZnVuY3Rpb24gZ2EoYSl7dmFyIGI9NCxjPVwiblwiLGQ9bnVsbDthJiYoKGQ9YS5tYXRjaCgvKG5vcm1hbHxvYmxpcXVlfGl0YWxpYykvaSkpJiZkWzFdJiYoYz1kWzFdLnN1YnN0cigwLDEpLnRvTG93ZXJDYXNlKCkpLChkPWEubWF0Y2goLyhbMS05XTAwfG5vcm1hbHxib2xkKS9pKSkmJmRbMV0mJigvYm9sZC9pLnRlc3QoZFsxXSk/Yj03Oi9bMS05XTAwLy50ZXN0KGRbMV0pJiYoYj1wYXJzZUludChkWzFdLnN1YnN0cigwLDEpLDEwKSkpKTtyZXR1cm4gYytifTtmdW5jdGlvbiBoYShhLGIpe3RoaXMuYz1hO3RoaXMuZj1hLm8uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O3RoaXMuaD1iO3RoaXMuYT1uZXcgRihcIi1cIik7dGhpcy5qPSExIT09Yi5ldmVudHM7dGhpcy5nPSExIT09Yi5jbGFzc2VzfWZ1bmN0aW9uIGlhKGEpe2EuZyYmdyhhLmYsW2EuYS5jKFwid2ZcIixcImxvYWRpbmdcIildKTtLKGEsXCJsb2FkaW5nXCIpfWZ1bmN0aW9uIEwoYSl7aWYoYS5nKXt2YXIgYj15KGEuZixhLmEuYyhcIndmXCIsXCJhY3RpdmVcIikpLGM9W10sZD1bYS5hLmMoXCJ3ZlwiLFwibG9hZGluZ1wiKV07Ynx8Yy5wdXNoKGEuYS5jKFwid2ZcIixcImluYWN0aXZlXCIpKTt3KGEuZixjLGQpfUsoYSxcImluYWN0aXZlXCIpfWZ1bmN0aW9uIEsoYSxiLGMpe2lmKGEuaiYmYS5oW2JdKWlmKGMpYS5oW2JdKGMuYyxKKGMpKTtlbHNlIGEuaFtiXSgpfTtmdW5jdGlvbiBqYSgpe3RoaXMuYz17fX1mdW5jdGlvbiBrYShhLGIsYyl7dmFyIGQ9W10sZTtmb3IoZSBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoZSkpe3ZhciBmPWEuY1tlXTtmJiZkLnB1c2goZihiW2VdLGMpKX1yZXR1cm4gZH07ZnVuY3Rpb24gTShhLGIpe3RoaXMuYz1hO3RoaXMuZj1iO3RoaXMuYT10KHRoaXMuYyxcInNwYW5cIix7XCJhcmlhLWhpZGRlblwiOlwidHJ1ZVwifSx0aGlzLmYpfWZ1bmN0aW9uIE4oYSl7dShhLmMsXCJib2R5XCIsYS5hKX1mdW5jdGlvbiBPKGEpe3JldHVyblwiZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTk5OTlweDtsZWZ0Oi05OTk5cHg7Zm9udC1zaXplOjMwMHB4O3dpZHRoOmF1dG87aGVpZ2h0OmF1dG87bGluZS1oZWlnaHQ6bm9ybWFsO21hcmdpbjowO3BhZGRpbmc6MDtmb250LXZhcmlhbnQ6bm9ybWFsO3doaXRlLXNwYWNlOm5vd3JhcDtmb250LWZhbWlseTpcIitJKGEuYykrXCI7XCIrKFwiZm9udC1zdHlsZTpcIitIKGEpK1wiO2ZvbnQtd2VpZ2h0OlwiKyhhLmYrXCIwMFwiKStcIjtcIil9O2Z1bmN0aW9uIFAoYSxiLGMsZCxlLGYpe3RoaXMuZz1hO3RoaXMuaj1iO3RoaXMuYT1kO3RoaXMuYz1jO3RoaXMuZj1lfHwzRTM7dGhpcy5oPWZ8fHZvaWQgMH1QLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuYy5vLmRvY3VtZW50LGI9dGhpcyxjPXEoKSxkPW5ldyBQcm9taXNlKGZ1bmN0aW9uKGQsZSl7ZnVuY3Rpb24gZigpe3EoKS1jPj1iLmY/ZSgpOmEuZm9udHMubG9hZChmYShiLmEpLGIuaCkudGhlbihmdW5jdGlvbihhKXsxPD1hLmxlbmd0aD9kKCk6c2V0VGltZW91dChmLDI1KX0sZnVuY3Rpb24oKXtlKCl9KX1mKCl9KSxlPW51bGwsZj1uZXcgUHJvbWlzZShmdW5jdGlvbihhLGQpe2U9c2V0VGltZW91dChkLGIuZil9KTtQcm9taXNlLnJhY2UoW2YsZF0pLnRoZW4oZnVuY3Rpb24oKXtlJiYoY2xlYXJUaW1lb3V0KGUpLGU9bnVsbCk7Yi5nKGIuYSl9LGZ1bmN0aW9uKCl7Yi5qKGIuYSl9KX07ZnVuY3Rpb24gUShhLGIsYyxkLGUsZixnKXt0aGlzLnY9YTt0aGlzLkI9Yjt0aGlzLmM9Yzt0aGlzLmE9ZDt0aGlzLnM9Z3x8XCJCRVNic3d5XCI7dGhpcy5mPXt9O3RoaXMudz1lfHwzRTM7dGhpcy51PWZ8fG51bGw7dGhpcy5tPXRoaXMuaj10aGlzLmg9dGhpcy5nPW51bGw7dGhpcy5nPW5ldyBNKHRoaXMuYyx0aGlzLnMpO3RoaXMuaD1uZXcgTSh0aGlzLmMsdGhpcy5zKTt0aGlzLmo9bmV3IE0odGhpcy5jLHRoaXMucyk7dGhpcy5tPW5ldyBNKHRoaXMuYyx0aGlzLnMpO2E9bmV3IEcodGhpcy5hLmMrXCIsc2VyaWZcIixKKHRoaXMuYSkpO2E9TyhhKTt0aGlzLmcuYS5zdHlsZS5jc3NUZXh0PWE7YT1uZXcgRyh0aGlzLmEuYytcIixzYW5zLXNlcmlmXCIsSih0aGlzLmEpKTthPU8oYSk7dGhpcy5oLmEuc3R5bGUuY3NzVGV4dD1hO2E9bmV3IEcoXCJzZXJpZlwiLEoodGhpcy5hKSk7YT1PKGEpO3RoaXMuai5hLnN0eWxlLmNzc1RleHQ9YTthPW5ldyBHKFwic2Fucy1zZXJpZlwiLEoodGhpcy5hKSk7YT1cbk8oYSk7dGhpcy5tLmEuc3R5bGUuY3NzVGV4dD1hO04odGhpcy5nKTtOKHRoaXMuaCk7Tih0aGlzLmopO04odGhpcy5tKX12YXIgUj17RDpcInNlcmlmXCIsQzpcInNhbnMtc2VyaWZcIn0sUz1udWxsO2Z1bmN0aW9uIFQoKXtpZihudWxsPT09Uyl7dmFyIGE9L0FwcGxlV2ViS2l0XFwvKFswLTldKykoPzpcXC4oWzAtOV0rKSkvLmV4ZWMod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpO1M9ISFhJiYoNTM2PnBhcnNlSW50KGFbMV0sMTApfHw1MzY9PT1wYXJzZUludChhWzFdLDEwKSYmMTE+PXBhcnNlSW50KGFbMl0sMTApKX1yZXR1cm4gU31RLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3RoaXMuZi5zZXJpZj10aGlzLmouYS5vZmZzZXRXaWR0aDt0aGlzLmZbXCJzYW5zLXNlcmlmXCJdPXRoaXMubS5hLm9mZnNldFdpZHRoO3RoaXMuQT1xKCk7VSh0aGlzKX07XG5mdW5jdGlvbiBsYShhLGIsYyl7Zm9yKHZhciBkIGluIFIpaWYoUi5oYXNPd25Qcm9wZXJ0eShkKSYmYj09PWEuZltSW2RdXSYmYz09PWEuZltSW2RdXSlyZXR1cm4hMDtyZXR1cm4hMX1mdW5jdGlvbiBVKGEpe3ZhciBiPWEuZy5hLm9mZnNldFdpZHRoLGM9YS5oLmEub2Zmc2V0V2lkdGgsZDsoZD1iPT09YS5mLnNlcmlmJiZjPT09YS5mW1wic2Fucy1zZXJpZlwiXSl8fChkPVQoKSYmbGEoYSxiLGMpKTtkP3EoKS1hLkE+PWEudz9UKCkmJmxhKGEsYixjKSYmKG51bGw9PT1hLnV8fGEudS5oYXNPd25Qcm9wZXJ0eShhLmEuYykpP1YoYSxhLnYpOlYoYSxhLkIpOm1hKGEpOlYoYSxhLnYpfWZ1bmN0aW9uIG1hKGEpe3NldFRpbWVvdXQocChmdW5jdGlvbigpe1UodGhpcyl9LGEpLDUwKX1mdW5jdGlvbiBWKGEsYil7c2V0VGltZW91dChwKGZ1bmN0aW9uKCl7dih0aGlzLmcuYSk7dih0aGlzLmguYSk7dih0aGlzLmouYSk7dih0aGlzLm0uYSk7Yih0aGlzLmEpfSxhKSwwKX07ZnVuY3Rpb24gVyhhLGIsYyl7dGhpcy5jPWE7dGhpcy5hPWI7dGhpcy5mPTA7dGhpcy5tPXRoaXMuaj0hMTt0aGlzLnM9Y312YXIgWD1udWxsO1cucHJvdG90eXBlLmc9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5hO2IuZyYmdyhiLmYsW2IuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwiYWN0aXZlXCIpXSxbYi5hLmMoXCJ3ZlwiLGEuYyxKKGEpLnRvU3RyaW5nKCksXCJsb2FkaW5nXCIpLGIuYS5jKFwid2ZcIixhLmMsSihhKS50b1N0cmluZygpLFwiaW5hY3RpdmVcIildKTtLKGIsXCJmb250YWN0aXZlXCIsYSk7dGhpcy5tPSEwO25hKHRoaXMpfTtcblcucHJvdG90eXBlLmg9ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5hO2lmKGIuZyl7dmFyIGM9eShiLmYsYi5hLmMoXCJ3ZlwiLGEuYyxKKGEpLnRvU3RyaW5nKCksXCJhY3RpdmVcIikpLGQ9W10sZT1bYi5hLmMoXCJ3ZlwiLGEuYyxKKGEpLnRvU3RyaW5nKCksXCJsb2FkaW5nXCIpXTtjfHxkLnB1c2goYi5hLmMoXCJ3ZlwiLGEuYyxKKGEpLnRvU3RyaW5nKCksXCJpbmFjdGl2ZVwiKSk7dyhiLmYsZCxlKX1LKGIsXCJmb250aW5hY3RpdmVcIixhKTtuYSh0aGlzKX07ZnVuY3Rpb24gbmEoYSl7MD09LS1hLmYmJmEuaiYmKGEubT8oYT1hLmEsYS5nJiZ3KGEuZixbYS5hLmMoXCJ3ZlwiLFwiYWN0aXZlXCIpXSxbYS5hLmMoXCJ3ZlwiLFwibG9hZGluZ1wiKSxhLmEuYyhcIndmXCIsXCJpbmFjdGl2ZVwiKV0pLEsoYSxcImFjdGl2ZVwiKSk6TChhLmEpKX07ZnVuY3Rpb24gb2EoYSl7dGhpcy5qPWE7dGhpcy5hPW5ldyBqYTt0aGlzLmg9MDt0aGlzLmY9dGhpcy5nPSEwfW9hLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGEpe3RoaXMuYz1uZXcgY2EodGhpcy5qLGEuY29udGV4dHx8dGhpcy5qKTt0aGlzLmc9ITEhPT1hLmV2ZW50czt0aGlzLmY9ITEhPT1hLmNsYXNzZXM7cGEodGhpcyxuZXcgaGEodGhpcy5jLGEpLGEpfTtcbmZ1bmN0aW9uIHFhKGEsYixjLGQsZSl7dmFyIGY9MD09LS1hLmg7KGEuZnx8YS5nKSYmc2V0VGltZW91dChmdW5jdGlvbigpe3ZhciBhPWV8fG51bGwsbT1kfHxudWxsfHx7fTtpZigwPT09Yy5sZW5ndGgmJmYpTChiLmEpO2Vsc2V7Yi5mKz1jLmxlbmd0aDtmJiYoYi5qPWYpO3ZhciBoLGw9W107Zm9yKGg9MDtoPGMubGVuZ3RoO2grKyl7dmFyIGs9Y1toXSxuPW1bay5jXSxyPWIuYSx4PWs7ci5nJiZ3KHIuZixbci5hLmMoXCJ3ZlwiLHguYyxKKHgpLnRvU3RyaW5nKCksXCJsb2FkaW5nXCIpXSk7SyhyLFwiZm9udGxvYWRpbmdcIix4KTtyPW51bGw7aWYobnVsbD09PVgpaWYod2luZG93LkZvbnRGYWNlKXt2YXIgeD0vR2Vja28uKkZpcmVmb3hcXC8oXFxkKykvLmV4ZWMod2luZG93Lm5hdmlnYXRvci51c2VyQWdlbnQpLHhhPS9PUyBYLipWZXJzaW9uXFwvMTBcXC4uKlNhZmFyaS8uZXhlYyh3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCkmJi9BcHBsZS8uZXhlYyh3aW5kb3cubmF2aWdhdG9yLnZlbmRvcik7XG5YPXg/NDI8cGFyc2VJbnQoeFsxXSwxMCk6eGE/ITE6ITB9ZWxzZSBYPSExO1g/cj1uZXcgUChwKGIuZyxiKSxwKGIuaCxiKSxiLmMsayxiLnMsbik6cj1uZXcgUShwKGIuZyxiKSxwKGIuaCxiKSxiLmMsayxiLnMsYSxuKTtsLnB1c2gocil9Zm9yKGg9MDtoPGwubGVuZ3RoO2grKylsW2hdLnN0YXJ0KCl9fSwwKX1mdW5jdGlvbiBwYShhLGIsYyl7dmFyIGQ9W10sZT1jLnRpbWVvdXQ7aWEoYik7dmFyIGQ9a2EoYS5hLGMsYS5jKSxmPW5ldyBXKGEuYyxiLGUpO2EuaD1kLmxlbmd0aDtiPTA7Zm9yKGM9ZC5sZW5ndGg7YjxjO2IrKylkW2JdLmxvYWQoZnVuY3Rpb24oYixkLGMpe3FhKGEsZixiLGQsYyl9KX07ZnVuY3Rpb24gcmEoYSxiKXt0aGlzLmM9YTt0aGlzLmE9Yn1cbnJhLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGEpe2Z1bmN0aW9uIGIoKXtpZihmW1wiX19tdGlfZm50THN0XCIrZF0pe3ZhciBjPWZbXCJfX210aV9mbnRMc3RcIitkXSgpLGU9W10saDtpZihjKWZvcih2YXIgbD0wO2w8Yy5sZW5ndGg7bCsrKXt2YXIgaz1jW2xdLmZvbnRmYW1pbHk7dm9pZCAwIT1jW2xdLmZvbnRTdHlsZSYmdm9pZCAwIT1jW2xdLmZvbnRXZWlnaHQ/KGg9Y1tsXS5mb250U3R5bGUrY1tsXS5mb250V2VpZ2h0LGUucHVzaChuZXcgRyhrLGgpKSk6ZS5wdXNoKG5ldyBHKGspKX1hKGUpfWVsc2Ugc2V0VGltZW91dChmdW5jdGlvbigpe2IoKX0sNTApfXZhciBjPXRoaXMsZD1jLmEucHJvamVjdElkLGU9Yy5hLnZlcnNpb247aWYoZCl7dmFyIGY9Yy5jLm87QSh0aGlzLmMsKGMuYS5hcGl8fFwiaHR0cHM6Ly9mYXN0LmZvbnRzLm5ldC9qc2FwaVwiKStcIi9cIitkK1wiLmpzXCIrKGU/XCI/dj1cIitlOlwiXCIpLGZ1bmN0aW9uKGUpe2U/YShbXSk6KGZbXCJfX01vbm90eXBlQ29uZmlndXJhdGlvbl9fXCIrXG5kXT1mdW5jdGlvbigpe3JldHVybiBjLmF9LGIoKSl9KS5pZD1cIl9fTW9ub3R5cGVBUElTY3JpcHRfX1wiK2R9ZWxzZSBhKFtdKX07ZnVuY3Rpb24gc2EoYSxiKXt0aGlzLmM9YTt0aGlzLmE9Yn1zYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt2YXIgYixjLGQ9dGhpcy5hLnVybHN8fFtdLGU9dGhpcy5hLmZhbWlsaWVzfHxbXSxmPXRoaXMuYS50ZXN0U3RyaW5nc3x8e30sZz1uZXcgQjtiPTA7Zm9yKGM9ZC5sZW5ndGg7YjxjO2IrKyl6KHRoaXMuYyxkW2JdLEMoZykpO3ZhciBtPVtdO2I9MDtmb3IoYz1lLmxlbmd0aDtiPGM7YisrKWlmKGQ9ZVtiXS5zcGxpdChcIjpcIiksZFsxXSlmb3IodmFyIGg9ZFsxXS5zcGxpdChcIixcIiksbD0wO2w8aC5sZW5ndGg7bCs9MSltLnB1c2gobmV3IEcoZFswXSxoW2xdKSk7ZWxzZSBtLnB1c2gobmV3IEcoZFswXSkpO0UoZyxmdW5jdGlvbigpe2EobSxmKX0pfTtmdW5jdGlvbiB0YShhLGIpe2E/dGhpcy5jPWE6dGhpcy5jPXVhO3RoaXMuYT1bXTt0aGlzLmY9W107dGhpcy5nPWJ8fFwiXCJ9dmFyIHVhPVwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3NcIjtmdW5jdGlvbiB2YShhLGIpe2Zvcih2YXIgYz1iLmxlbmd0aCxkPTA7ZDxjO2QrKyl7dmFyIGU9YltkXS5zcGxpdChcIjpcIik7Mz09ZS5sZW5ndGgmJmEuZi5wdXNoKGUucG9wKCkpO3ZhciBmPVwiXCI7Mj09ZS5sZW5ndGgmJlwiXCIhPWVbMV0mJihmPVwiOlwiKTthLmEucHVzaChlLmpvaW4oZikpfX1cbmZ1bmN0aW9uIHdhKGEpe2lmKDA9PWEuYS5sZW5ndGgpdGhyb3cgRXJyb3IoXCJObyBmb250cyB0byBsb2FkIVwiKTtpZigtMSE9YS5jLmluZGV4T2YoXCJraXQ9XCIpKXJldHVybiBhLmM7Zm9yKHZhciBiPWEuYS5sZW5ndGgsYz1bXSxkPTA7ZDxiO2QrKyljLnB1c2goYS5hW2RdLnJlcGxhY2UoLyAvZyxcIitcIikpO2I9YS5jK1wiP2ZhbWlseT1cIitjLmpvaW4oXCIlN0NcIik7MDxhLmYubGVuZ3RoJiYoYis9XCImc3Vic2V0PVwiK2EuZi5qb2luKFwiLFwiKSk7MDxhLmcubGVuZ3RoJiYoYis9XCImdGV4dD1cIitlbmNvZGVVUklDb21wb25lbnQoYS5nKSk7cmV0dXJuIGJ9O2Z1bmN0aW9uIHlhKGEpe3RoaXMuZj1hO3RoaXMuYT1bXTt0aGlzLmM9e319XG52YXIgemE9e2xhdGluOlwiQkVTYnN3eVwiLFwibGF0aW4tZXh0XCI6XCJcXHUwMGU3XFx1MDBmNlxcdTAwZmNcXHUwMTFmXFx1MDE1ZlwiLGN5cmlsbGljOlwiXFx1MDQzOVxcdTA0NGZcXHUwNDE2XCIsZ3JlZWs6XCJcXHUwM2IxXFx1MDNiMlxcdTAzYTNcIixraG1lcjpcIlxcdTE3ODBcXHUxNzgxXFx1MTc4MlwiLEhhbnVtYW46XCJcXHUxNzgwXFx1MTc4MVxcdTE3ODJcIn0sQWE9e3RoaW46XCIxXCIsZXh0cmFsaWdodDpcIjJcIixcImV4dHJhLWxpZ2h0XCI6XCIyXCIsdWx0cmFsaWdodDpcIjJcIixcInVsdHJhLWxpZ2h0XCI6XCIyXCIsbGlnaHQ6XCIzXCIscmVndWxhcjpcIjRcIixib29rOlwiNFwiLG1lZGl1bTpcIjVcIixcInNlbWktYm9sZFwiOlwiNlwiLHNlbWlib2xkOlwiNlwiLFwiZGVtaS1ib2xkXCI6XCI2XCIsZGVtaWJvbGQ6XCI2XCIsYm9sZDpcIjdcIixcImV4dHJhLWJvbGRcIjpcIjhcIixleHRyYWJvbGQ6XCI4XCIsXCJ1bHRyYS1ib2xkXCI6XCI4XCIsdWx0cmFib2xkOlwiOFwiLGJsYWNrOlwiOVwiLGhlYXZ5OlwiOVwiLGw6XCIzXCIscjpcIjRcIixiOlwiN1wifSxCYT17aTpcImlcIixpdGFsaWM6XCJpXCIsbjpcIm5cIixub3JtYWw6XCJuXCJ9LFxuQ2E9L14odGhpbnwoPzooPzpleHRyYXx1bHRyYSktPyk/bGlnaHR8cmVndWxhcnxib29rfG1lZGl1bXwoPzooPzpzZW1pfGRlbWl8ZXh0cmF8dWx0cmEpLT8pP2JvbGR8YmxhY2t8aGVhdnl8bHxyfGJ8WzEtOV0wMCk/KG58aXxub3JtYWx8aXRhbGljKT8kLztcbmZ1bmN0aW9uIERhKGEpe2Zvcih2YXIgYj1hLmYubGVuZ3RoLGM9MDtjPGI7YysrKXt2YXIgZD1hLmZbY10uc3BsaXQoXCI6XCIpLGU9ZFswXS5yZXBsYWNlKC9cXCsvZyxcIiBcIiksZj1bXCJuNFwiXTtpZigyPD1kLmxlbmd0aCl7dmFyIGc7dmFyIG09ZFsxXTtnPVtdO2lmKG0pZm9yKHZhciBtPW0uc3BsaXQoXCIsXCIpLGg9bS5sZW5ndGgsbD0wO2w8aDtsKyspe3ZhciBrO2s9bVtsXTtpZihrLm1hdGNoKC9eW1xcdy1dKyQvKSl7dmFyIG49Q2EuZXhlYyhrLnRvTG93ZXJDYXNlKCkpO2lmKG51bGw9PW4paz1cIlwiO2Vsc2V7az1uWzJdO2s9bnVsbD09a3x8XCJcIj09az9cIm5cIjpCYVtrXTtuPW5bMV07aWYobnVsbD09bnx8XCJcIj09biluPVwiNFwiO2Vsc2UgdmFyIHI9QWFbbl0sbj1yP3I6aXNOYU4obik/XCI0XCI6bi5zdWJzdHIoMCwxKTtrPVtrLG5dLmpvaW4oXCJcIil9fWVsc2Ugaz1cIlwiO2smJmcucHVzaChrKX0wPGcubGVuZ3RoJiYoZj1nKTszPT1kLmxlbmd0aCYmKGQ9ZFsyXSxnPVtdLGQ9ZD9kLnNwbGl0KFwiLFwiKTpcbmcsMDxkLmxlbmd0aCYmKGQ9emFbZFswXV0pJiYoYS5jW2VdPWQpKX1hLmNbZV18fChkPXphW2VdKSYmKGEuY1tlXT1kKTtmb3IoZD0wO2Q8Zi5sZW5ndGg7ZCs9MSlhLmEucHVzaChuZXcgRyhlLGZbZF0pKX19O2Z1bmN0aW9uIEVhKGEsYil7dGhpcy5jPWE7dGhpcy5hPWJ9dmFyIEZhPXtBcmltbzohMCxDb3VzaW5lOiEwLFRpbm9zOiEwfTtFYS5wcm90b3R5cGUubG9hZD1mdW5jdGlvbihhKXt2YXIgYj1uZXcgQixjPXRoaXMuYyxkPW5ldyB0YSh0aGlzLmEuYXBpLHRoaXMuYS50ZXh0KSxlPXRoaXMuYS5mYW1pbGllczt2YShkLGUpO3ZhciBmPW5ldyB5YShlKTtEYShmKTt6KGMsd2EoZCksQyhiKSk7RShiLGZ1bmN0aW9uKCl7YShmLmEsZi5jLEZhKX0pfTtmdW5jdGlvbiBHYShhLGIpe3RoaXMuYz1hO3RoaXMuYT1ifUdhLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuYS5pZCxjPXRoaXMuYy5vO2I/QSh0aGlzLmMsKHRoaXMuYS5hcGl8fFwiaHR0cHM6Ly91c2UudHlwZWtpdC5uZXRcIikrXCIvXCIrYitcIi5qc1wiLGZ1bmN0aW9uKGIpe2lmKGIpYShbXSk7ZWxzZSBpZihjLlR5cGVraXQmJmMuVHlwZWtpdC5jb25maWcmJmMuVHlwZWtpdC5jb25maWcuZm4pe2I9Yy5UeXBla2l0LmNvbmZpZy5mbjtmb3IodmFyIGU9W10sZj0wO2Y8Yi5sZW5ndGg7Zis9Milmb3IodmFyIGc9YltmXSxtPWJbZisxXSxoPTA7aDxtLmxlbmd0aDtoKyspZS5wdXNoKG5ldyBHKGcsbVtoXSkpO3RyeXtjLlR5cGVraXQubG9hZCh7ZXZlbnRzOiExLGNsYXNzZXM6ITEsYXN5bmM6ITB9KX1jYXRjaChsKXt9YShlKX19LDJFMyk6YShbXSl9O2Z1bmN0aW9uIEhhKGEsYil7dGhpcy5jPWE7dGhpcy5mPWI7dGhpcy5hPVtdfUhhLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuZi5pZCxjPXRoaXMuYy5vLGQ9dGhpcztiPyhjLl9fd2ViZm9udGZvbnRkZWNrbW9kdWxlX198fChjLl9fd2ViZm9udGZvbnRkZWNrbW9kdWxlX189e30pLGMuX193ZWJmb250Zm9udGRlY2ttb2R1bGVfX1tiXT1mdW5jdGlvbihiLGMpe2Zvcih2YXIgZz0wLG09Yy5mb250cy5sZW5ndGg7ZzxtOysrZyl7dmFyIGg9Yy5mb250c1tnXTtkLmEucHVzaChuZXcgRyhoLm5hbWUsZ2EoXCJmb250LXdlaWdodDpcIitoLndlaWdodCtcIjtmb250LXN0eWxlOlwiK2guc3R5bGUpKSl9YShkLmEpfSxBKHRoaXMuYywodGhpcy5mLmFwaXx8XCJodHRwczovL2YuZm9udGRlY2suY29tL3MvY3NzL2pzL1wiKStlYSh0aGlzLmMpK1wiL1wiK2IrXCIuanNcIixmdW5jdGlvbihiKXtiJiZhKFtdKX0pKTphKFtdKX07dmFyIFk9bmV3IG9hKHdpbmRvdyk7WS5hLmMuY3VzdG9tPWZ1bmN0aW9uKGEsYil7cmV0dXJuIG5ldyBzYShiLGEpfTtZLmEuYy5mb250ZGVjaz1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgSGEoYixhKX07WS5hLmMubW9ub3R5cGU9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IHJhKGIsYSl9O1kuYS5jLnR5cGVraXQ9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IEdhKGIsYSl9O1kuYS5jLmdvb2dsZT1mdW5jdGlvbihhLGIpe3JldHVybiBuZXcgRWEoYixhKX07dmFyIFo9e2xvYWQ6cChZLmxvYWQsWSl9O1wiZnVuY3Rpb25cIj09PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKGZ1bmN0aW9uKCl7cmV0dXJuIFp9KTpcInVuZGVmaW5lZFwiIT09dHlwZW9mIG1vZHVsZSYmbW9kdWxlLmV4cG9ydHM/bW9kdWxlLmV4cG9ydHM9Wjood2luZG93LldlYkZvbnQ9Wix3aW5kb3cuV2ViRm9udENvbmZpZyYmWS5sb2FkKHdpbmRvdy5XZWJGb250Q29uZmlnKSk7fSgpKTtcblxuLypcbiAqICBQcm9qZWN0OiBBdXRvLVNjcm9sbFxuICogIERlc2NyaXB0aW9uOiBBdXRvLXNjcm9sbCBwbHVnaW4gZm9yIHVzZSB3aXRoIFJpc2UgVmlzaW9uIFdpZGdldHNcbiAqICBBdXRob3I6IEBkb25uYXBlcFxuICogIExpY2Vuc2U6IE1JVFxuICovXG5cbjsoZnVuY3Rpb24gKCQsIHdpbmRvdywgZG9jdW1lbnQsIHVuZGVmaW5lZCkge1xuXHRcInVzZSBzdHJpY3RcIjtcblxuXHR2YXIgcGx1Z2luTmFtZSA9IFwiYXV0b1Njcm9sbFwiLFxuXHRcdGRlZmF1bHRzID0ge1xuXHRcdFx0Ynk6IFwiY29udGludW91c1wiLFxuXHRcdFx0c3BlZWQ6IFwibWVkaXVtXCIsXG5cdFx0XHRkdXJhdGlvbjogMTAsXG5cdFx0XHRwYXVzZTogNSxcblx0XHRcdGNsaWNrOiBmYWxzZSxcblx0XHRcdG1pbmltdW1Nb3ZlbWVudDogMyAvLyBEcmFnZ2FibGUgZGVmYXVsdCB2YWx1ZSAtIGh0dHA6Ly9ncmVlbnNvY2suY29tL2RvY3MvIy9IVE1MNS9EcmFnL0RyYWdnYWJsZS9cblx0XHR9O1xuXG5cblx0ZnVuY3Rpb24gUGx1Z2luKGVsZW1lbnQsIG9wdGlvbnMpIHtcblx0XHR0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xuXHRcdHRoaXMucGFnZSA9ICQoZWxlbWVudCkuZmluZChcIi5wYWdlXCIpO1xuXHRcdHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBkZWZhdWx0cywgb3B0aW9ucyk7XG5cdFx0dGhpcy5fZGVmYXVsdHMgPSBkZWZhdWx0cztcblx0XHR0aGlzLl9uYW1lID0gcGx1Z2luTmFtZTtcblx0XHR0aGlzLmlzTG9hZGluZyA9IHRydWU7XG5cdFx0dGhpcy5kcmFnZ2FibGUgPSBudWxsO1xuXHRcdHRoaXMudHdlZW4gPSBudWxsO1xuXHRcdHRoaXMuY2FsY3VsYXRlUHJvZ3Jlc3MgPSBudWxsO1xuXHRcdHRoaXMuaW5pdCgpO1xuXHR9XG5cblx0UGx1Z2luLnByb3RvdHlwZSA9IHtcblx0XHRpbml0OiBmdW5jdGlvbiAoKSB7XG5cdFx0XHR2YXIgc3BlZWQsIGR1cmF0aW9uO1xuXHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xuXHRcdFx0dmFyIHNjcm9sbENvbXBsZXRlID0gbnVsbDtcblx0XHRcdHZhciBwYWdlQ29tcGxldGUgPSBudWxsO1xuXHRcdFx0dmFyIGVsZW1lbnRIZWlnaHQgPSAkKHRoaXMuZWxlbWVudCkub3V0ZXJIZWlnaHQodHJ1ZSk7XG5cdFx0XHR2YXIgcGF1c2VIZWlnaHQgPSBlbGVtZW50SGVpZ2h0O1xuXHRcdFx0dmFyIG1heCA9IHRoaXMuZWxlbWVudC5zY3JvbGxIZWlnaHQgLSB0aGlzLmVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xuXG5cdFx0XHRmdW5jdGlvbiBwYXVzZVR3ZWVuKCkge1xuXHRcdFx0XHRzZWxmLnR3ZWVuLnBhdXNlKCk7XG5cblx0XHRcdFx0VHdlZW5MaXRlLmtpbGxEZWxheWVkQ2FsbHNUbyhzZWxmLmNhbGN1bGF0ZVByb2dyZXNzKTtcblx0XHRcdFx0VHdlZW5MaXRlLmtpbGxEZWxheWVkQ2FsbHNUbyhzY3JvbGxDb21wbGV0ZSk7XG5cdFx0XHRcdC8vIE9ubHkgdXNlZCB3aGVuIHNjcm9sbGluZyBieSBwYWdlLlxuXHRcdFx0XHRUd2VlbkxpdGUua2lsbERlbGF5ZWRDYWxsc1RvKHBhZ2VDb21wbGV0ZSk7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuY2FsY3VsYXRlUHJvZ3Jlc3MgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0Ly8gU2V0IHBhdXNlSGVpZ2h0IHRvIG5ldyB2YWx1ZS5cblx0XHRcdFx0cGF1c2VIZWlnaHQgPSAkKHNlbGYuZWxlbWVudCkuc2Nyb2xsVG9wKCkgK1xuXHRcdFx0XHRcdGVsZW1lbnRIZWlnaHQ7XG5cblx0XHRcdFx0c2VsZi50d2Vlbi5wcm9ncmVzcygkKHNlbGYuZWxlbWVudCkuc2Nyb2xsVG9wKCkgLyBtYXgpXG5cdFx0XHRcdFx0LnBsYXkoKTtcblx0XHRcdH07XG5cblx0XHRcdGlmICh0aGlzLmNhblNjcm9sbCgpKSB7XG5cdFx0XHRcdC8vIFNldCBzY3JvbGwgc3BlZWQuXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuYnkgPT09IFwicGFnZVwiKSB7XG5cdFx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5zcGVlZCA9PT0gXCJmYXN0ZXN0XCIpIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gMC40O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwiZmFzdFwiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDAuODtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcIm1lZGl1bVwiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDEuMjtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcInNsb3dcIikge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSAxLjY7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSAyO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGR1cmF0aW9uID0gdGhpcy5wYWdlLm91dGVySGVpZ2h0KHRydWUpIC9cblx0XHRcdFx0XHRcdCQodGhpcy5lbGVtZW50KS5vdXRlckhlaWdodCh0cnVlKSAqIHNwZWVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2UgeyAgLy8gQ29udGludW91cyBvciBieSByb3dcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcImZhc3Rlc3RcIikge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSA2MDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcImZhc3RcIikge1xuXHRcdFx0XHRcdFx0c3BlZWQgPSA1MDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLnNwZWVkID09PSBcIm1lZGl1bVwiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDQwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmICh0aGlzLm9wdGlvbnMuc3BlZWQgPT09IFwic2xvd1wiKSB7XG5cdFx0XHRcdFx0XHRzcGVlZCA9IDMwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRcdHNwZWVkID0gMjA7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZHVyYXRpb24gPSBNYXRoLmFicygodGhpcy5wYWdlLm91dGVySGVpZ2h0KHRydWUpIC1cblx0XHRcdFx0XHRcdCQodGhpcy5lbGVtZW50KS5vdXRlckhlaWdodCh0cnVlKSkgLyBzcGVlZCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHREcmFnZ2FibGUuY3JlYXRlKHRoaXMuZWxlbWVudCwge1xuXHRcdFx0XHRcdHR5cGU6IFwic2Nyb2xsVG9wXCIsXG5cdFx0XHRcdFx0dGhyb3dQcm9wczogdHJ1ZSxcblx0XHRcdFx0XHRlZGdlUmVzaXN0YW5jZTogMC43NSxcblx0XHRcdFx0XHRtaW5pbXVtTW92ZW1lbnQ6IHNlbGYub3B0aW9ucy5taW5pbXVtTW92ZW1lbnQsXG5cdFx0XHRcdFx0b25QcmVzczogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRwYXVzZVR3ZWVuKCk7XG5cdFx0XHRcdFx0fSxcblx0XHRcdFx0XHRvblJlbGVhc2U6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKHNlbGYub3B0aW9ucy5ieSAhPT0gXCJub25lXCIpIHtcblx0XHRcdFx0XHRcdFx0LyogRmlndXJlIG91dCB3aGF0IHRoZSBuZXcgc2Nyb2xsIHBvc2l0aW9uIGlzIGFuZFxuXHRcdFx0XHRcdFx0XHQgdHJhbnNsYXRlIHRoYXQgaW50byB0aGUgcHJvZ3Jlc3Mgb2YgdGhlIHR3ZWVuICgwLTEpXG5cdFx0XHRcdFx0XHRcdCBzbyB0aGF0IHdlIGNhbiBjYWxpYnJhdGUgaXQ7IG90aGVyd2lzZSwgaXQnZCBqdW1wXG5cdFx0XHRcdFx0XHRcdCBiYWNrIHRvIHdoZXJlIGl0IHBhdXNlZCB3aGVuIHdlIHJlc3VtZSgpLiAqL1xuXHRcdFx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoc2VsZi5vcHRpb25zLnBhdXNlLCBzZWxmLmNhbGN1bGF0ZVByb2dyZXNzKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9LFxuXHRcdFx0XHRcdG9uQ2xpY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKHNlbGYub3B0aW9ucy5jbGljaykge1xuXHRcdFx0XHRcdFx0XHRwYXVzZVR3ZWVuKCk7XG5cdFx0XHRcdFx0XHRcdCQoc2VsZi5lbGVtZW50KS50cmlnZ2VyKFwic2Nyb2xsQ2xpY2tcIiwgW3RoaXMucG9pbnRlckV2ZW50XSk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9KTtcblxuXHRcdFx0XHR0aGlzLmRyYWdnYWJsZSA9IERyYWdnYWJsZS5nZXQodGhpcy5lbGVtZW50KTtcblxuXHRcdFx0XHR0aGlzLnR3ZWVuID0gVHdlZW5MaXRlLnRvKHRoaXMuZHJhZ2dhYmxlLnNjcm9sbFByb3h5LCBkdXJhdGlvbiwge1xuXHRcdFx0XHRcdHNjcm9sbFRvcDogbWF4LFxuXHRcdFx0XHRcdGVhc2U6IExpbmVhci5lYXNlTm9uZSxcblx0XHRcdFx0XHRkZWxheTogKHRoaXMub3B0aW9ucy5ieSA9PT0gXCJwYWdlXCIpID8gdGhpcy5vcHRpb25zLmR1cmF0aW9uIDogdGhpcy5vcHRpb25zLnBhdXNlLFxuXHRcdFx0XHRcdHBhdXNlZDogdHJ1ZSxcblx0XHRcdFx0XHRvblVwZGF0ZTogKHRoaXMub3B0aW9ucy5ieSA9PT0gXCJwYWdlXCIgPyBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmIChNYXRoLmFicyhzZWxmLmRyYWdnYWJsZS5zY3JvbGxQcm94eS50b3AoKSkgPj0gcGF1c2VIZWlnaHQpIHtcblx0XHRcdFx0XHRcdFx0c2VsZi50d2Vlbi5wYXVzZSgpO1xuXG5cdFx0XHRcdFx0XHRcdC8vIE5leHQgaGVpZ2h0IGF0IHdoaWNoIHRvIHBhdXNlIHNjcm9sbGluZy5cblx0XHRcdFx0XHRcdFx0cGF1c2VIZWlnaHQgKz0gZWxlbWVudEhlaWdodDtcblxuXHRcdFx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoc2VsZi5vcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0XHRcdFx0XHRcdHBhZ2VDb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0c2VsZi50d2Vlbi5yZXN1bWUoKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSA6IHVuZGVmaW5lZCksXG5cdFx0XHRcdFx0b25Db21wbGV0ZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoKHNlbGYub3B0aW9ucy5ieSA9PT0gXCJwYWdlXCIpID8gc2VsZi5vcHRpb25zLmR1cmF0aW9uIDogc2VsZi5vcHRpb25zLnBhdXNlLFxuXHRcdFx0XHRcdFx0XHRzY3JvbGxDb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFR3ZWVuTGl0ZS50byhzZWxmLnBhZ2UsIDEsIHtcblx0XHRcdFx0XHRcdFx0XHRcdGF1dG9BbHBoYTogMCxcblx0XHRcdFx0XHRcdFx0XHRcdG9uQ29tcGxldGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRzZWxmLnR3ZWVuLnNlZWsoMCkucGF1c2UoKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoc2VsZi5vcHRpb25zLmJ5ID09PSBcInBhZ2VcIikge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHBhdXNlSGVpZ2h0ID0gZWxlbWVudEhlaWdodDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCQoc2VsZi5lbGVtZW50KS50cmlnZ2VyKFwiZG9uZVwiKTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9KTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pO1xuXG5cdFx0XHRcdC8vIEhpZGUgc2Nyb2xsYmFyLlxuXHRcdFx0XHRUd2VlbkxpdGUuc2V0KHRoaXMuZWxlbWVudCwgeyBvdmVyZmxvd1k6IFwiaGlkZGVuXCIgfSk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmNsaWNrKSB7XG5cdFx0XHRcdFx0Ly8gQWNjb3VudCBmb3IgY29udGVudCB0aGF0IGlzIHRvIGJlIGNsaWNrZWQgd2hlbiBjb250ZW50IG5vdCBuZWVkZWQgdG8gYmUgc2Nyb2xsZWRcblx0XHRcdFx0XHQvLyBMZXZlcmFnZSBEcmFnZ2FibGUgZm9yIHRvdWNoL2NsaWNrIGV2ZW50IGhhbmRsaW5nXG5cdFx0XHRcdFx0RHJhZ2dhYmxlLmNyZWF0ZSh0aGlzLmVsZW1lbnQsIHtcblx0XHRcdFx0XHRcdHR5cGU6IFwic2Nyb2xsVG9wXCIsXG5cdFx0XHRcdFx0XHR0aHJvd1Byb3BzOiB0cnVlLFxuXHRcdFx0XHRcdFx0ZWRnZVJlc2lzdGFuY2U6IDAuOTUsXG5cdFx0XHRcdFx0XHRtaW5pbXVtTW92ZW1lbnQ6IHRoaXMub3B0aW9ucy5taW5pbXVtTW92ZW1lbnQsXG5cdFx0XHRcdFx0XHRvbkNsaWNrOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0JChzZWxmLmVsZW1lbnQpLnRyaWdnZXIoXCJzY3JvbGxDbGlja1wiLCBbdGhpcy5wb2ludGVyRXZlbnRdKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdHRoaXMuZHJhZ2dhYmxlID0gRHJhZ2dhYmxlLmdldCh0aGlzLmVsZW1lbnQpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblx0XHQvLyBDaGVjayBpZiBjb250ZW50IGlzIGxhcmdlciB0aGFuIHZpZXdhYmxlIGFyZWEgYW5kIGlmIHRoZSBzY3JvbGwgc2V0dGluZ3MgaXMgc2V0IHRvIGFjdHVhbGx5IHNjcm9sbC5cblx0XHRjYW5TY3JvbGw6IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIHRoaXMub3B0aW9ucyAmJiAodGhpcy5wYWdlLmhlaWdodCgpID4gJCh0aGlzLmVsZW1lbnQpLmhlaWdodCgpKTtcblx0XHR9LFxuXHRcdGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuXHRcdFx0JCh0aGlzLmVsZW1lbnQpLnJlbW92ZURhdGEoKTtcblx0XHRcdGlmICh0aGlzLnR3ZWVuKSB7XG5cdFx0XHRcdHRoaXMudHdlZW4ua2lsbCgpO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAodGhpcy5kcmFnZ2FibGUpIHtcblx0XHRcdFx0dGhpcy5kcmFnZ2FibGUua2lsbCgpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZW1vdmUgZWxlbWVudHMuXG5cdFx0XHR0aGlzLmVsZW1lbnQgPSBudWxsO1xuXHRcdFx0dGhpcy5wYWdlID0gbnVsbDtcblx0XHRcdHRoaXMub3B0aW9ucyA9IG51bGw7XG5cdFx0XHR0aGlzLl9kZWZhdWx0cyA9IG51bGw7XG5cdFx0XHR0aGlzLmRyYWdnYWJsZSA9IG51bGw7XG5cdFx0XHR0aGlzLnR3ZWVuID0gbnVsbDtcblx0XHRcdHRoaXMuY2FsY3VsYXRlUHJvZ3Jlc3MgPSBudWxsO1xuXHRcdH1cblx0fTtcblxuXHRQbHVnaW4ucHJvdG90eXBlLnBsYXkgPSBmdW5jdGlvbigpIHtcblx0XHRpZiAodGhpcy5jYW5TY3JvbGwoKSAmJiB0aGlzLm9wdGlvbnMuYnkgIT09IFwibm9uZVwiKSB7XG5cdFx0XHRpZiAodGhpcy50d2Vlbikge1xuXHRcdFx0XHRpZiAodGhpcy5pc0xvYWRpbmcpIHtcblx0XHRcdFx0XHR0aGlzLnR3ZWVuLnBsYXkoKTtcblx0XHRcdFx0XHR0aGlzLmlzTG9hZGluZyA9IGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdFR3ZWVuTGl0ZS50byh0aGlzLnBhZ2UsIDEsIHthdXRvQWxwaGE6IDF9KTtcblx0XHRcdFx0XHRUd2VlbkxpdGUuZGVsYXllZENhbGwoKHRoaXMub3B0aW9ucy5ieSA9PT0gXCJwYWdlXCIpID8gdGhpcy5vcHRpb25zLmR1cmF0aW9uIDogdGhpcy5vcHRpb25zLnBhdXNlLCB0aGlzLmNhbGN1bGF0ZVByb2dyZXNzKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcblxuXHRQbHVnaW4ucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKHRoaXMudHdlZW4pIHtcblx0XHRcdFR3ZWVuTGl0ZS5raWxsRGVsYXllZENhbGxzVG8odGhpcy5jYWxjdWxhdGVQcm9ncmVzcyk7XG5cdFx0XHR0aGlzLnR3ZWVuLnBhdXNlKCk7XG5cdFx0fVxuXHR9O1xuXG5cdFBsdWdpbi5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICh0aGlzLnR3ZWVuKSB7XG5cdFx0XHRUd2VlbkxpdGUua2lsbERlbGF5ZWRDYWxsc1RvKHRoaXMuY2FsY3VsYXRlUHJvZ3Jlc3MpO1xuXHRcdFx0dGhpcy50d2Vlbi5raWxsKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5lbGVtZW50ID0gbnVsbDtcblx0XHR0aGlzLnBhZ2UgPSBudWxsO1xuXHR9O1xuXG5cdC8vIEEgbGlnaHR3ZWlnaHQgcGx1Z2luIHdyYXBwZXIgYXJvdW5kIHRoZSBjb25zdHJ1Y3RvciB0aGF0IHByZXZlbnRzXG5cdC8vIG11bHRpcGxlIGluc3RhbnRpYXRpb25zLlxuXHQkLmZuLmF1dG9TY3JvbGwgPSBmdW5jdGlvbihvcHRpb25zKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbigpIHtcblx0XHRcdGlmICghJC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSkpIHtcblx0XHRcdFx0JC5kYXRhKHRoaXMsIFwicGx1Z2luX1wiICsgcGx1Z2luTmFtZSwgbmV3IFBsdWdpbih0aGlzLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH07XG59KShqUXVlcnksIHdpbmRvdywgZG9jdW1lbnQpO1xuXG4vKiBleHBvcnRlZCBXSURHRVRfQ09NTU9OX0NPTkZJRyAqL1xudmFyIFdJREdFVF9DT01NT05fQ09ORklHID0ge1xuICBBVVRIX1BBVEhfVVJMOiBcInYxL3dpZGdldC9hdXRoXCIsXG4gIExPR0dFUl9DTElFTlRfSUQ6IFwiMTA4ODUyNzE0NzEwOS02cTFvMnZ0aWhuMzQyOTJwanQ0Y2tobWhjazByazBvNy5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbVwiLFxuICBMT0dHRVJfQ0xJRU5UX1NFQ1JFVDogXCJubFp5cmNQTGc2b0V3TzlmOVdmbjI5V2hcIixcbiAgTE9HR0VSX1JFRlJFU0hfVE9LRU46IFwiMS94enQ0a3d6RTFIN1c5Vm5LQjhjQWFDeDZ6YjRFczRuS0VvcWFZSGRURDE1SWdPckpEdGR1bjZ6SzZYaUFUQ0tUXCIsXG4gIFNUT1JFX1VSTDogXCJodHRwczovL3N0b3JlLWRvdC1ydmFzZXJ2ZXIyLmFwcHNwb3QuY29tL1wiXG59O1xuLyogZ2xvYmFsIFdlYkZvbnQgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbiA9IFJpc2VWaXNpb24uQ29tbW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLkNvbW1vbi5VdGlsaXRpZXMgPSAoZnVuY3Rpb24oKSB7XG5cbiAgZnVuY3Rpb24gZ2V0Rm9udENzc1N0eWxlKGNsYXNzTmFtZSwgZm9udE9iaikge1xuICAgIHZhciBmYW1pbHkgPSBcImZvbnQtZmFtaWx5OiBcIiArIGRlY29kZVVSSUNvbXBvbmVudChmb250T2JqLmZvbnQuZmFtaWx5KS5yZXBsYWNlKC8nL2csIFwiXCIpICsgXCI7IFwiO1xuICAgIHZhciBjb2xvciA9IFwiY29sb3I6IFwiICsgKGZvbnRPYmouY29sb3IgPyBmb250T2JqLmNvbG9yIDogZm9udE9iai5mb3JlY29sb3IpICsgXCI7IFwiO1xuICAgIHZhciBzaXplID0gXCJmb250LXNpemU6IFwiICsgKGZvbnRPYmouc2l6ZS5pbmRleE9mKFwicHhcIikgPT09IC0xID8gZm9udE9iai5zaXplICsgXCJweDsgXCIgOiBmb250T2JqLnNpemUgKyBcIjsgXCIpO1xuICAgIHZhciB3ZWlnaHQgPSBcImZvbnQtd2VpZ2h0OiBcIiArIChmb250T2JqLmJvbGQgPyBcImJvbGRcIiA6IFwibm9ybWFsXCIpICsgXCI7IFwiO1xuICAgIHZhciBpdGFsaWMgPSBcImZvbnQtc3R5bGU6IFwiICsgKGZvbnRPYmouaXRhbGljID8gXCJpdGFsaWNcIiA6IFwibm9ybWFsXCIpICsgXCI7IFwiO1xuICAgIHZhciB1bmRlcmxpbmUgPSBcInRleHQtZGVjb3JhdGlvbjogXCIgKyAoZm9udE9iai51bmRlcmxpbmUgPyBcInVuZGVybGluZVwiIDogXCJub25lXCIpICsgXCI7IFwiO1xuICAgIHZhciBoaWdobGlnaHQgPSBcImJhY2tncm91bmQtY29sb3I6IFwiICsgKGZvbnRPYmouaGlnaGxpZ2h0Q29sb3IgPyBmb250T2JqLmhpZ2hsaWdodENvbG9yIDogZm9udE9iai5iYWNrY29sb3IpICsgXCI7XCI7XG5cbiAgICByZXR1cm4gXCIuXCIgKyBjbGFzc05hbWUgKyBcIiB7XCIgKyBmYW1pbHkgKyBjb2xvciArIHNpemUgKyB3ZWlnaHQgKyBpdGFsaWMgKyB1bmRlcmxpbmUgKyBoaWdobGlnaHQgKyBcIn1cIjtcbiAgfVxuXG4gIGZ1bmN0aW9uIGFkZENTU1J1bGVzKHJ1bGVzKSB7XG4gICAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG4gICAgZm9yICh2YXIgaSA9IDAsIGxlbmd0aCA9IHJ1bGVzLmxlbmd0aDsgaSA8IGxlbmd0aDsgaSsrKSB7XG4gICAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShydWxlc1tpXSkpO1xuICAgIH1cblxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgLypcbiAgICogTG9hZHMgR29vZ2xlIG9yIGN1c3RvbSBmb250cywgaWYgYXBwbGljYWJsZSwgYW5kIGluamVjdHMgQ1NTIHN0eWxlc1xuICAgKiBpbnRvIHRoZSBoZWFkIG9mIHRoZSBkb2N1bWVudC5cbiAgICpcbiAgICogQHBhcmFtICAgIGFycmF5ICAgIHNldHRpbmdzICAgIEFycmF5IG9mIG9iamVjdHMgd2l0aCB0aGUgZm9sbG93aW5nIGZvcm06XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW3tcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY2xhc3NcIjogXCJkYXRlXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImZvbnRTZXR0aW5nXCI6IHtcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2xkOiB0cnVlLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcImJsYWNrXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udDoge1xuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmFtaWx5OiBcIkFrcm9uaW1cIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQ6IFwiQWtyb25pbVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJWZXJkYW5hXCIsXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImdvb2dsZVwiLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXJsOiBcImh0dHA6Ly9jdXN0b20tZm9udC11cmxcIlxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGlnaGxpZ2h0Q29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGFsaWM6IGZhbHNlLFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNpemU6IFwiMjBcIixcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlcmxpbmU6IGZhbHNlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfV1cbiAgICpcbiAgICogICAgICAgICAgIG9iamVjdCAgIGNvbnRlbnREb2MgICAgRG9jdW1lbnQgb2JqZWN0IGludG8gd2hpY2ggdG8gaW5qZWN0IHN0eWxlc1xuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbmQgbG9hZCBmb250cyAob3B0aW9uYWwpLlxuICAgKi9cbiAgZnVuY3Rpb24gbG9hZEZvbnRzKHNldHRpbmdzLCBjYikge1xuICAgIHZhciBmYW1pbGllcyA9IG51bGwsXG4gICAgICBnb29nbGVGYW1pbGllcyA9IFtdLFxuICAgICAgY3VzdG9tRmFtaWxpZXMgPSBbXSxcbiAgICAgIGN1c3RvbVVybHMgPSBbXTtcblxuICAgIGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgaWYgKGNiICYmIHR5cGVvZiBjYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgIGNiKCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gb25Hb29nbGVGb250c0xvYWRlZCgpIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuXG4gICAgaWYgKCFzZXR0aW5ncyB8fCBzZXR0aW5ncy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLy8gQ2hlY2sgZm9yIGN1c3RvbSBjc3MgY2xhc3MgbmFtZXMgYW5kIGFkZCBydWxlcyBpZiBzb1xuICAgIHNldHRpbmdzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgICAgaWYgKGl0ZW0uY2xhc3MgJiYgaXRlbS5mb250U3R5bGUpIHtcbiAgICAgICAgYWRkQ1NTUnVsZXMoWyBnZXRGb250Q3NzU3R5bGUoaXRlbS5jbGFzcywgaXRlbS5mb250U3R5bGUpIF0pO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gR29vZ2xlIGZvbnRzXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzZXR0aW5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHNldHRpbmdzW2ldLmZvbnRTdHlsZSAmJiBzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC50eXBlICYmXG4gICAgICAgIChzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC50eXBlID09PSBcImdvb2dsZVwiKSkge1xuICAgICAgICAvLyBSZW1vdmUgZmFsbGJhY2sgZm9udC5cbiAgICAgICAgZmFtaWxpZXMgPSBzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC5mYW1pbHkuc3BsaXQoXCIsXCIpWzBdO1xuXG4gICAgICAgIC8vIHN0cmlwIHBvc3NpYmxlIHNpbmdsZSBxdW90ZXNcbiAgICAgICAgZmFtaWxpZXMgPSBmYW1pbGllcy5yZXBsYWNlKC8nL2csIFwiXCIpO1xuXG4gICAgICAgIGdvb2dsZUZhbWlsaWVzLnB1c2goZmFtaWxpZXMpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEN1c3RvbSBmb250c1xuICAgIGZvciAoaSA9IDA7IGkgPCBzZXR0aW5ncy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKHNldHRpbmdzW2ldLmZvbnRTdHlsZSAmJiBzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC50eXBlICYmXG4gICAgICAgIChzZXR0aW5nc1tpXS5mb250U3R5bGUuZm9udC50eXBlID09PSBcImN1c3RvbVwiKSkge1xuICAgICAgICAvLyBkZWNvZGUgdmFsdWUgYW5kIHN0cmlwIHNpbmdsZSBxdW90ZXNcbiAgICAgICAgY3VzdG9tRmFtaWxpZXMucHVzaChkZWNvZGVVUklDb21wb25lbnQoc2V0dGluZ3NbaV0uZm9udFN0eWxlLmZvbnQuZmFtaWx5KS5yZXBsYWNlKC8nL2csIFwiXCIpKTtcbiAgICAgICAgLy8gc3RyaXAgc2luZ2xlIHF1b3Rlc1xuICAgICAgICBjdXN0b21VcmxzLnB1c2goc2V0dGluZ3NbaV0uZm9udFN0eWxlLmZvbnQudXJsLnJlcGxhY2UoLycvZywgXCJcXFxcJ1wiKSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKGdvb2dsZUZhbWlsaWVzLmxlbmd0aCA9PT0gMCAmJiBjdXN0b21GYW1pbGllcy5sZW5ndGggPT09IDApIHtcbiAgICAgIGNhbGxiYWNrKCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgLy8gTG9hZCB0aGUgZm9udHNcbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY3VzdG9tRmFtaWxpZXMubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgICAgbG9hZEN1c3RvbUZvbnQoY3VzdG9tRmFtaWxpZXNbal0sIGN1c3RvbVVybHNbal0pO1xuICAgICAgfVxuXG4gICAgICBpZiAoZ29vZ2xlRmFtaWxpZXMubGVuZ3RoID4gMCkge1xuICAgICAgICBsb2FkR29vZ2xlRm9udHMoZ29vZ2xlRmFtaWxpZXMsIG9uR29vZ2xlRm9udHNMb2FkZWQpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbG9hZEN1c3RvbUZvbnQoZmFtaWx5LCB1cmwsIGNvbnRlbnREb2MpIHtcbiAgICB2YXIgc2hlZXQgPSBudWxsO1xuICAgIHZhciBydWxlID0gXCJmb250LWZhbWlseTogXCIgKyBmYW1pbHkgKyBcIjsgXCIgKyBcInNyYzogdXJsKCdcIiArIHVybCArIFwiJyk7XCI7XG5cbiAgICBjb250ZW50RG9jID0gY29udGVudERvYyB8fCBkb2N1bWVudDtcblxuICAgIHNoZWV0ID0gY29udGVudERvYy5zdHlsZVNoZWV0c1swXTtcblxuICAgIGlmIChzaGVldCAhPT0gbnVsbCkge1xuICAgICAgc2hlZXQuYWRkUnVsZShcIkBmb250LWZhY2VcIiwgcnVsZSk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gbG9hZEdvb2dsZUZvbnRzKGZhbWlsaWVzLCBjYikge1xuICAgIFdlYkZvbnQubG9hZCh7XG4gICAgICBnb29nbGU6IHtcbiAgICAgICAgZmFtaWxpZXM6IGZhbWlsaWVzXG4gICAgICB9LFxuICAgICAgYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGNiICYmIHR5cGVvZiBjYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGluYWN0aXZlOiBmdW5jdGlvbigpIHtcbiAgICAgICAgaWYgKGNiICYmIHR5cGVvZiBjYiA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgY2IoKTtcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHRpbWVvdXQ6IDUwMDBcbiAgICB9KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRTY3JpcHQoIHNyYyApIHtcbiAgICB2YXIgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzY3JpcHRcIiApO1xuXG4gICAgc2NyaXB0LnNyYyA9IHNyYztcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKCBzY3JpcHQgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHByZWxvYWRJbWFnZXModXJscykge1xuICAgIHZhciBsZW5ndGggPSB1cmxzLmxlbmd0aCxcbiAgICAgIGltYWdlcyA9IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xuICAgICAgaW1hZ2VzW2ldID0gbmV3IEltYWdlKCk7XG4gICAgICBpbWFnZXNbaV0uc3JjID0gdXJsc1tpXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBjdXJyZW50IFVSSSBxdWVyeSBwYXJhbVxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0UXVlcnlQYXJhbWV0ZXIocGFyYW0pIHtcbiAgICByZXR1cm4gZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXIocGFyYW0sIHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgdGhlIHF1ZXJ5IHBhcmFtZXRlciBmcm9tIGEgcXVlcnkgc3RyaW5nXG4gICAqL1xuICBmdW5jdGlvbiBnZXRRdWVyeVN0cmluZ1BhcmFtZXRlcihwYXJhbSwgcXVlcnkpIHtcbiAgICB2YXIgdmFycyA9IHF1ZXJ5LnNwbGl0KFwiJlwiKSxcbiAgICAgIHBhaXI7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHBhaXIgPSB2YXJzW2ldLnNwbGl0KFwiPVwiKTtcblxuICAgICAgaWYgKHBhaXJbMF0gPT0gcGFyYW0pIHsgLy8ganNoaW50IGlnbm9yZTpsaW5lXG4gICAgICAgIHJldHVybiBkZWNvZGVVUklDb21wb25lbnQocGFpclsxXSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCI7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGRhdGUgb2JqZWN0IGZyb20gcGxheWVyIHZlcnNpb24gc3RyaW5nXG4gICAqL1xuICBmdW5jdGlvbiBnZXREYXRlT2JqZWN0RnJvbVBsYXllclZlcnNpb25TdHJpbmcocGxheWVyVmVyc2lvbikge1xuICAgIHZhciByZWdnaWUgPSAvKFxcZHs0fSlcXC4oXFxkezJ9KVxcLihcXGR7Mn0pXFwuKFxcZHsyfSlcXC4oXFxkezJ9KS87XG4gICAgdmFyIGRhdGVBcnJheSA9IHJlZ2dpZS5leGVjKHBsYXllclZlcnNpb24pO1xuICAgIGlmIChkYXRlQXJyYXkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShcbiAgICAgICAgKCtkYXRlQXJyYXlbMV0pLFxuICAgICAgICAgICgrZGF0ZUFycmF5WzJdKS0xLCAvLyBDYXJlZnVsLCBtb250aCBzdGFydHMgYXQgMCFcbiAgICAgICAgKCtkYXRlQXJyYXlbM10pLFxuICAgICAgICAoK2RhdGVBcnJheVs0XSksXG4gICAgICAgICgrZGF0ZUFycmF5WzVdKVxuICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFJpc2VDYWNoZUVycm9yTWVzc2FnZShzdGF0dXNDb2RlKSB7XG4gICAgdmFyIGVycm9yTWVzc2FnZSA9IFwiXCI7XG4gICAgc3dpdGNoIChzdGF0dXNDb2RlKSB7XG4gICAgICBjYXNlIDQwNDpcbiAgICAgICAgZXJyb3JNZXNzYWdlID0gXCJUaGUgZmlsZSBkb2VzIG5vdCBleGlzdCBvciBjYW5ub3QgYmUgYWNjZXNzZWQuXCI7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSA1MDc6XG4gICAgICAgIGVycm9yTWVzc2FnZSA9IFwiVGhlcmUgaXMgbm90IGVub3VnaCBkaXNrIHNwYWNlIHRvIHNhdmUgdGhlIGZpbGUgb24gUmlzZSBDYWNoZS5cIjtcbiAgICAgICAgYnJlYWs7XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBlcnJvck1lc3NhZ2UgPSBcIlRoZXJlIHdhcyBhIHByb2JsZW0gcmV0cmlldmluZyB0aGUgZmlsZSBmcm9tIFJpc2UgQ2FjaGUuXCI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVycm9yTWVzc2FnZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVuZXNjYXBlSFRNTChodG1sKSB7XG4gICAgdmFyIGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgICBkaXYuaW5uZXJIVE1MID0gaHRtbDtcblxuICAgIHJldHVybiBkaXYudGV4dENvbnRlbnQ7XG4gIH1cblxuICBmdW5jdGlvbiBoYXNJbnRlcm5ldENvbm5lY3Rpb24oZmlsZVBhdGgsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXG4gICAgaWYgKCFmaWxlUGF0aCB8fCAhY2FsbGJhY2sgfHwgdHlwZW9mIGNhbGxiYWNrICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICB4aHIub3BlbihcIkhFQURcIiwgZmlsZVBhdGggKyBcIj9jYj1cIiArIG5ldyBEYXRlKCkuZ2V0VGltZSgpLCBmYWxzZSk7XG5cbiAgICB0cnkge1xuICAgICAgeGhyLnNlbmQoKTtcblxuICAgICAgY2FsbGJhY2soKHhoci5zdGF0dXMgPj0gMjAwICYmIHhoci5zdGF0dXMgPCAzMDQpKTtcblxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNhbGxiYWNrKGZhbHNlKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgaWYgY2hyb21lIHZlcnNpb24gaXMgdW5kZXIgYSBjZXJ0YWluIHZlcnNpb25cbiAgICovXG4gIGZ1bmN0aW9uIGlzTGVnYWN5KCkge1xuICAgIHZhciBsZWdhY3lWZXJzaW9uID0gMjU7XG5cbiAgICB2YXIgbWF0Y2ggPSBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9DaHJvbWVcXC8oXFxTKykvKTtcbiAgICB2YXIgdmVyc2lvbiA9IG1hdGNoID8gbWF0Y2hbMV0gOiAwO1xuXG4gICAgaWYgKHZlcnNpb24pIHtcbiAgICAgIHZlcnNpb24gPSBwYXJzZUludCh2ZXJzaW9uLnN1YnN0cmluZygwLHZlcnNpb24uaW5kZXhPZihcIi5cIikpKTtcblxuICAgICAgaWYgKHZlcnNpb24gPD0gbGVnYWN5VmVyc2lvbikge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAvKipcbiAgICogQWRkcyBodHRwOi8vIG9yIGh0dHBzOi8vIHByb3RvY29sIHRvIHVybCBpZiB0aGUgcHJvdG9jb2wgaXMgbWlzc2luZ1xuICAgKi9cbiAgZnVuY3Rpb24gYWRkUHJvdG9jb2wodXJsLCBzZWN1cmUpIHtcbiAgICBpZiAoIS9eKD86ZnxodCl0cHM/XFw6XFwvXFwvLy50ZXN0KHVybCkpIHtcbiAgICAgIHVybCA9ICgoc2VjdXJlKSA/IFwiaHR0cHM6Ly9cIiA6IFwiaHR0cDovL1wiKSArIHVybDtcbiAgICB9XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgYWRkUHJvdG9jb2w6ICAgICAgICAgICAgICBhZGRQcm90b2NvbCxcbiAgICBnZXRRdWVyeVBhcmFtZXRlcjogICAgICAgIGdldFF1ZXJ5UGFyYW1ldGVyLFxuICAgIGdldFF1ZXJ5U3RyaW5nUGFyYW1ldGVyOiAgZ2V0UXVlcnlTdHJpbmdQYXJhbWV0ZXIsXG4gICAgZ2V0Rm9udENzc1N0eWxlOiAgICAgICAgICBnZXRGb250Q3NzU3R5bGUsXG4gICAgYWRkQ1NTUnVsZXM6ICAgICAgICAgICAgICBhZGRDU1NSdWxlcyxcbiAgICBsb2FkRm9udHM6ICAgICAgICAgICAgICAgIGxvYWRGb250cyxcbiAgICBsb2FkQ3VzdG9tRm9udDogICAgICAgICAgIGxvYWRDdXN0b21Gb250LFxuICAgIGxvYWRHb29nbGVGb250czogICAgICAgICAgbG9hZEdvb2dsZUZvbnRzLFxuICAgIGxvYWRTY3JpcHQ6ICAgICAgICAgICAgICAgbG9hZFNjcmlwdCxcbiAgICBwcmVsb2FkSW1hZ2VzOiAgICAgICAgICAgIHByZWxvYWRJbWFnZXMsXG4gICAgZ2V0UmlzZUNhY2hlRXJyb3JNZXNzYWdlOiBnZXRSaXNlQ2FjaGVFcnJvck1lc3NhZ2UsXG4gICAgdW5lc2NhcGVIVE1MOiAgICAgICAgICAgICB1bmVzY2FwZUhUTUwsXG4gICAgaGFzSW50ZXJuZXRDb25uZWN0aW9uOiAgICBoYXNJbnRlcm5ldENvbm5lY3Rpb24sXG4gICAgaXNMZWdhY3k6ICAgICAgICAgICAgICAgICBpc0xlZ2FjeSxcbiAgICBnZXREYXRlT2JqZWN0RnJvbVBsYXllclZlcnNpb25TdHJpbmc6IGdldERhdGVPYmplY3RGcm9tUGxheWVyVmVyc2lvblN0cmluZ1xuICB9O1xufSkoKTtcblxuLyogZ2xvYmFsIFR3ZWVuTGl0ZSwgTGluZWFyICovXG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblJpc2VWaXNpb24uQ29tbW9uID0gUmlzZVZpc2lvbi5Db21tb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uLlNjcm9sbGVyID0gZnVuY3Rpb24gKHBhcmFtcykge1xuXG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfc2Nyb2xsZXIgPSBudWxsLFxuICAgIF9zY3JvbGxlckN0eCA9IG51bGwsXG4gICAgX3NlY29uZGFyeSA9IG51bGwsXG4gICAgX3NlY29uZGFyeUN0eCA9IG51bGwsXG4gICAgX3R3ZWVuID0gbnVsbCxcbiAgICBfaXRlbXMgPSBbXSxcbiAgICBfeHBvcyA9IDAsXG4gICAgX29yaWdpbmFsWHBvcyA9IDAsXG4gICAgX3V0aWxzID0gUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzLFxuICAgIE1BWF9DQU5WQVNfU0laRSA9IDMyNzY3O1xuXG4gIC8qXG4gICAqICBQcml2YXRlIE1ldGhvZHNcbiAgICovXG5cbiAgLyogSW5pdGlhbGl6ZSB0aGUgc2Vjb25kYXJ5IGNhbnZhcyBmcm9tIHdoaWNoIHRleHQgd2lsbCBiZSBjb3BpZWQgdG8gdGhlIHNjcm9sbGVyLiAqL1xuICBmdW5jdGlvbiBpbml0U2Vjb25kYXJ5Q2FudmFzKCkge1xuICAgIGRyYXdJdGVtcygpO1xuICAgIGZpbGxTY3JvbGxlcigpO1xuXG4gICAgaWYgKF94cG9zID4gTUFYX0NBTlZBU19TSVpFKSB7XG4gICAgICB0aHJvd092ZXJzaXplZENhbnZlc0Vycm9yKCk7XG4gICAgfVxuXG4gICAgLy8gV2lkdGggb2YgdGhlIHNlY29uZGFyeSBjYW52YXMgbmVlZHMgdG8gZXF1YWwgdGhlIHdpZHRoIG9mIGFsbCBvZiB0aGUgdGV4dC5cbiAgICBfc2Vjb25kYXJ5LndpZHRoID0gX3hwb3M7XG5cbiAgICAvLyBTZXR0aW5nIHRoZSB3aWR0aCBhZ2FpbiByZXNldHMgdGhlIGNhbnZhcyBzbyBpdCBuZWVkcyB0byBiZSByZWRyYXduLlxuICAgIGRyYXdJdGVtcygpO1xuICAgIGZpbGxTY3JvbGxlcigpO1xuICB9XG5cbiAgZnVuY3Rpb24gdGhyb3dPdmVyc2l6ZWRDYW52ZXNFcnJvcigpIHtcbiAgICB2YXIgZXZlbnQgPSBuZXcgRXZlbnQoXCJzY3JvbGxlci1vdmVyc2l6ZWQtY2FudmFzXCIpO1xuICAgIF9zY3JvbGxlci5kaXNwYXRjaEV2ZW50KGV2ZW50KTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGRyYXdJdGVtcygpIHtcbiAgICBfeHBvcyA9IDA7XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IF9pdGVtcy5sZW5ndGg7IGkrKykge1xuICAgICAgaWYgKF9pdGVtc1tpXS5zZXBhcmF0b3IpIHtcbiAgICAgICAgZHJhd1NlcGFyYXRvcihfaXRlbXNbaV0pO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIGRyYXdJdGVtKF9pdGVtc1tpXSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLyogRHJhdyBhIHNlcGFyYXRvciBiZXR3ZWVuIGl0ZW1zLiAqL1xuICBmdW5jdGlvbiBkcmF3U2VwYXJhdG9yKGl0ZW0pIHtcbiAgICB2YXIgeSA9IF9zZWNvbmRhcnkuaGVpZ2h0IC8gMixcbiAgICAgIHJhZGl1cyA9IGl0ZW0uc2l6ZSAvIDI7XG5cbiAgICBfc2Vjb25kYXJ5Q3R4LnNhdmUoKTtcblxuICAgIF9zZWNvbmRhcnlDdHguZmlsbFN0eWxlID0gaXRlbS5jb2xvcjtcblxuICAgIC8vIERyYXcgYSBjaXJjbGUuXG4gICAgX3NlY29uZGFyeUN0eC5iZWdpblBhdGgoKTtcbiAgICBfc2Vjb25kYXJ5Q3R4LmFyYyhfeHBvcyArIHJhZGl1cywgeSwgcmFkaXVzLCAwLCAyICogTWF0aC5QSSk7XG4gICAgX3NlY29uZGFyeUN0eC5maWxsKCk7XG5cbiAgICBfeHBvcyArPSBpdGVtLnNpemUgKyAxMDtcblxuICAgIF9zZWNvbmRhcnlDdHgucmVzdG9yZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gZHJhd0l0ZW0oaXRlbSkge1xuICAgIHZhciB0ZXh0T2JqID0ge30sXG4gICAgICBmb250U3R5bGU7XG5cbiAgICBpZiAoaXRlbSkge1xuICAgICAgdGV4dE9iai50ZXh0ID0gX3V0aWxzLnVuZXNjYXBlSFRNTChpdGVtLnRleHQpO1xuXG4gICAgICBpZiAoaXRlbS5mb250U3R5bGUpIHtcbiAgICAgICAgZm9udFN0eWxlID0gaXRlbS5mb250U3R5bGU7XG5cbiAgICAgICAgaWYgKGZvbnRTdHlsZS5mb250ICYmIGZvbnRTdHlsZS5mb250LmZhbWlseSkge1xuICAgICAgICAgIHRleHRPYmouZm9udCA9IGZvbnRTdHlsZS5mb250LmZhbWlseTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChmb250U3R5bGUuc2l6ZSkge1xuICAgICAgICAgIHRleHRPYmouc2l6ZSA9IGZvbnRTdHlsZS5zaXplO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGZvbnRTdHlsZS5mb3JlY29sb3IpIHtcbiAgICAgICAgICB0ZXh0T2JqLmZvcmVDb2xvciA9IGZvbnRTdHlsZS5mb3JlY29sb3I7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZm9udFN0eWxlLmJvbGQpIHtcbiAgICAgICAgICB0ZXh0T2JqLmJvbGQgPSBmb250U3R5bGUuYm9sZDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChmb250U3R5bGUuaXRhbGljKSB7XG4gICAgICAgICAgdGV4dE9iai5pdGFsaWMgPSBmb250U3R5bGUuaXRhbGljO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGRyYXdUZXh0KHRleHRPYmopO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGRyYXdUZXh0KHRleHRPYmopIHtcbiAgICB2YXIgZm9udCA9IFwiXCI7XG5cbiAgICBfc2Vjb25kYXJ5Q3R4LnNhdmUoKTtcblxuICAgIGlmICh0ZXh0T2JqLmJvbGQpIHtcbiAgICAgIGZvbnQgPSBcImJvbGQgXCI7XG4gICAgfVxuXG4gICAgaWYgKHRleHRPYmouaXRhbGljKSB7XG4gICAgICBmb250ICs9IFwiaXRhbGljIFwiO1xuICAgIH1cblxuICAgIGlmICh0ZXh0T2JqLnNpemUpIHtcbiAgICAgIGZvbnQgKz0gdGV4dE9iai5zaXplICsgXCIgXCI7XG4gICAgfVxuXG4gICAgaWYgKHRleHRPYmouZm9udCkge1xuICAgICAgZm9udCArPSB0ZXh0T2JqLmZvbnQ7XG4gICAgfVxuXG4gICAgLy8gU2V0IHRoZSB0ZXh0IGZvcm1hdHRpbmcuXG4gICAgX3NlY29uZGFyeUN0eC5mb250ID0gZm9udDtcbiAgICBfc2Vjb25kYXJ5Q3R4LmZpbGxTdHlsZSA9IHRleHRPYmouZm9yZUNvbG9yO1xuICAgIF9zZWNvbmRhcnlDdHgudGV4dEJhc2VsaW5lID0gXCJtaWRkbGVcIjtcblxuICAgIC8vIERyYXcgdGhlIHRleHQgb250byB0aGUgY2FudmFzLlxuICAgIF9zZWNvbmRhcnlDdHgudHJhbnNsYXRlKDAsIF9zZWNvbmRhcnkuaGVpZ2h0IC8gMik7XG4gICAgX3NlY29uZGFyeUN0eC5maWxsVGV4dCh0ZXh0T2JqLnRleHQsIF94cG9zLCAwKTtcblxuICAgIF94cG9zICs9IF9zZWNvbmRhcnlDdHgubWVhc3VyZVRleHQodGV4dE9iai50ZXh0KS53aWR0aCArIDEwO1xuXG4gICAgX3NlY29uZGFyeUN0eC5yZXN0b3JlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBkcmF3KCkge1xuICAgIF9zY3JvbGxlckN0eC5jbGVhclJlY3QoMCwgMCwgX3Njcm9sbGVyLndpZHRoLCBfc2Nyb2xsZXIuaGVpZ2h0KTtcbiAgICBfc2Nyb2xsZXJDdHguZHJhd0ltYWdlKF9zZWNvbmRhcnksIF9zY3JvbGxlckN0eC54cG9zLCAwKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGZpbGxTY3JvbGxlcigpIHtcbiAgICB2YXIgd2lkdGggPSAwLFxuICAgICAgaW5kZXggPSAwO1xuXG4gICAgX29yaWdpbmFsWHBvcyA9IF94cG9zO1xuXG4gICAgLy8gRW5zdXJlIHRoZXJlJ3MgZW5vdWdoIHRleHQgdG8gZmlsbCB0aGUgc2Nyb2xsZXIuXG4gICAgaWYgKF9pdGVtcy5sZW5ndGggPiAwKSB7XG4gICAgICB3aGlsZSAod2lkdGggPCBfc2Nyb2xsZXIud2lkdGgpIHtcbiAgICAgICAgaWYgKF9pdGVtc1tpbmRleF0uc2VwYXJhdG9yKSB7XG4gICAgICAgICAgZHJhd1NlcGFyYXRvcihfaXRlbXNbaW5kZXhdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBkcmF3SXRlbShfaXRlbXNbaW5kZXhdKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdpZHRoID0gX3hwb3MgLSBfb3JpZ2luYWxYcG9zO1xuICAgICAgICBpbmRleCA9IChpbmRleCA9PT0gX2l0ZW1zLmxlbmd0aCAtIDEpID8gMCA6IGluZGV4ICsgMTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKiBHZXQgdGhlIHNjcm9sbCBzcGVlZC4gKi9cbiAgZnVuY3Rpb24gZ2V0RGVsYXkoKSB7XG4gICAgdmFyIGZhY3RvcjtcblxuICAgIGlmIChwYXJhbXMudHJhbnNpdGlvbiAmJiBwYXJhbXMudHJhbnNpdGlvbi5zcGVlZCkge1xuICAgICAgc3dpdGNoIChwYXJhbXMudHJhbnNpdGlvbi5zcGVlZCkge1xuICAgICAgICBjYXNlIFwic2xvd1wiOlxuICAgICAgICAgIGZhY3RvciA9IDEwMDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIm1lZGl1bVwiOlxuICAgICAgICAgIGZhY3RvciA9IDE1MDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcImZhc3RcIjpcbiAgICAgICAgICBmYWN0b3IgPSAyMDA7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgZmFjdG9yID0gMTUwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBfb3JpZ2luYWxYcG9zIC8gZmFjdG9yO1xuICB9XG5cbiAgLyogU2Nyb2xsZXIgaGFzIGNvbXBsZXRlZCBhIGN5Y2xlLiAqL1xuICBmdW5jdGlvbiBvbkNvbXBsZXRlKCkge1xuICAgIF90d2VlbiA9IG51bGw7XG4gICAgX3Njcm9sbGVyQ3R4Lnhwb3MgPSAwO1xuXG4gICAgX3Njcm9sbGVyLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwiZG9uZVwiLCB7IFwiYnViYmxlc1wiOiB0cnVlIH0pKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGNyZWF0ZVNlY29uZGFyeUNhbnZhcygpIHtcbiAgICBfc2Vjb25kYXJ5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImNhbnZhc1wiKTtcbiAgICBfc2Vjb25kYXJ5LmlkID0gXCJzZWNvbmRhcnlcIjtcbiAgICBfc2Vjb25kYXJ5LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICBfc2Vjb25kYXJ5Q3R4ID0gaW5pdENhbnZhcyhfc2Vjb25kYXJ5KTtcblxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoX3NlY29uZGFyeSk7XG4gIH1cblxuICBmdW5jdGlvbiBpbml0Q2FudmFzKGNhbnZhcykge1xuICAgIHZhciBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxuICAgIGNhbnZhcy53aWR0aCA9IHBhcmFtcy53aWR0aDtcbiAgICBjYW52YXMuaGVpZ2h0ID0gcGFyYW1zLmhlaWdodDtcbiAgICBjb250ZXh0Lnhwb3MgPSAwO1xuXG4gICAgcmV0dXJuIGNvbnRleHQ7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoaXRlbXMpIHtcbiAgICBfaXRlbXMgPSBpdGVtcztcbiAgICBfc2Nyb2xsZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNjcm9sbGVyXCIpO1xuICAgIF9zY3JvbGxlckN0eCA9IGluaXRDYW52YXMoX3Njcm9sbGVyKTtcblxuICAgIGNyZWF0ZVNlY29uZGFyeUNhbnZhcygpO1xuICAgIGluaXRTZWNvbmRhcnlDYW52YXMoKTtcblxuICAgIFR3ZWVuTGl0ZS50aWNrZXIuYWRkRXZlbnRMaXN0ZW5lcihcInRpY2tcIiwgZHJhdyk7XG4gICAgX3Njcm9sbGVyLmRpc3BhdGNoRXZlbnQobmV3IEN1c3RvbUV2ZW50KFwicmVhZHlcIiwgeyBcImJ1YmJsZXNcIjogdHJ1ZSB9KSk7XG4gIH1cblxuICBmdW5jdGlvbiByZWZyZXNoKGl0ZW1zKSB7XG4gICAgX2l0ZW1zID0gaXRlbXM7XG5cbiAgICBpbml0U2Vjb25kYXJ5Q2FudmFzKCk7XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIGlmICghX3R3ZWVuKSB7XG4gICAgICBfdHdlZW4gPSBUd2VlbkxpdGUudG8oX3Njcm9sbGVyQ3R4LCBnZXREZWxheSgpLCB7IHhwb3M6IC1fb3JpZ2luYWxYcG9zLCBlYXNlOiBMaW5lYXIuZWFzZU5vbmUsIG9uQ29tcGxldGU6IG9uQ29tcGxldGUgfSk7XG4gICAgfVxuXG4gICAgX3R3ZWVuLnBsYXkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIGlmIChfdHdlZW4pIHtcbiAgICAgIF90d2Vlbi5wYXVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdDogaW5pdCxcbiAgICBwbGF5OiBwbGF5LFxuICAgIHBhdXNlOiBwYXVzZSxcbiAgICByZWZyZXNoOiByZWZyZXNoXG4gIH07XG59O1xuXG4vKiBnbG9iYWwgV0lER0VUX0NPTU1PTl9DT05GSUcgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuUmlzZVZpc2lvbi5Db21tb24gPSBSaXNlVmlzaW9uLkNvbW1vbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMgPSAoZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gICB2YXIgZGlzcGxheUlkID0gXCJcIixcbiAgICAgY29tcGFueUlkID0gXCJcIixcbiAgICAgdmVyc2lvbiA9IG51bGw7XG5cbiAgLypcbiAgICogIFByaXZhdGUgTWV0aG9kc1xuICAgKi9cblxuICAvKiBSZXRyaWV2ZSBwYXJhbWV0ZXJzIHRvIHBhc3MgdG8gdGhlIGV2ZW50IGxvZ2dlci4gKi9cbiAgZnVuY3Rpb24gZ2V0RXZlbnRQYXJhbXMocGFyYW1zLCBjYikge1xuICAgIHZhciBqc29uID0gbnVsbDtcblxuICAgIC8vIGV2ZW50IGlzIHJlcXVpcmVkLlxuICAgIGlmIChwYXJhbXMuZXZlbnQpIHtcbiAgICAgIGpzb24gPSBwYXJhbXM7XG5cbiAgICAgIGlmIChqc29uLmZpbGVfdXJsKSB7XG4gICAgICAgIGpzb24uZmlsZV9mb3JtYXQgPSBnZXRGaWxlRm9ybWF0KGpzb24uZmlsZV91cmwpO1xuICAgICAgfVxuXG4gICAgICBqc29uLmNvbXBhbnlfaWQgPSBjb21wYW55SWQ7XG4gICAgICBqc29uLmRpc3BsYXlfaWQgPSBkaXNwbGF5SWQ7XG5cbiAgICAgIGlmICh2ZXJzaW9uKSB7XG4gICAgICAgIGpzb24udmVyc2lvbiA9IHZlcnNpb247XG4gICAgICB9XG5cbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgIGNiKGpzb24pO1xuICAgIH1cbiAgfVxuXG4gIC8vIEdldCBzdWZmaXggZm9yIEJRIHRhYmxlIG5hbWUuXG4gIGZ1bmN0aW9uIGdldFN1ZmZpeCgpIHtcbiAgICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCksXG4gICAgICB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpLFxuICAgICAgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCkgKyAxLFxuICAgICAgZGF5ID0gZGF0ZS5nZXRVVENEYXRlKCk7XG5cbiAgICBpZiAobW9udGggPCAxMCkge1xuICAgICAgbW9udGggPSBcIjBcIiArIG1vbnRoO1xuICAgIH1cblxuICAgIGlmIChkYXkgPCAxMCkge1xuICAgICAgZGF5ID0gXCIwXCIgKyBkYXk7XG4gICAgfVxuXG4gICAgcmV0dXJuIFwiXCIgKyB5ZWFyICsgbW9udGggKyBkYXk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGdldEZpbGVGb3JtYXQodXJsKSB7XG4gICAgdmFyIGhhc1BhcmFtcyA9IC9bPyMmXS8sXG4gICAgICBzdHI7XG5cbiAgICBpZiAoIXVybCB8fCB0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBzdHIgPSB1cmwuc3Vic3RyKHVybC5sYXN0SW5kZXhPZihcIi5cIikgKyAxKTtcblxuICAgIC8vIGRvbid0IGluY2x1ZGUgYW55IHBhcmFtcyBhZnRlciB0aGUgZmlsZW5hbWVcbiAgICBpZiAoaGFzUGFyYW1zLnRlc3Qoc3RyKSkge1xuICAgICAgc3RyID0gc3RyLnN1YnN0cigwICwoc3RyLmluZGV4T2YoXCI/XCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIj9cIikgOiBzdHIubGVuZ3RoKTtcblxuICAgICAgc3RyID0gc3RyLnN1YnN0cigwLCAoc3RyLmluZGV4T2YoXCIjXCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIiNcIikgOiBzdHIubGVuZ3RoKTtcblxuICAgICAgc3RyID0gc3RyLnN1YnN0cigwLCAoc3RyLmluZGV4T2YoXCImXCIpICE9PSAtMSkgPyBzdHIuaW5kZXhPZihcIiZcIikgOiBzdHIubGVuZ3RoKTtcbiAgICB9XG5cbiAgICByZXR1cm4gc3RyLnRvTG93ZXJDYXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBnZXRJbnNlcnREYXRhKHBhcmFtcykge1xuICAgIHZhciBCQVNFX0lOU0VSVF9TQ0hFTUEgPSB7XG4gICAgICBcImtpbmRcIjogXCJiaWdxdWVyeSN0YWJsZURhdGFJbnNlcnRBbGxSZXF1ZXN0XCIsXG4gICAgICBcInNraXBJbnZhbGlkUm93c1wiOiBmYWxzZSxcbiAgICAgIFwiaWdub3JlVW5rbm93blZhbHVlc1wiOiBmYWxzZSxcbiAgICAgIFwidGVtcGxhdGVTdWZmaXhcIjogZ2V0U3VmZml4KCksXG4gICAgICBcInJvd3NcIjogW3tcbiAgICAgICAgXCJpbnNlcnRJZFwiOiBcIlwiXG4gICAgICB9XVxuICAgIH0sXG4gICAgZGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoQkFTRV9JTlNFUlRfU0NIRU1BKSk7XG5cbiAgICBkYXRhLnJvd3NbMF0uaW5zZXJ0SWQgPSBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHIoMikudG9VcHBlckNhc2UoKTtcbiAgICBkYXRhLnJvd3NbMF0uanNvbiA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocGFyYW1zKSk7XG4gICAgZGF0YS5yb3dzWzBdLmpzb24udHMgPSBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG5cbiAgICByZXR1cm4gZGF0YTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvZ0V2ZW50KHRhYmxlLCBwYXJhbXMpIHtcbiAgICBnZXRFdmVudFBhcmFtcyhwYXJhbXMsIGZ1bmN0aW9uKGpzb24pIHtcbiAgICAgIGlmIChqc29uICE9PSBudWxsKSB7XG4gICAgICAgIFJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlci5sb2codGFibGUsIGpzb24pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgZnVuY3Rpb24gbG9nRXZlbnRUb1BsYXllcih0YWJsZSwgcGFyYW1zKSB7XG4gICAgdHJ5IHtcbiAgICAgIHRvcC5wb3N0VG9QbGF5ZXIoIHtcbiAgICAgICAgbWVzc2FnZTogXCJ3aWRnZXQtbG9nXCIsXG4gICAgICAgIHRhYmxlOiB0YWJsZSxcbiAgICAgICAgcGFyYW1zOiBKU09OLnN0cmluZ2lmeShwYXJhbXMpLFxuICAgICAgICBzdWZmaXg6IGdldFN1ZmZpeCgpXG4gICAgICB9ICk7XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIndpZGdldC1jb21tb24ubG9nRXZlbnRUb1BsYXllclwiLCBlcnIpO1xuICAgIH1cbiAgfVxuXG4gIC8qIFNldCB0aGUgQ29tcGFueSBhbmQgRGlzcGxheSBJRHMuICovXG4gIGZ1bmN0aW9uIHNldElkcyhjb21wYW55LCBkaXNwbGF5KSB7XG4gICAgY29tcGFueUlkID0gY29tcGFueTtcbiAgICBkaXNwbGF5SWQgPSBkaXNwbGF5O1xuICB9XG5cbiAgZnVuY3Rpb24gc2V0VmVyc2lvbih2YWx1ZSkge1xuICAgIHZlcnNpb24gPSB2YWx1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJnZXRJbnNlcnREYXRhXCI6IGdldEluc2VydERhdGEsXG4gICAgXCJnZXRGaWxlRm9ybWF0XCI6IGdldEZpbGVGb3JtYXQsXG4gICAgXCJsb2dFdmVudFwiOiBsb2dFdmVudCxcbiAgICBcImxvZ0V2ZW50VG9QbGF5ZXJcIjogbG9nRXZlbnRUb1BsYXllcixcbiAgICBcInNldElkc1wiOiBzZXRJZHMsXG4gICAgXCJzZXRWZXJzaW9uXCI6IHNldFZlcnNpb25cbiAgfTtcbn0pKCk7XG5cblJpc2VWaXNpb24uQ29tbW9uLkxvZ2dlciA9IChmdW5jdGlvbih1dGlscykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgUkVGUkVTSF9VUkwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL29hdXRoMi92My90b2tlbj9jbGllbnRfaWQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX0lEICtcbiAgICAgIFwiJmNsaWVudF9zZWNyZXQ9XCIgKyBXSURHRVRfQ09NTU9OX0NPTkZJRy5MT0dHRVJfQ0xJRU5UX1NFQ1JFVCArXG4gICAgICBcIiZyZWZyZXNoX3Rva2VuPVwiICsgV0lER0VUX0NPTU1PTl9DT05GSUcuTE9HR0VSX1JFRlJFU0hfVE9LRU4gK1xuICAgICAgXCImZ3JhbnRfdHlwZT1yZWZyZXNoX3Rva2VuXCI7XG5cbiAgdmFyIHNlcnZpY2VVcmwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2JpZ3F1ZXJ5L3YyL3Byb2plY3RzL2NsaWVudC1zaWRlLWV2ZW50cy9kYXRhc2V0cy9XaWRnZXRfRXZlbnRzL3RhYmxlcy9UQUJMRV9JRC9pbnNlcnRBbGxcIixcbiAgICB0aHJvdHRsZSA9IGZhbHNlLFxuICAgIHRocm90dGxlRGVsYXkgPSAxMDAwLFxuICAgIGxhc3RFdmVudCA9IFwiXCIsXG4gICAgcmVmcmVzaERhdGUgPSAwLFxuICAgIHRva2VuID0gXCJcIjtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiByZWZyZXNoVG9rZW4oY2IpIHtcbiAgICB2YXIgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cbiAgICBpZiAobmV3IERhdGUoKSAtIHJlZnJlc2hEYXRlIDwgMzU4MDAwMCkge1xuICAgICAgcmV0dXJuIGNiKHt9KTtcbiAgICB9XG5cbiAgICB4aHIub3BlbihcIlBPU1RcIiwgUkVGUkVTSF9VUkwsIHRydWUpO1xuICAgIHhoci5vbmxvYWRlbmQgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZhciByZXNwID0ge307XG4gICAgICB0cnkge1xuICAgICAgICByZXNwID0gSlNPTi5wYXJzZSh4aHIucmVzcG9uc2UpO1xuICAgICAgfSBjYXRjaChlKSB7XG4gICAgICAgIGNvbnNvbGUud2FybihcIkNhbid0IHJlZnJlc2ggbG9nZ2VyIHRva2VuIC0gXCIsIGUubWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBjYih7IHRva2VuOiByZXNwLmFjY2Vzc190b2tlbiwgcmVmcmVzaGVkQXQ6IG5ldyBEYXRlKCkgfSk7XG4gICAgfTtcblxuICAgIHhoci5zZW5kKCk7XG4gIH1cblxuICBmdW5jdGlvbiBpc1Rocm90dGxlZChldmVudCkge1xuICAgIHJldHVybiB0aHJvdHRsZSAmJiAobGFzdEV2ZW50ID09PSBldmVudCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGxvZyh0YWJsZU5hbWUsIHBhcmFtcykge1xuICAgIGlmICghdGFibGVOYW1lIHx8ICFwYXJhbXMgfHwgKHBhcmFtcy5oYXNPd25Qcm9wZXJ0eShcImV2ZW50XCIpICYmICFwYXJhbXMuZXZlbnQpIHx8XG4gICAgICAocGFyYW1zLmhhc093blByb3BlcnR5KFwiZXZlbnRcIikgJiYgaXNUaHJvdHRsZWQocGFyYW1zLmV2ZW50KSkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICAvLyBkb24ndCBsb2cgaWYgZGlzcGxheSBpZCBpcyBpbnZhbGlkIG9yIHByZXZpZXcvbG9jYWxcbiAgICBpZiAoIXBhcmFtcy5kaXNwbGF5X2lkIHx8IHBhcmFtcy5kaXNwbGF5X2lkID09PSBcInByZXZpZXdcIiB8fCBwYXJhbXMuZGlzcGxheV9pZCA9PT0gXCJkaXNwbGF5X2lkXCIgfHxcbiAgICAgIHBhcmFtcy5kaXNwbGF5X2lkID09PSBcImRpc3BsYXlJZFwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIGlmICggdG9wLnBvc3RUb1BsYXllciAmJiB0b3AuZW5hYmxlV2lkZ2V0TG9nZ2luZyApIHtcbiAgICAgICAgLy8gc2VuZCBsb2cgZGF0YSB0byBwbGF5ZXIgaW5zdGVhZCBvZiBCUVxuICAgICAgICByZXR1cm4gdXRpbHMubG9nRXZlbnRUb1BsYXllciggdGFibGVOYW1lLCBwYXJhbXMgKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoICggZSApIHtcbiAgICAgIGNvbnNvbGUubG9nKCBcIndpZGdldC1jb21tb246IGxvZ2dlclwiLCBlICk7XG4gICAgfVxuXG4gICAgdGhyb3R0bGUgPSB0cnVlO1xuICAgIGxhc3RFdmVudCA9IHBhcmFtcy5ldmVudDtcblxuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgdGhyb3R0bGUgPSBmYWxzZTtcbiAgICB9LCB0aHJvdHRsZURlbGF5KTtcblxuICAgIGZ1bmN0aW9uIGluc2VydFdpdGhUb2tlbihyZWZyZXNoRGF0YSkge1xuICAgICAgdmFyIHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpLFxuICAgICAgICBpbnNlcnREYXRhLCB1cmw7XG5cbiAgICAgIHVybCA9IHNlcnZpY2VVcmwucmVwbGFjZShcIlRBQkxFX0lEXCIsIHRhYmxlTmFtZSk7XG4gICAgICByZWZyZXNoRGF0ZSA9IHJlZnJlc2hEYXRhLnJlZnJlc2hlZEF0IHx8IHJlZnJlc2hEYXRlO1xuICAgICAgdG9rZW4gPSByZWZyZXNoRGF0YS50b2tlbiB8fCB0b2tlbjtcbiAgICAgIGluc2VydERhdGEgPSB1dGlscy5nZXRJbnNlcnREYXRhKHBhcmFtcyk7XG5cbiAgICAgIC8vIEluc2VydCB0aGUgZGF0YS5cbiAgICAgIHhoci5vcGVuKFwiUE9TVFwiLCB1cmwsIHRydWUpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJDb250ZW50LVR5cGVcIiwgXCJhcHBsaWNhdGlvbi9qc29uXCIpO1xuICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoXCJBdXRob3JpemF0aW9uXCIsIFwiQmVhcmVyIFwiICsgdG9rZW4pO1xuXG4gICAgICBpZiAocGFyYW1zLmNiICYmIHR5cGVvZiBwYXJhbXMuY2IgPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICB4aHIub25sb2FkZW5kID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcGFyYW1zLmNiKHhoci5yZXNwb25zZSk7XG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIHhoci5zZW5kKEpTT04uc3RyaW5naWZ5KGluc2VydERhdGEpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVmcmVzaFRva2VuKGluc2VydFdpdGhUb2tlbik7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwibG9nXCI6IGxvZ1xuICB9O1xufSkoUmlzZVZpc2lvbi5Db21tb24uTG9nZ2VyVXRpbHMpO1xuXG4vKiBnbG9iYWwgZ2FkZ2V0cywgXywgJCAqL1xuXG52YXIgUmlzZVZpc2lvbiA9IFJpc2VWaXNpb24gfHwge307XG5cblJpc2VWaXNpb24uUlNTID0ge307XG5cblJpc2VWaXNpb24uUlNTID0gKCBmdW5jdGlvbiggZG9jdW1lbnQsIGdhZGdldHMgKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIHZhciBfYWRkaXRpb25hbFBhcmFtcyA9IG51bGwsXG4gICAgX3ByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBfbWVzc2FnZSA9IG51bGwsXG4gICAgX3Jpc2Vyc3MgPSBudWxsLFxuICAgIF9jb250ZW50ID0gbnVsbCxcbiAgICBfY3VycmVudEZlZWQgPSBudWxsLFxuICAgIF92aWV3ZXJQYXVzZWQgPSB0cnVlLFxuICAgIF9lcnJvclRpbWVyID0gbnVsbCxcbiAgICBfZXJyb3JMb2cgPSBudWxsLFxuICAgIF9lcnJvckZsYWcgPSBmYWxzZTtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfcmVhZHkoKSB7XG4gICAgZ2FkZ2V0cy5ycGMuY2FsbCggXCJcIiwgXCJyc2V2ZW50X3JlYWR5XCIsIG51bGwsIF9wcmVmcy5nZXRTdHJpbmcoIFwiaWRcIiApLCB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlLCB0cnVlICk7XG4gIH1cblxuICBmdW5jdGlvbiBfZG9uZSgpIHtcbiAgICBnYWRnZXRzLnJwYy5jYWxsKCBcIlwiLCBcInJzZXZlbnRfZG9uZVwiLCBudWxsLCBfcHJlZnMuZ2V0U3RyaW5nKCBcImlkXCIgKSApO1xuXG4gICAgLy8gQW55IGVycm9ycyBuZWVkIHRvIGJlIGxvZ2dlZCBiZWZvcmUgdGhlIGRvbmUgZXZlbnQuXG4gICAgaWYgKCBfZXJyb3JMb2cgIT09IG51bGwgKSB7XG4gICAgICBsb2dFdmVudCggX2Vycm9yTG9nLCB0cnVlICk7XG4gICAgfVxuXG4gICAgLy8gbG9nIFwiZG9uZVwiIGV2ZW50XG4gICAgbG9nRXZlbnQoIHsgXCJldmVudFwiOiBcImRvbmVcIiwgXCJmZWVkX3VybFwiOiBfYWRkaXRpb25hbFBhcmFtcy51cmwgfSwgZmFsc2UgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9ub0ZlZWRJdGVtcygpIHtcbiAgICB2YXIgcGFyYW1zID0ge1xuICAgICAgXCJldmVudFwiOiBcImVycm9yXCIsXG4gICAgICBcImV2ZW50X2RldGFpbHNcIjogXCJubyBmZWVkIGl0ZW1zXCIsXG4gICAgICBcImZlZWRfdXJsXCI6IF9hZGRpdGlvbmFsUGFyYW1zLnVybFxuICAgIH07XG5cbiAgICBsb2dFdmVudCggcGFyYW1zLCB0cnVlICk7XG4gICAgc2hvd0Vycm9yKCBcIlRoZXJlIGFyZSBubyBpdGVtcyB0byBzaG93IGZyb20gdGhpcyBSU1MgZmVlZC5cIiApO1xuICB9XG5cbiAgZnVuY3Rpb24gX2NsZWFyRXJyb3JUaW1lcigpIHtcbiAgICBjbGVhclRpbWVvdXQoIF9lcnJvclRpbWVyICk7XG4gICAgX2Vycm9yVGltZXIgPSBudWxsO1xuICB9XG5cbiAgZnVuY3Rpb24gX3N0YXJ0RXJyb3JUaW1lcigpIHtcbiAgICBfY2xlYXJFcnJvclRpbWVyKCk7XG5cbiAgICBfZXJyb3JUaW1lciA9IHNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuICAgICAgLy8gbm90aWZ5IFZpZXdlciB3aWRnZXQgaXMgZG9uZVxuICAgICAgX2RvbmUoKTtcbiAgICB9LCA1MDAwICk7XG4gIH1cblxuICAvKiBTaG93IG1lc3NhZ2UgdGhhdCB0aGUgZmVlZCBpcyBsb2FkaW5nLiAqL1xuICBmdW5jdGlvbiBfc2hvd0xvYWRpbmdNZXNzYWdlKCkge1xuICAgIF9tZXNzYWdlID0gbmV3IFJpc2VWaXNpb24uQ29tbW9uLk1lc3NhZ2UoIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcImNvbnRhaW5lclwiICksXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJtZXNzYWdlQ29udGFpbmVyXCIgKSApO1xuXG4gICAgX21lc3NhZ2Uuc2hvdyggXCJQbGVhc2Ugd2FpdCB3aGlsZSB5b3VyIGZlZWQgaXMgbG9hZGVkLlwiICk7XG4gIH1cblxuICAvKiBMb2FkIEdvb2dsZSBhbmQgY3VzdG9tIGZvbnRzLiAqL1xuICBmdW5jdGlvbiBfbG9hZEZvbnRzKCBjYiApIHtcbiAgICB2YXIgZm9udFNldHRpbmdzID0gW1xuICAgICAge1xuICAgICAgICBcImNsYXNzXCI6IFwic3RvcnlfZm9udC1zdHlsZVwiLFxuICAgICAgICBcImZvbnRTdHlsZVwiOiBfYWRkaXRpb25hbFBhcmFtcy5zdG9yeS5mb250U3R5bGVcbiAgICAgIH1cbiAgICBdO1xuXG4gICAgaWYgKCBfYWRkaXRpb25hbFBhcmFtcy5oZWFkbGluZSAmJiAhXy5pc0VtcHR5KCBfYWRkaXRpb25hbFBhcmFtcy5oZWFkbGluZS5mb250U3R5bGUgKSApIHtcbiAgICAgIGZvbnRTZXR0aW5ncy5wdXNoKCB7XG4gICAgICAgIFwiY2xhc3NcIjogXCJoZWFkbGluZV9mb250LXN0eWxlXCIsXG4gICAgICAgIFwiZm9udFN0eWxlXCI6IF9hZGRpdGlvbmFsUGFyYW1zLmhlYWRsaW5lLmZvbnRTdHlsZVxuICAgICAgfSApO1xuICAgIH1cblxuICAgIGlmICggX2FkZGl0aW9uYWxQYXJhbXMudGltZXN0YW1wICYmICFfLmlzRW1wdHkoIF9hZGRpdGlvbmFsUGFyYW1zLnRpbWVzdGFtcC5mb250U3R5bGUgKSApIHtcbiAgICAgIGZvbnRTZXR0aW5ncy5wdXNoKCB7XG4gICAgICAgIFwiY2xhc3NcIjogXCJ0aW1lc3RhbXBfZm9udC1zdHlsZVwiLFxuICAgICAgICBcImZvbnRTdHlsZVwiOiBfYWRkaXRpb25hbFBhcmFtcy50aW1lc3RhbXAuZm9udFN0eWxlXG4gICAgICB9ICk7XG4gICAgfVxuXG4gICAgaWYgKCBfYWRkaXRpb25hbFBhcmFtcy5hdXRob3IgJiYgIV8uaXNFbXB0eSggX2FkZGl0aW9uYWxQYXJhbXMuYXV0aG9yLmZvbnRTdHlsZSApICkge1xuICAgICAgZm9udFNldHRpbmdzLnB1c2goIHtcbiAgICAgICAgXCJjbGFzc1wiOiBcImF1dGhvcl9mb250LXN0eWxlXCIsXG4gICAgICAgIFwiZm9udFN0eWxlXCI6IF9hZGRpdGlvbmFsUGFyYW1zLmF1dGhvci5mb250U3R5bGVcbiAgICAgIH0gKTtcbiAgICB9XG5cbiAgICBpZiAoIGNiICYmICggdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIgKSApIHtcbiAgICAgIFJpc2VWaXNpb24uQ29tbW9uLlV0aWxpdGllcy5sb2FkRm9udHMoIGZvbnRTZXR0aW5ncywgY2IgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgUmlzZVZpc2lvbi5Db21tb24uVXRpbGl0aWVzLmxvYWRGb250cyggZm9udFNldHRpbmdzICk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX2luaXRSaXNlUlNTKCkge1xuICAgIF9yaXNlcnNzID0gbmV3IFJpc2VWaXNpb24uUlNTLlJpc2VSU1MoIF9hZGRpdGlvbmFsUGFyYW1zICk7XG4gICAgX3Jpc2Vyc3MuaW5pdCgpO1xuICB9XG5cbiAgLyogTG9hZCB0aGUgbGF5b3V0IGZpbGUuICovXG4gIGZ1bmN0aW9uIF9sb2FkTGF5b3V0KCkge1xuICAgIHZhciB1cmwgPSB3aW5kb3cubG9jYXRpb24ucGF0aG5hbWUsXG4gICAgICBpbmRleCA9IHVybC5sYXN0SW5kZXhPZiggXCIvXCIgKSArIDE7XG5cbiAgICB1cmwgPSB1cmwuc3Vic3RyKCAwLCBpbmRleCApICsgXCJsYXlvdXRzL1wiO1xuXG4gICAgaWYgKCB0eXBlb2YgX2FkZGl0aW9uYWxQYXJhbXMubGF5b3V0ID09PSBcInVuZGVmaW5lZFwiICkge1xuICAgICAgdXJsICs9IFwibGF5b3V0LTR4MS5odG1sXCI7XG4gICAgfSBlbHNlIGlmICggX2FkZGl0aW9uYWxQYXJhbXMubGF5b3V0ID09PSBcImN1c3RvbVwiICkge1xuICAgICAgdXJsID0gX2FkZGl0aW9uYWxQYXJhbXMubGF5b3V0VXJsO1xuICAgIH0gZWxzZSB7XG4gICAgICB1cmwgKz0gX2FkZGl0aW9uYWxQYXJhbXMubGF5b3V0ICsgXCIuaHRtbFwiO1xuICAgIH1cblxuICAgIC8vIExvYWQgdGhlIGxheW91dCBhbmQgYWRkIGl0IHRvIHRoZSBET00uXG4gICAgJC5nZXQoIHVybCApXG4gICAgICAuZG9uZSggZnVuY3Rpb24oIGRhdGEgKSB7XG4gICAgICAgIF9vbkxheW91dExvYWRlZCggZGF0YSApO1xuICAgICAgfSApXG4gICAgICAuZmFpbCggZnVuY3Rpb24oKSB7XG4gICAgICAgIF9vbkxheW91dE5vdExvYWRlZCggdXJsICk7XG4gICAgICB9ICk7XG4gIH1cblxuICAvKiBMYXlvdXQgZmlsZSB3YXMgbG9hZGVkIHN1Y2Nlc3NmdWxseS4gKi9cbiAgZnVuY3Rpb24gX29uTGF5b3V0TG9hZGVkKCBkYXRhICkge1xuICAgICQoIFwiI2NvbnRhaW5lclwiICkuYXBwZW5kKCBkYXRhICk7XG4gICAgX3Nob3dMb2FkaW5nTWVzc2FnZSgpO1xuICAgIF9sb2FkRm9udHMoKTtcbiAgICBfaW5pdFJpc2VSU1MoKTtcbiAgICBfcmVhZHkoKTtcbiAgfVxuXG4gIC8qIExheW91dCBmaWxlIGZhaWxlZCB0byBsb2FkLiAqL1xuICBmdW5jdGlvbiBfb25MYXlvdXROb3RMb2FkZWQoIHVybCApIHtcbiAgICBfbWVzc2FnZSA9IG5ldyBSaXNlVmlzaW9uLkNvbW1vbi5NZXNzYWdlKCBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJjb250YWluZXJcIiApLFxuICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwibWVzc2FnZUNvbnRhaW5lclwiICkgKTtcblxuICAgIF9tZXNzYWdlLnNob3coIFwiVGhlIGxheW91dCBmaWxlIGNvdWxkIG5vdCBiZSBsb2FkZWQuXCIgKTtcblxuICAgIGxvZ0V2ZW50KCB7XG4gICAgICBcImV2ZW50XCI6IFwiZXJyb3JcIixcbiAgICAgIFwiZXZlbnRfZGV0YWlsc1wiOiBcImxheW91dCBub3QgbG9hZGVkXCIsXG4gICAgICBcImVycm9yX2RldGFpbHNcIjogdXJsLFxuICAgICAgXCJmZWVkX3VybFwiOiBfYWRkaXRpb25hbFBhcmFtcy51cmxcbiAgICB9LCB0cnVlICk7XG5cbiAgICBfcmVhZHkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9pc0hvcml6b250YWxTY3JvbGwoKSB7XG4gICAgaWYgKCAhX2FkZGl0aW9uYWxQYXJhbXMudHJhbnNpdGlvbiApIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9IGVsc2UgaWYgKCAoIF9hZGRpdGlvbmFsUGFyYW1zLnRyYW5zaXRpb24udHlwZSA9PT0gXCJzY3JvbGxcIiApICYmICggX2FkZGl0aW9uYWxQYXJhbXMudHJhbnNpdGlvbi5kaXJlY3Rpb24gPT09IFwibGVmdFwiICkgKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9pbml0SG9yaXpvbnRhbFNjcm9sbCgpIHtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggXCJzY3JvbGxlclwiICkuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcblxuICAgIF9zaG93TG9hZGluZ01lc3NhZ2UoKTtcblxuICAgIF9sb2FkRm9udHMoIGZ1bmN0aW9uKCkge1xuICAgICAgX2luaXRSaXNlUlNTKCk7XG4gICAgICBfcmVhZHkoKTtcbiAgICB9ICk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGdldFRhYmxlTmFtZSgpIHtcbiAgICByZXR1cm4gXCJyc3NfZXZlbnRzXCI7XG4gIH1cblxuICBmdW5jdGlvbiBsb2dFdmVudCggcGFyYW1zLCBpc0Vycm9yICkge1xuICAgIGlmICggaXNFcnJvciApIHtcbiAgICAgIF9lcnJvckxvZyA9IHBhcmFtcztcbiAgICB9XG5cbiAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscy5sb2dFdmVudCggZ2V0VGFibGVOYW1lKCksIHBhcmFtcyApO1xuICB9XG5cbiAgZnVuY3Rpb24gb25Db250ZW50RG9uZSgpIHtcbiAgICBfZG9uZSgpO1xuICB9XG5cbiAgZnVuY3Rpb24gb25SaXNlUlNTSW5pdCggZmVlZCApIHtcbiAgICBfY29udGVudCA9IG5ldyBSaXNlVmlzaW9uLlJTUy5Db250ZW50KCBfcHJlZnMsIF9hZGRpdGlvbmFsUGFyYW1zICk7XG5cbiAgICBpZiAoIGZlZWQuaXRlbXMgJiYgZmVlZC5pdGVtcy5sZW5ndGggPiAwICkge1xuICAgICAgLy8gcmVtb3ZlIGEgbWVzc2FnZSBwcmV2aW91c2x5IHNob3duXG4gICAgICBfbWVzc2FnZS5oaWRlKCk7XG5cbiAgICAgIF9jdXJyZW50RmVlZCA9IF8uY2xvbmUoIGZlZWQgKTtcblxuICAgICAgX2NvbnRlbnQuaW5pdCggX2N1cnJlbnRGZWVkICk7XG5cbiAgICAgIGlmICggIV92aWV3ZXJQYXVzZWQgKSB7XG4gICAgICAgIF9jb250ZW50LnBsYXkoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgX25vRmVlZEl0ZW1zKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gb25SaXNlUlNTUmVmcmVzaCggZmVlZCApIHtcbiAgICB2YXIgdXBkYXRlZCA9IGZhbHNlLFxuICAgICAgaTtcblxuICAgIGlmICggIWZlZWQuaXRlbXMgfHwgZmVlZC5pdGVtcy5sZW5ndGggPT09IDAgKSB7XG4gICAgICBfbm9GZWVkSXRlbXMoKTtcbiAgICB9IGVsc2UgaWYgKCAhX2N1cnJlbnRGZWVkIHx8IGZlZWQuaXRlbXMubGVuZ3RoICE9PSBfY3VycmVudEZlZWQuaXRlbXMubGVuZ3RoICkge1xuICAgICAgdXBkYXRlZCA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIHJ1biB0aHJvdWdoIGVhY2ggaXRlbSBhbmQgY29tcGFyZSwgaWYgYW55IGFyZSBkaWZmZXJlbnQsIGZlZWQgaGFzIGJlZW4gdXBkYXRlZFxuICAgICAgZm9yICggaSA9IDA7IGkgPCBfY3VycmVudEZlZWQuaXRlbXMubGVuZ3RoOyBpICs9IDEgKSB7XG4gICAgICAgIGlmICggIV8uaXNFcXVhbCggZmVlZC5pdGVtc1sgaSBdLCBfY3VycmVudEZlZWQuaXRlbXNbIGkgXSApICkge1xuICAgICAgICAgIHVwZGF0ZWQgPSB0cnVlO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCB1cGRhdGVkICkge1xuICAgICAgX2N1cnJlbnRGZWVkID0gXy5jbG9uZSggZmVlZCApO1xuXG4gICAgICBpZiAoIF9lcnJvckZsYWcgKSB7XG4gICAgICAgIGlmICggIV9jb250ZW50ICkge1xuICAgICAgICAgIC8vIGNyZWF0ZSBjb250ZW50IG1vZHVsZSBpbnN0YW5jZVxuICAgICAgICAgIF9jb250ZW50ID0gbmV3IFJpc2VWaXNpb24uUlNTLkNvbnRlbnQoIF9wcmVmcywgX2FkZGl0aW9uYWxQYXJhbXMgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9tZXNzYWdlLmhpZGUoKTtcbiAgICAgICAgX2NvbnRlbnQuaW5pdCggX2N1cnJlbnRGZWVkICk7XG5cbiAgICAgICAgLy8gcmVmcmVzaGVkIGZlZWQgZml4ZWQgcHJldmlvdXMgZXJyb3IsIGVuc3VyZSBmbGFnIGlzIHJlbW92ZWQgc28gbmV4dCBwbGF5YmFjayBzaG93cyBjb250ZW50XG4gICAgICAgIF9lcnJvckZsYWcgPSBmYWxzZTtcbiAgICAgICAgX2Vycm9yTG9nID0gbnVsbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIF9jb250ZW50LnVwZGF0ZSggZmVlZCApO1xuICAgICAgfVxuXG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgX3ZpZXdlclBhdXNlZCA9IHRydWU7XG5cbiAgICBpZiAoIF9lcnJvckZsYWcgKSB7XG4gICAgICBfY2xlYXJFcnJvclRpbWVyKCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgaWYgKCBfY29udGVudCApIHtcbiAgICAgIF9jb250ZW50LnBhdXNlKCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcGxheSgpIHtcbiAgICBfdmlld2VyUGF1c2VkID0gZmFsc2U7XG5cbiAgICBsb2dFdmVudCggeyBcImV2ZW50XCI6IFwicGxheVwiLCBcImZlZWRfdXJsXCI6IF9hZGRpdGlvbmFsUGFyYW1zLnVybCB9LCBmYWxzZSApO1xuXG4gICAgaWYgKCBfZXJyb3JGbGFnICkge1xuICAgICAgX3N0YXJ0RXJyb3JUaW1lcigpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGlmICggX2NvbnRlbnQgKSB7XG4gICAgICBfY29udGVudC5wbGF5KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc2V0QWRkaXRpb25hbFBhcmFtcyggYWRkaXRpb25hbFBhcmFtcyApIHtcbiAgICBfYWRkaXRpb25hbFBhcmFtcyA9IEpTT04ucGFyc2UoIEpTT04uc3RyaW5naWZ5KCBhZGRpdGlvbmFsUGFyYW1zICkgKTtcbiAgICBfcHJlZnMgPSBuZXcgZ2FkZ2V0cy5QcmVmcygpO1xuXG4gICAgX2FkZGl0aW9uYWxQYXJhbXMud2lkdGggPSBfcHJlZnMuZ2V0SW50KCBcInJzV1wiICk7XG4gICAgX2FkZGl0aW9uYWxQYXJhbXMuaGVpZ2h0ID0gX3ByZWZzLmdldEludCggXCJyc0hcIiApO1xuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIFwiY29udGFpbmVyXCIgKS5zdHlsZS53aWR0aCA9IF9hZGRpdGlvbmFsUGFyYW1zLndpZHRoICsgXCJweFwiO1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcImNvbnRhaW5lclwiICkuc3R5bGUuaGVpZ2h0ID0gX2FkZGl0aW9uYWxQYXJhbXMuaGVpZ2h0ICsgXCJweFwiO1xuXG4gICAgaWYgKCBfaXNIb3Jpem9udGFsU2Nyb2xsKCkgKSB7XG4gICAgICBfaW5pdEhvcml6b250YWxTY3JvbGwoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX2xvYWRMYXlvdXQoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzaG93RXJyb3IoIG1lc3NhZ2UgKSB7XG4gICAgX2Vycm9yRmxhZyA9IHRydWU7XG5cbiAgICBpZiAoICFfY29udGVudCApIHtcbiAgICAgIF9jb250ZW50ID0gbmV3IFJpc2VWaXNpb24uUlNTLkNvbnRlbnQoIF9wcmVmcywgX2FkZGl0aW9uYWxQYXJhbXMgKTtcbiAgICB9XG5cbiAgICBfY29udGVudC5yZXNldCgpO1xuICAgIF9jdXJyZW50RmVlZCA9IG51bGw7XG4gICAgX21lc3NhZ2Uuc2hvdyggbWVzc2FnZSApO1xuXG4gICAgaWYgKCAhX3ZpZXdlclBhdXNlZCApIHtcbiAgICAgIF9zdGFydEVycm9yVGltZXIoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHBhdXNlKCk7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIFwiZ2V0VGFibGVOYW1lXCI6IGdldFRhYmxlTmFtZSxcbiAgICBcImxvZ0V2ZW50XCI6IGxvZ0V2ZW50LFxuICAgIFwib25Db250ZW50RG9uZVwiOiBvbkNvbnRlbnREb25lLFxuICAgIFwib25SaXNlUlNTSW5pdFwiOiBvblJpc2VSU1NJbml0LFxuICAgIFwib25SaXNlUlNTUmVmcmVzaFwiOiBvblJpc2VSU1NSZWZyZXNoLFxuICAgIFwicGF1c2VcIjogcGF1c2UsXG4gICAgXCJwbGF5XCI6IHBsYXksXG4gICAgXCJzZXRBZGRpdGlvbmFsUGFyYW1zXCI6IHNldEFkZGl0aW9uYWxQYXJhbXMsXG4gICAgXCJzaG93RXJyb3JcIjogc2hvd0Vycm9yLFxuICAgIFwic3RvcFwiOiBzdG9wXG4gIH07XG5cbn0gKSggZG9jdW1lbnQsIGdhZGdldHMgKTtcblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUyA9IFJpc2VWaXNpb24uUlNTIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUy5VdGlscyA9ICggZnVuY3Rpb24oKSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIC8qXG4gICAqICBQdWJsaWMgIE1ldGhvZHNcbiAgICovXG5cbiAgZnVuY3Rpb24gc3RyaXBTY3JpcHRzKCBodG1sICkge1xuICAgIHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICksXG4gICAgICBzY3JpcHRzLFxuICAgICAgaTtcblxuICAgIGRpdi5pbm5lckhUTUwgPSBodG1sO1xuICAgIHNjcmlwdHMgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwic2NyaXB0XCIgKTtcbiAgICBpID0gc2NyaXB0cy5sZW5ndGg7XG5cbiAgICB3aGlsZSAoIGktLSApIHtcbiAgICAgIHNjcmlwdHNbIGkgXS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCBzY3JpcHRzWyBpIF0gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGl2LmlubmVySFRNTDtcbiAgfVxuXG4gIC8qIFRydW5jYXRlIHRleHQgd2hpbGUgcHJlc2VydmluZyB3b3JkIGJvdW5kYXJpZXMuICovXG4gIGZ1bmN0aW9uIHRydW5jYXRlKCB0ZXh0LCBsZW5ndGggKSB7XG4gICAgdmFyIG1heExlbmd0aCA9ICggbGVuZ3RoICkgPyBsZW5ndGggOiAxMjA7XG5cbiAgICBpZiAoIHRleHQubGVuZ3RoID4gbWF4TGVuZ3RoICkge1xuICAgICAgdGV4dCA9IHRleHQuc3Vic3RyaW5nKCAwLCBtYXhMZW5ndGggKTtcblxuICAgICAgLy8gRW5zdXJlIHRoYXQgd2UgZG9uJ3QgdHJ1bmNhdGUgbWlkLXdvcmQuXG4gICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKCAvXFx3KyQvLCBcIlwiICk7XG4gICAgICB0ZXh0ICs9IFwiIC4uLlwiO1xuICAgIH1cblxuICAgIHJldHVybiB0ZXh0O1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBcInN0cmlwU2NyaXB0c1wiOiBzdHJpcFNjcmlwdHMsXG4gICAgXCJ0cnVuY2F0ZVwiOiB0cnVuY2F0ZVxuICB9O1xuXG59ICkoKTtcblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUyA9IFJpc2VWaXNpb24uUlNTIHx8IHt9O1xuUmlzZVZpc2lvbi5SU1MuSW1hZ2VzID0ge307XG5cblJpc2VWaXNpb24uUlNTLkltYWdlcyA9ICggZnVuY3Rpb24oKSB7XG5cbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9pbWFnZXNUb0xvYWQgPSBbXSxcbiAgICBfaW1hZ2VDb3VudCA9IDAsXG4gICAgX2ltYWdlcyA9IFtdLFxuICAgIF9jYWxsYmFjayA9IG51bGw7XG5cbiAgZnVuY3Rpb24gX29uSW1hZ2VMb2FkZWQoIGltYWdlICkge1xuICAgIF9pbWFnZXMucHVzaCggaW1hZ2UgKTtcbiAgICBfaW1hZ2VDb3VudCArPSAxO1xuXG4gICAgaWYgKCBfaW1hZ2VDb3VudCA9PT0gX2ltYWdlc1RvTG9hZC5sZW5ndGggJiYgX2NhbGxiYWNrICYmIHR5cGVvZiBfY2FsbGJhY2sgPT09IFwiZnVuY3Rpb25cIiApIHtcbiAgICAgIF9jYWxsYmFjaygpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9sb2FkSW1hZ2UoIHVybCApIHtcbiAgICB2YXIgaW1nID0gbmV3IEltYWdlKCk7XG5cbiAgICBpbWcub25sb2FkID0gZnVuY3Rpb24oKSB7XG4gICAgICBfb25JbWFnZUxvYWRlZCggdGhpcyApO1xuICAgIH07XG5cbiAgICBpbWcub25lcnJvciA9IGZ1bmN0aW9uKCkge1xuICAgICAgX29uSW1hZ2VMb2FkZWQoIHRoaXMgKTtcbiAgICB9O1xuXG4gICAgaW1nLnNyYyA9IHVybDtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9sb2FkSW1hZ2VzKCkge1xuICAgIHZhciBpO1xuXG4gICAgZm9yICggaSA9IDA7IGkgPCBfaW1hZ2VzVG9Mb2FkLmxlbmd0aDsgaSArPSAxICkge1xuICAgICAgaWYgKCBfaW1hZ2VzVG9Mb2FkWyBpIF0gPT09IG51bGwgKSB7XG4gICAgICAgIF9vbkltYWdlTG9hZGVkKCBudWxsICk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBfbG9hZEltYWdlKCBfaW1hZ2VzVG9Mb2FkWyBpIF0gKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBsb2FkKCBpbWFnZXMsIGNhbGxiYWNrICkge1xuICAgIGlmICggaW1hZ2VzLmxlbmd0aCA+IDAgKSB7XG4gICAgICBfaW1hZ2VzVG9Mb2FkID0gaW1hZ2VzO1xuICAgICAgX2ltYWdlcyA9IFtdO1xuICAgICAgX2ltYWdlQ291bnQgPSAwO1xuXG4gICAgICBpZiAoIGNhbGxiYWNrICkge1xuICAgICAgICBfY2FsbGJhY2sgPSBjYWxsYmFjaztcbiAgICAgIH1cblxuICAgICAgX2xvYWRJbWFnZXMoKTtcblxuICAgIH0gZWxzZSBpZiAoIGNhbGxiYWNrICYmIHR5cGVvZiBjYWxsYmFjayA9PT0gXCJmdW5jdGlvblwiICkge1xuICAgICAgY2FsbGJhY2soKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRJbWFnZXMoKSB7XG4gICAgcmV0dXJuIF9pbWFnZXM7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGdldEltYWdlczogZ2V0SW1hZ2VzLFxuICAgIGxvYWQ6IGxvYWRcbiAgfTtcblxufSApKCk7XG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MgPSBSaXNlVmlzaW9uLlJTUyB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MuUmlzZVJTUyA9IGZ1bmN0aW9uKCBkYXRhICkge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX2luaXRpYWxMb2FkID0gdHJ1ZTtcblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoKSB7XG4gICAgdmFyIHJzcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIFwicmlzZS1yc3NcIiApO1xuXG4gICAgcnNzLmFkZEV2ZW50TGlzdGVuZXIoIFwicmlzZS1yc3MtcmVzcG9uc2VcIiwgZnVuY3Rpb24oIGUgKSB7XG4gICAgICBpZiAoIGUuZGV0YWlsICYmIGUuZGV0YWlsLmZlZWQgKSB7XG4gICAgICAgIGlmICggX2luaXRpYWxMb2FkICkge1xuICAgICAgICAgIF9pbml0aWFsTG9hZCA9IGZhbHNlO1xuXG4gICAgICAgICAgUmlzZVZpc2lvbi5SU1Mub25SaXNlUlNTSW5pdCggZS5kZXRhaWwuZmVlZCApO1xuXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgUmlzZVZpc2lvbi5SU1Mub25SaXNlUlNTUmVmcmVzaCggZS5kZXRhaWwuZmVlZCApO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSApO1xuXG4gICAgcnNzLmFkZEV2ZW50TGlzdGVuZXIoIFwicmlzZS1yc3MtZXJyb3JcIiwgZnVuY3Rpb24oIGUgKSB7XG4gICAgICB2YXIgZXJyb3JEZXRhaWxzID0gXCJcIixcbiAgICAgICAgcGFyYW1zID0ge1xuICAgICAgICAgIFwiZXZlbnRcIjogXCJlcnJvclwiLFxuICAgICAgICAgIFwiZmVlZF91cmxcIjogZGF0YS51cmxcbiAgICAgICAgfTtcblxuICAgICAgaWYgKCBlLmRldGFpbCAmJiB0eXBlb2YgZS5kZXRhaWwgPT09IFwic3RyaW5nXCIgKSB7XG4gICAgICAgIGVycm9yRGV0YWlscyA9IGUuZGV0YWlsO1xuICAgICAgfSBlbHNlIGlmICggZS5kZXRhaWwgJiYgQXJyYXkuaXNBcnJheSggZS5kZXRhaWwgKSAmJiBlLmRldGFpbC5sZW5ndGggPiAwICkge1xuICAgICAgICAvLyByaXNlLXJzcy1lcnJvciBwYXNzZXMgZXJyb3IgZnJvbSBnYWRnZXRzLmlvLm1ha2VSZXF1ZXN0IHdoaWNoIGlzIGFsd2F5cyBhbiBBcnJheSB3aXRoIG9uZSBpdGVtXG4gICAgICAgIGVycm9yRGV0YWlscyA9IGUuZGV0YWlsWyAwIF07XG4gICAgICB9XG5cbiAgICAgIHBhcmFtcy5lcnJvcl9kZXRhaWxzID0gZXJyb3JEZXRhaWxzO1xuICAgICAgcGFyYW1zLmV2ZW50X2RldGFpbHMgPSBcInJpc2UgcnNzIGVycm9yXCI7XG5cbiAgICAgIGlmICggZXJyb3JEZXRhaWxzLnRvTG93ZXJDYXNlKCkgPT09IFwiNDAxIHVuYXV0aG9yaXplZFwiICkge1xuICAgICAgICBwYXJhbXMuZXZlbnRfZGV0YWlscyA9IFwiZmVlZCBhdXRoZW50aWNhdGlvbiBlcnJvclwiO1xuICAgICAgICBSaXNlVmlzaW9uLlJTUy5zaG93RXJyb3IoIFwiVGhlIGZlZWQgYXQgdGhlIFVSTCBwcm92aWRlZCBjYW5ub3QgYmUgc2hvd24gYmVjYXVzZSBpdCBpcyBcIiArXG4gICAgICAgICAgXCJwcm90ZWN0ZWQgYW5kIHJlcXVpcmVzIGF1dGhlbnRpY2F0aW9uLlwiICk7XG4gICAgICB9IGVsc2UgaWYgKCBlcnJvckRldGFpbHMudG9Mb3dlckNhc2UoKSA9PT0gXCI0MDQgbm90IGZvdW5kXCIgKSB7XG4gICAgICAgIHBhcmFtcy5ldmVudF9kZXRhaWxzID0gXCJmZWVkIG5vdCBmb3VuZFwiO1xuICAgICAgICBSaXNlVmlzaW9uLlJTUy5zaG93RXJyb3IoIFwiVGhlIGZlZWQgVVJMIDxzcGFuIGNsYXNzPSdlcnJvci1saW5rJz5cIiArIGRhdGEudXJsICsgXCI8L3NwYW4+IGNvdWxkIG5vdCBiZSBmb3VuZC5cIiApO1xuICAgICAgfSBlbHNlIGlmICggZXJyb3JEZXRhaWxzLnRvTG93ZXJDYXNlKCkgPT09IFwibm90IGEgZmVlZFwiICkge1xuICAgICAgICBSaXNlVmlzaW9uLlJTUy5zaG93RXJyb3IoIFwiVGhlIFVSTCBwcm92aWRlZCBpcyBub3QgYW4gUlNTIGZlZWQuXCIgKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIFJpc2VWaXNpb24uUlNTLnNob3dFcnJvciggXCJTb3JyeSwgdGhlcmUgd2FzIGEgcHJvYmxlbSB3aXRoIHRoZSBSU1MgZmVlZC5cIiApO1xuICAgICAgfVxuXG4gICAgICBSaXNlVmlzaW9uLlJTUy5sb2dFdmVudCggcGFyYW1zLCB0cnVlICk7XG4gICAgfSApO1xuXG4gICAgcnNzLnNldEF0dHJpYnV0ZSggXCJ1cmxcIiwgZGF0YS51cmwgKTtcblxuICAgIGlmICggZGF0YS5pdGVtc0luUXVldWUgKSB7XG4gICAgICByc3Muc2V0QXR0cmlidXRlKCBcImVudHJpZXNcIiwgZGF0YS5pdGVtc0luUXVldWUgKTtcbiAgICB9XG5cbiAgICByc3MuZ28oKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgXCJpbml0XCI6IGluaXRcbiAgfTtcbn07XG5cbi8qIGdsb2JhbCAkICovXG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MgPSBSaXNlVmlzaW9uLlJTUyB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MuVHJhbnNpdGlvbk5vU2Nyb2xsID0gZnVuY3Rpb24oIHBhcmFtcywgY29udGVudCApIHtcblxuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX2l0ZW1zID0gW10sXG4gICAgX2N1cnJlbnRJdGVtSW5kZXggPSAwLFxuICAgIF90cmFuc2l0aW9uSW50ZXJ2YWxJZCA9IG51bGwsXG4gICAgX3dhaXRpbmdGb3JVcGRhdGUgPSBmYWxzZSxcbiAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfZ2V0VHJhbnNpdGlvbkNvbmZpZyggaW5kZXggKSB7XG4gICAgdmFyIGNvbmZpZyA9IHt9O1xuXG4gICAgaWYgKCAoIGluZGV4ICsgcGFyYW1zLml0ZW1zVG9TaG93ICkgPj0gKCBfaXRlbXMubGVuZ3RoIC0gMSApICkge1xuICAgICAgLy8gYWNjb3VudCBmb3Igbm90IGVub3VnaCBpdGVtcyB0byBhY3R1YWxseSBzaG93IGZyb20gdGhlIGZlZWRcbiAgICAgIGNvbmZpZy5pdGVtc1RvU2hvdyA9IF9pdGVtcy5sZW5ndGggLSAoIGluZGV4ICsgMSApO1xuICAgICAgY29uZmlnLmN1cnJlbnRJdGVtSW5kZXggPSAoIF9pdGVtcy5sZW5ndGggLSAxICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbmZpZy5pdGVtc1RvU2hvdyA9IHBhcmFtcy5pdGVtc1RvU2hvdztcbiAgICAgIC8vIHZhbHVlIGlzIHRoZSBpbmRleCBvZiB0aGUgbGFzdCBpdGVtIHNob3dpbmdcbiAgICAgIGNvbmZpZy5jdXJyZW50SXRlbUluZGV4ID0gaW5kZXggKyBwYXJhbXMuaXRlbXNUb1Nob3c7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNvbmZpZztcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRTdGFydENvbmZpZygpIHtcbiAgICB2YXIgY29uZmlnID0ge307XG5cbiAgICBpZiAoIF9pdGVtcy5sZW5ndGggPD0gcGFyYW1zLml0ZW1zVG9TaG93ICkge1xuICAgICAgLy8gYWNjb3VudCBmb3Igbm90IGVub3VnaCBpdGVtcyB0byBhY3R1YWxseSBzaG93IGZyb20gdGhlIGZlZWRcbiAgICAgIGNvbmZpZy5pdGVtc1RvU2hvdyA9IF9pdGVtcy5sZW5ndGg7XG4gICAgICBjb25maWcuY3VycmVudEl0ZW1JbmRleCA9ICggX2l0ZW1zLmxlbmd0aCAtIDEgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uZmlnLml0ZW1zVG9TaG93ID0gcGFyYW1zLml0ZW1zVG9TaG93O1xuICAgICAgLy8gdmFsdWUgaXMgdGhlIGluZGV4IG9mIHRoZSBsYXN0IGl0ZW0gc2hvd2luZ1xuICAgICAgY29uZmlnLmN1cnJlbnRJdGVtSW5kZXggPSAoIHBhcmFtcy5pdGVtc1RvU2hvdyAtIDEgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29uZmlnO1xuICB9XG5cbiAgZnVuY3Rpb24gX2NsZWFyUGFnZSggY2IgKSB7XG4gICAgJCggXCIucGFnZVwiICkuZW1wdHkoKTtcblxuICAgIGlmICggIWNiIHx8IHR5cGVvZiBjYiAhPT0gXCJmdW5jdGlvblwiICkge1xuICAgICAgcmV0dXJuO1xuICAgIH0gZWxzZSB7XG4gICAgICBjYigpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9jbGVhciggY2IgKSB7XG4gICAgaWYgKCBwYXJhbXMudHJhbnNpdGlvbi50eXBlID09PSBcImZhZGVcIiApIHtcbiAgICAgICQoIFwiLml0ZW1cIiApLm9uZSggXCJ3ZWJraXRUcmFuc2l0aW9uRW5kIHRyYW5zaXRpb25lbmRcIiwgZnVuY3Rpb24oKSB7XG4gICAgICAgIF9jbGVhclBhZ2UoIGNiICk7XG4gICAgICB9ICk7XG5cbiAgICAgICQoIFwiLml0ZW1cIiApLmFkZENsYXNzKCBcImZhZGUtb3V0XCIgKS5yZW1vdmVDbGFzcyggXCJmYWRlLWluXCIgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgX2NsZWFyUGFnZSggY2IgKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfc2hvdyggaW5kZXggKSB7XG4gICAgY29udGVudC5zaG93SXRlbSggaW5kZXggKTtcblxuICAgIGlmICggcGFyYW1zLnRyYW5zaXRpb24udHlwZSA9PT0gXCJmYWRlXCIgKSB7XG4gICAgICAkKCBcIi5pdGVtXCIgKS5hZGRDbGFzcyggXCJmYWRlLWluXCIgKTtcbiAgICB9XG5cbiAgICAkKCBcIi5pdGVtXCIgKS5yZW1vdmVDbGFzcyggXCJoaWRlXCIgKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9tYWtlVHJhbnNpdGlvbigpIHtcbiAgICB2YXIgc3RhcnRDb25maWcgPSBfZ2V0U3RhcnRDb25maWcoKSxcbiAgICAgIHRyYW5zQ29uZmlnID0gX2dldFRyYW5zaXRpb25Db25maWcoIF9jdXJyZW50SXRlbUluZGV4ICksXG4gICAgICBzdGFydGluZ0luZGV4LFxuICAgICAgaTtcblxuICAgIGlmICggX2N1cnJlbnRJdGVtSW5kZXggPT09ICggX2l0ZW1zLmxlbmd0aCAtIDEgKSApIHtcblxuICAgICAgX3N0b3BUcmFuc2l0aW9uVGltZXIoKTtcblxuICAgICAgX2NsZWFyKCBmdW5jdGlvbigpIHtcblxuICAgICAgICAvLyBzaG93IHRoZSBpdGVtc1xuICAgICAgICBmb3IgKCBpID0gMDsgaSA8IHN0YXJ0Q29uZmlnLml0ZW1zVG9TaG93OyBpICs9IDEgKSB7XG4gICAgICAgICAgX3Nob3coIGkgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIF9jdXJyZW50SXRlbUluZGV4ID0gc3RhcnRDb25maWcuY3VycmVudEl0ZW1JbmRleDtcblxuICAgICAgICBSaXNlVmlzaW9uLlJTUy5vbkNvbnRlbnREb25lKCk7XG4gICAgICB9ICk7XG5cbiAgICAgIF93YWl0aW5nRm9yVXBkYXRlID0gZmFsc2U7XG5cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIF93YWl0aW5nRm9yVXBkYXRlICkge1xuICAgICAgX3dhaXRpbmdGb3JVcGRhdGUgPSBmYWxzZTtcblxuICAgICAgY29udGVudC5sb2FkSW1hZ2VzKCBmdW5jdGlvbigpIHtcbiAgICAgICAgX2NsZWFyKCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBmb3IgKCBpID0gMDsgaSA8IHN0YXJ0Q29uZmlnLml0ZW1zVG9TaG93OyBpICs9IDEgKSB7XG4gICAgICAgICAgICBfc2hvdyggaSApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9jdXJyZW50SXRlbUluZGV4ID0gc3RhcnRDb25maWcuY3VycmVudEl0ZW1JbmRleDtcbiAgICAgICAgfSApO1xuICAgICAgfSApO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIHN0YXJ0aW5nSW5kZXggPSBfY3VycmVudEl0ZW1JbmRleCArIDE7XG5cbiAgICAgIF9jdXJyZW50SXRlbUluZGV4ID0gdHJhbnNDb25maWcuY3VycmVudEl0ZW1JbmRleDtcblxuICAgICAgX2NsZWFyKCBmdW5jdGlvbigpIHtcbiAgICAgICAgZm9yICggaSA9IHN0YXJ0aW5nSW5kZXg7IGkgPCAoIHN0YXJ0aW5nSW5kZXggKyB0cmFuc0NvbmZpZy5pdGVtc1RvU2hvdyApOyBpICs9IDEgKSB7XG4gICAgICAgICAgX3Nob3coIGkgKTtcbiAgICAgICAgfVxuICAgICAgfSApO1xuICAgIH1cblxuICB9XG5cbiAgZnVuY3Rpb24gX3N0YXJ0VHJhbnNpdGlvblRpbWVyKCkge1xuICAgIC8vIGxlZ2FjeSwgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgZm9yIGR1cmF0aW9uIHZhbHVlXG4gICAgdmFyIGR1cmF0aW9uID0gKCBwYXJhbXMudHJhbnNpdGlvbi5kdXJhdGlvbiAvIDEwMDAgPj0gMSApID8gcGFyYW1zLnRyYW5zaXRpb24uZHVyYXRpb24gOiBwYXJhbXMudHJhbnNpdGlvbi5kdXJhdGlvbiAqIDEwMDA7XG5cbiAgICBpZiAoIF90cmFuc2l0aW9uSW50ZXJ2YWxJZCA9PT0gbnVsbCApIHtcbiAgICAgIF90cmFuc2l0aW9uSW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCBmdW5jdGlvbigpIHtcbiAgICAgICAgX21ha2VUcmFuc2l0aW9uKCk7XG4gICAgICB9LCBkdXJhdGlvbiApO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9zdG9wVHJhbnNpdGlvblRpbWVyKCkge1xuICAgIGNsZWFySW50ZXJ2YWwoIF90cmFuc2l0aW9uSW50ZXJ2YWxJZCApO1xuICAgIF90cmFuc2l0aW9uSW50ZXJ2YWxJZCA9IG51bGw7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoIGl0ZW1zICkge1xuICAgIHZhciBzdGFydENvbmZpZyxcbiAgICAgIGk7XG5cbiAgICBfaXRlbXMgPSBpdGVtcztcbiAgICBzdGFydENvbmZpZyA9IF9nZXRTdGFydENvbmZpZygpO1xuXG4gICAgX2N1cnJlbnRJdGVtSW5kZXggPSBzdGFydENvbmZpZy5jdXJyZW50SXRlbUluZGV4O1xuXG4gICAgLy8gc2hvdyB0aGUgaXRlbXNcbiAgICBmb3IgKCBpID0gMDsgaSA8IHN0YXJ0Q29uZmlnLml0ZW1zVG9TaG93OyBpICs9IDEgKSB7XG4gICAgICBfc2hvdyggaSApO1xuICAgIH1cblxuICAgIGlmICggX3dhaXRpbmdUb1N0YXJ0ICkge1xuICAgICAgX3dhaXRpbmdUb1N0YXJ0ID0gZmFsc2U7XG4gICAgICBzdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIF9jbGVhcigpO1xuICAgIF93YWl0aW5nVG9TdGFydCA9IGZhbHNlO1xuICAgIF93YWl0aW5nRm9yVXBkYXRlID0gZmFsc2U7XG4gICAgX2l0ZW1zID0gW107XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydCgpIHtcbiAgICBpZiAoIF9pdGVtcy5sZW5ndGggPiAwICkge1xuICAgICAgX3N0YXJ0VHJhbnNpdGlvblRpbWVyKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIF93YWl0aW5nVG9TdGFydCA9IHRydWU7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gc3RvcCgpIHtcbiAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcbiAgICBfc3RvcFRyYW5zaXRpb25UaW1lcigpO1xuICB9XG5cbiAgZnVuY3Rpb24gdXBkYXRlKCBpdGVtcyApIHtcbiAgICBfaXRlbXMgPSBpdGVtcztcbiAgICBfd2FpdGluZ0ZvclVwZGF0ZSA9IHRydWU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGluaXQ6IGluaXQsXG4gICAgcmVzZXQ6IHJlc2V0LFxuICAgIHN0YXJ0OiBzdGFydCxcbiAgICBzdG9wOiBzdG9wLFxuICAgIHVwZGF0ZTogdXBkYXRlXG4gIH07XG5cbn07XG5cbi8qIGdsb2JhbCAkICovXG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MgPSBSaXNlVmlzaW9uLlJTUyB8fCB7fTtcblxuUmlzZVZpc2lvbi5SU1MuVHJhbnNpdGlvblZlcnRpY2FsU2Nyb2xsID0gZnVuY3Rpb24oIHBhcmFtcywgY29udGVudCApIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9pdGVtcyA9IFtdLFxuICAgIF93YWl0aW5nRm9yVXBkYXRlID0gZmFsc2UsXG4gICAgX3dhaXRpbmdUb1N0YXJ0ID0gZmFsc2UsXG4gICAgX3B1ZFRpbWVySUQgPSBudWxsO1xuXG4gIC8qXG4gICAqICBQcml2YXRlIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIF9jbGVhclBhZ2UoKSB7XG4gICAgJCggXCIucGFnZVwiICkuZW1wdHkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRTY3JvbGxFbCgpIHtcbiAgICB2YXIgJHNjcm9sbENvbnRhaW5lciA9ICQoIFwiI2NvbnRhaW5lclwiICk7XG5cbiAgICBpZiAoIHR5cGVvZiAkc2Nyb2xsQ29udGFpbmVyLmRhdGEoIFwicGx1Z2luX2F1dG9TY3JvbGxcIiApICE9PSBcInVuZGVmaW5lZFwiICkge1xuICAgICAgcmV0dXJuICRzY3JvbGxDb250YWluZXIuZGF0YSggXCJwbHVnaW5fYXV0b1Njcm9sbFwiICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBmdW5jdGlvbiBfcmVtb3ZlQXV0b3Njcm9sbCgpIHtcbiAgICB2YXIgJHNjcm9sbENvbnRhaW5lciA9IF9nZXRTY3JvbGxFbCgpO1xuXG4gICAgaWYgKCAkc2Nyb2xsQ29udGFpbmVyICkge1xuICAgICAgLy8gcmVtb3ZlIHRoZSBcImRvbmVcIiBldmVudCBoYW5kbGVyIGJlZm9yZSBkZXN0cm95aW5nXG4gICAgICAkKCBcIiNjb250YWluZXJcIiApLmF1dG9TY3JvbGwoKS5vZmYoIFwiZG9uZVwiLCBfb25TY3JvbGxEb25lICk7XG4gICAgICAvLyBkZXN0cm95IHRoZSBhdXRvIHNjcm9sbCBpbnN0YW5jZVxuICAgICAgJHNjcm9sbENvbnRhaW5lci5kZXN0cm95KCk7XG5cbiAgICAgIC8vIGVuc3VyZSBwYWdlIHZpc2liaWxpdHkgaXMgYmFjayBvbiBmcm9tIHBvc3NpYmxlIHByZXZpb3VzIGZhZGUgb3V0IChzY3JvbGwgY29tcGxldGUpXG4gICAgICAkKCBcIi5wYWdlXCIgKS5jc3MoIFwidmlzaWJpbGl0eVwiLCBcImluaGVyaXRcIiApO1xuICAgICAgJCggXCIucGFnZVwiICkuY3NzKCBcIm9wYWNpdHlcIiwgXCIxXCIgKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfc2hvd0l0ZW1zKCkge1xuICAgIHZhciBpO1xuXG4gICAgLy8gc2hvdyBhbGwgdGhlIGl0ZW1zXG4gICAgZm9yICggaSA9IDA7IGkgPCBfaXRlbXMubGVuZ3RoOyBpICs9IDEgKSB7XG4gICAgICBjb250ZW50LnNob3dJdGVtKCBpICk7XG4gICAgfVxuXG4gICAgJCggXCIuaXRlbVwiICkucmVtb3ZlQ2xhc3MoIFwiaGlkZVwiICk7XG4gIH1cblxuICAvLyBJZiB0aGVyZSBpcyBub3QgZW5vdWdoIGNvbnRlbnQgdG8gc2Nyb2xsLCB1c2UgdGhlIFBVRCBGYWlsb3ZlciBzZXR0aW5nIGFzIHRoZSB0cmlnZ2VyXG4gIC8vIGZvciBzZW5kaW5nIFwiZG9uZVwiLlxuICBmdW5jdGlvbiBfc3RhcnRQVURUaW1lcigpIHtcbiAgICB2YXIgZGVsYXk7XG5cbiAgICBpZiAoICggcGFyYW1zLnRyYW5zaXRpb24ucHVkID09PSB1bmRlZmluZWQgKSB8fCAoIHBhcmFtcy50cmFuc2l0aW9uLnB1ZCA8IDEgKSApIHtcbiAgICAgIGRlbGF5ID0gMTAwMDA7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGF5ID0gcGFyYW1zLnRyYW5zaXRpb24ucHVkICogMTAwMDtcbiAgICB9XG5cbiAgICBpZiAoICFfcHVkVGltZXJJRCApIHtcbiAgICAgIF9wdWRUaW1lcklEID0gc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgX3B1ZFRpbWVySUQgPSBudWxsO1xuICAgICAgICBfb25TY3JvbGxEb25lKCk7XG5cbiAgICAgIH0sIGRlbGF5ICk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gX29uU2Nyb2xsRG9uZSgpIHtcbiAgICBpZiAoIF93YWl0aW5nRm9yVXBkYXRlICkge1xuICAgICAgX3dhaXRpbmdGb3JVcGRhdGUgPSBmYWxzZTtcblxuICAgICAgX3JlbW92ZUF1dG9zY3JvbGwoKTtcblxuICAgICAgY29udGVudC5sb2FkSW1hZ2VzKCBmdW5jdGlvbigpIHtcbiAgICAgICAgX2NsZWFyUGFnZSgpO1xuICAgICAgICBfc2hvd0l0ZW1zKCk7XG4gICAgICAgIF9hcHBseUF1dG9TY3JvbGwoKTtcblxuICAgICAgICBSaXNlVmlzaW9uLlJTUy5vbkNvbnRlbnREb25lKCk7XG4gICAgICB9ICk7XG5cbiAgICB9IGVsc2Uge1xuICAgICAgUmlzZVZpc2lvbi5SU1Mub25Db250ZW50RG9uZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9hcHBseUF1dG9TY3JvbGwoKSB7XG4gICAgdmFyICRzY3JvbGxDb250YWluZXIgPSAkKCBcIiNjb250YWluZXJcIiApO1xuXG4gICAgLy8gYXBwbHkgYXV0byBzY3JvbGxcbiAgICAkc2Nyb2xsQ29udGFpbmVyLmF1dG9TY3JvbGwoIHtcbiAgICAgIFwiYnlcIjogKCBwYXJhbXMudHJhbnNpdGlvbi50eXBlID09PSBcInNjcm9sbFwiICkgPyBcImNvbnRpbnVvdXNcIiA6IFwicGFnZVwiLFxuICAgICAgXCJzcGVlZFwiOiBwYXJhbXMudHJhbnNpdGlvbi5zcGVlZCxcbiAgICAgIFwiZHVyYXRpb25cIjogcGFyYW1zLnRyYW5zaXRpb24uZHVyYXRpb24sXG4gICAgICBcInBhdXNlXCI6IHBhcmFtcy50cmFuc2l0aW9uLnJlc3VtZVxuICAgIH0gKS5vbiggXCJkb25lXCIsIF9vblNjcm9sbERvbmUgKTtcbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gaW5pdCggaXRlbXMgKSB7XG4gICAgX2l0ZW1zID0gaXRlbXM7XG5cbiAgICBfc2hvd0l0ZW1zKCk7XG4gICAgX2FwcGx5QXV0b1Njcm9sbCgpO1xuXG4gICAgaWYgKCBfd2FpdGluZ1RvU3RhcnQgKSB7XG4gICAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcbiAgICAgIHN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgX3JlbW92ZUF1dG9zY3JvbGwoKTtcbiAgICBfY2xlYXJQYWdlKCk7XG5cbiAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcbiAgICBfaXRlbXMgPSBbXTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHN0YXJ0KCkge1xuICAgIHZhciAkc2Nyb2xsID0gX2dldFNjcm9sbEVsKCk7XG5cbiAgICBpZiAoIF9pdGVtcy5sZW5ndGggPiAwICkge1xuICAgICAgaWYgKCAkc2Nyb2xsICYmICRzY3JvbGwuY2FuU2Nyb2xsKCkgKSB7XG4gICAgICAgICRzY3JvbGwucGxheSgpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgX3N0YXJ0UFVEVGltZXIoKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgX3dhaXRpbmdUb1N0YXJ0ID0gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIHZhciAkc2Nyb2xsID0gX2dldFNjcm9sbEVsKCk7XG5cbiAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcblxuICAgIGlmICggJHNjcm9sbCAmJiAkc2Nyb2xsLmNhblNjcm9sbCgpICkge1xuICAgICAgJHNjcm9sbC5wYXVzZSgpO1xuICAgIH1cblxuICAgIC8vIENsZWFyIHRoZSBQVUQgdGltZXIgaWYgdGhlIHBsYXlsaXN0IGl0ZW0gaXMgbm90IHNldCB0byBQVUQuXG4gICAgaWYgKCBfcHVkVGltZXJJRCApIHtcbiAgICAgIGNsZWFyVGltZW91dCggX3B1ZFRpbWVySUQgKTtcbiAgICAgIF9wdWRUaW1lcklEID0gbnVsbDtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiB1cGRhdGUoIGl0ZW1zICkge1xuICAgIF9pdGVtcyA9IGl0ZW1zO1xuICAgIF93YWl0aW5nRm9yVXBkYXRlID0gdHJ1ZTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaW5pdDogaW5pdCxcbiAgICByZXNldDogcmVzZXQsXG4gICAgc3RhcnQ6IHN0YXJ0LFxuICAgIHN0b3A6IHN0b3AsXG4gICAgdXBkYXRlOiB1cGRhdGVcbiAgfTtcblxufTtcblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUyA9IFJpc2VWaXNpb24uUlNTIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUy5Ib3Jpem9udGFsU2Nyb2xsID0gZnVuY3Rpb24oIHBhcmFtcywgY29udGVudCApIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9pdGVtcyA9IFtdLFxuICAgIF93YWl0aW5nRm9yVXBkYXRlID0gZmFsc2UsXG4gICAgX3dhaXRpbmdUb1N0YXJ0ID0gZmFsc2UsXG4gICAgX3Njcm9sbGVyUmVhZHkgPSBmYWxzZSxcbiAgICBfc2Nyb2xsZXIgPSBudWxsO1xuXG4gIC8qXG4gICAqICBQcml2YXRlIE1ldGhvZHNcbiAgICovXG5cbiAgZnVuY3Rpb24gX2luaXRTY3JvbGxlcigpIHtcbiAgICB2YXIgc2Nyb2xsZXJFbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvciggXCIjc2Nyb2xsZXJcIiApO1xuXG4gICAgX3Njcm9sbGVyID0gbmV3IFJpc2VWaXNpb24uQ29tbW9uLlNjcm9sbGVyKCBwYXJhbXMgKTtcblxuICAgIHNjcm9sbGVyRWxlbS5hZGRFdmVudExpc3RlbmVyKCBcInNjcm9sbGVyLW92ZXJzaXplZC1jYW52YXNcIiwgZnVuY3Rpb24oKSB7XG5cbiAgICAgIFJpc2VWaXNpb24uUlNTLmxvZ0V2ZW50KCB7XG4gICAgICAgIFwiZXZlbnRcIjogXCJlcnJvclwiLFxuICAgICAgICBcImV2ZW50X2RldGFpbHNcIjogXCJjYW52YXMgd2lkdGggaXMgb3ZlciB0aGUgbWF4IHNpemVcIixcbiAgICAgICAgXCJmZWVkX3VybFwiOiBwYXJhbXMudXJsXG4gICAgICB9ICk7XG5cbiAgICB9ICk7XG5cbiAgICBzY3JvbGxlckVsZW0uYWRkRXZlbnRMaXN0ZW5lciggXCJyZWFkeVwiLCBfb25TY3JvbGxlclJlYWR5ICk7XG4gICAgc2Nyb2xsZXJFbGVtLmFkZEV2ZW50TGlzdGVuZXIoIFwiZG9uZVwiLCBfb25TY3JvbGxlckRvbmUgKTtcblxuICAgIF9zY3JvbGxlci5pbml0KCBfZ2V0SXRlbXMoKSApO1xuICB9XG5cbiAgZnVuY3Rpb24gX2dldEl0ZW1zKCkge1xuICAgIHZhciB0aXRsZSA9IFwiXCIsXG4gICAgICBhdXRob3IgPSBcIlwiLFxuICAgICAgZGF0ZSA9IFwiXCIsXG4gICAgICBzdG9yeSA9IFwiXCIsXG4gICAgICBpdGVtID0gbnVsbCxcbiAgICAgIGl0ZW1zID0gW10sXG4gICAgICBzaG93U2VwYXJhdG9yID0gcGFyYW1zLnNlcGFyYXRvciAmJiBwYXJhbXMuc2VwYXJhdG9yLnNob3csXG4gICAgICBpO1xuXG4gICAgZm9yICggaSA9IDA7IGkgPCBfaXRlbXMubGVuZ3RoOyBpKysgKSB7XG4gICAgICB0aXRsZSA9IGNvbnRlbnQuZ2V0VGl0bGUoIF9pdGVtc1sgaSBdICk7XG4gICAgICBhdXRob3IgPSBjb250ZW50LmdldEF1dGhvciggX2l0ZW1zWyBpIF0gKTtcbiAgICAgIGRhdGUgPSBjb250ZW50LmdldERhdGUoIF9pdGVtc1sgaSBdICk7XG4gICAgICBzdG9yeSA9IGNvbnRlbnQuZ2V0U3RvcnkoIF9pdGVtc1sgaSBdICk7XG5cbiAgICAgIC8vIFRpdGxlXG4gICAgICBpZiAoIHRpdGxlICYmICggKCB0eXBlb2YgcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd1RpdGxlID09PSBcInVuZGVmaW5lZFwiICkgfHwgcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd1RpdGxlICkgKSB7XG4gICAgICAgIGl0ZW0gPSB7fTtcbiAgICAgICAgaXRlbS50ZXh0ID0gdGl0bGU7XG4gICAgICAgIGl0ZW0uZm9udFN0eWxlID0gcGFyYW1zLmhlYWRsaW5lLmZvbnRTdHlsZTtcbiAgICAgICAgaXRlbXMucHVzaCggaXRlbSApO1xuICAgICAgfVxuXG4gICAgICAvLyBBdXRob3JcbiAgICAgIGlmICggYXV0aG9yICYmICggKCB0eXBlb2YgcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd0F1dGhvciA9PT0gXCJ1bmRlZmluZWRcIiApIHx8IHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dBdXRob3IgKSApIHtcbiAgICAgICAgaXRlbSA9IHt9O1xuICAgICAgICBpdGVtLnRleHQgPSBhdXRob3I7XG4gICAgICAgIGl0ZW0uZm9udFN0eWxlID0gcGFyYW1zLmF1dGhvci5mb250U3R5bGU7XG4gICAgICAgIGl0ZW1zLnB1c2goIGl0ZW0gKTtcbiAgICAgIH1cblxuICAgICAgLy8gRGF0ZVxuICAgICAgaWYgKCBkYXRlICYmICggKCB0eXBlb2YgcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd1RpbWVzdGFtcCA9PT0gXCJ1bmRlZmluZWRcIiApIHx8IHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dUaW1lc3RhbXAgKSApIHtcbiAgICAgICAgaXRlbSA9IHt9O1xuICAgICAgICBpdGVtLnRleHQgPSBkYXRlO1xuICAgICAgICBpdGVtLmZvbnRTdHlsZSA9IHBhcmFtcy50aW1lc3RhbXAuZm9udFN0eWxlO1xuICAgICAgICBpdGVtcy5wdXNoKCBpdGVtICk7XG4gICAgICB9XG5cbiAgICAgIC8vIFN0b3J5XG4gICAgICBpZiAoIHN0b3J5ICkge1xuICAgICAgICBpdGVtID0ge307XG4gICAgICAgIGl0ZW0udGV4dCA9IHN0b3J5O1xuICAgICAgICBpdGVtLmZvbnRTdHlsZSA9IHBhcmFtcy5zdG9yeS5mb250U3R5bGU7XG4gICAgICAgIGl0ZW1zLnB1c2goIGl0ZW0gKTtcbiAgICAgIH1cblxuICAgICAgaWYgKCBzaG93U2VwYXJhdG9yICkge1xuICAgICAgICBpdGVtID0ge307XG4gICAgICAgIGl0ZW0uc2VwYXJhdG9yID0gdHJ1ZTtcbiAgICAgICAgaXRlbS5zaXplID0gcGFyYW1zLnNlcGFyYXRvci5zaXplO1xuICAgICAgICBpdGVtLmNvbG9yID0gcGFyYW1zLnNlcGFyYXRvci5jb2xvcjtcbiAgICAgICAgaXRlbXMucHVzaCggaXRlbSApO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBpdGVtcztcbiAgfVxuXG4gIGZ1bmN0aW9uIF9vblNjcm9sbGVyUmVhZHkoKSB7XG4gICAgX3Njcm9sbGVyUmVhZHkgPSB0cnVlO1xuICAgIHN0YXJ0KCk7XG4gIH1cblxuICBmdW5jdGlvbiBfb25TY3JvbGxlckRvbmUoKSB7XG4gICAgaWYgKCBfd2FpdGluZ0ZvclVwZGF0ZSApIHtcbiAgICAgIF93YWl0aW5nRm9yVXBkYXRlID0gZmFsc2U7XG5cbiAgICAgIC8vIFJlZnJlc2ggc2Nyb2xsZXIuXG4gICAgICBfc2Nyb2xsZXIucmVmcmVzaCggX2dldEl0ZW1zKCkgKTtcbiAgICB9XG5cbiAgICBSaXNlVmlzaW9uLlJTUy5vbkNvbnRlbnREb25lKCk7XG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoIGl0ZW1zICkge1xuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBcImNvbnRhaW5lclwiICkuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gICAgX2l0ZW1zID0gaXRlbXM7XG4gICAgX2luaXRTY3JvbGxlcigpO1xuXG4gICAgaWYgKCBfd2FpdGluZ1RvU3RhcnQgKSB7XG4gICAgICBfd2FpdGluZ1RvU3RhcnQgPSBmYWxzZTtcbiAgICAgIHN0YXJ0KCk7XG4gICAgfVxuICB9XG5cbiAgZnVuY3Rpb24gcmVzZXQoKSB7XG4gICAgX3dhaXRpbmdUb1N0YXJ0ID0gZmFsc2U7XG4gICAgX2l0ZW1zID0gW107XG4gIH1cblxuICBmdW5jdGlvbiBzdGFydCgpIHtcbiAgICBpZiAoIF9zY3JvbGxlciAmJiBfc2Nyb2xsZXJSZWFkeSAmJiAoIF9pdGVtcy5sZW5ndGggPiAwICkgKSB7XG4gICAgICBfc2Nyb2xsZXIucGxheSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBfd2FpdGluZ1RvU3RhcnQgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHN0b3AoKSB7XG4gICAgX3dhaXRpbmdUb1N0YXJ0ID0gZmFsc2U7XG5cbiAgICBpZiAoIF9zY3JvbGxlciApIHtcbiAgICAgIF9zY3JvbGxlci5wYXVzZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZSggaXRlbXMgKSB7XG4gICAgX2l0ZW1zID0gaXRlbXM7XG4gICAgX3dhaXRpbmdGb3JVcGRhdGUgPSB0cnVlO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbml0OiBpbml0LFxuICAgIHJlc2V0OiByZXNldCxcbiAgICBzdGFydDogc3RhcnQsXG4gICAgc3RvcDogc3RvcCxcbiAgICB1cGRhdGU6IHVwZGF0ZVxuICB9O1xufTtcblxuLyogZ2xvYmFsIF8sICQgKi9cblxudmFyIFJpc2VWaXNpb24gPSBSaXNlVmlzaW9uIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUyA9IFJpc2VWaXNpb24uUlNTIHx8IHt9O1xuXG5SaXNlVmlzaW9uLlJTUy5Db250ZW50ID0gZnVuY3Rpb24oIHByZWZzLCBwYXJhbXMgKSB7XG5cbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIF9pdGVtcyA9IFtdLFxuICAgIF91dGlscyA9IFJpc2VWaXNpb24uUlNTLlV0aWxzLFxuICAgIF9pbWFnZXMgPSBSaXNlVmlzaW9uLlJTUy5JbWFnZXMsXG4gICAgX3RyYW5zaXRpb24gPSBudWxsLFxuICAgIF9pbWFnZVR5cGVzID0gWyBcImltYWdlL2JtcFwiLCBcImltYWdlL2dpZlwiLCBcImltYWdlL2pwZWdcIiwgXCJpbWFnZS9qcGdcIiwgXCJpbWFnZS9wbmdcIiwgXCJpbWFnZS90aWZmXCIgXTtcblxuICAvKlxuICAgKiAgUHJpdmF0ZSBNZXRob2RzXG4gICAqL1xuICBmdW5jdGlvbiBfZ2V0SXRlbUhlaWdodCgpIHtcbiAgICAvLyBhY2NvdW50IGZvciBub3QgZW5vdWdoIGl0ZW1zIHRvIGFjdHVhbGx5IHNob3cgY29tcGFyZWQgdG8gc2V0dGluZyB2YWx1ZVxuICAgIHZhciBpdGVtc1RvU2hvdyA9ICggX2l0ZW1zLmxlbmd0aCA8PSBwYXJhbXMuaXRlbXNUb1Nob3cgKSA/IF9pdGVtcy5sZW5ndGggOiBwYXJhbXMuaXRlbXNUb1Nob3c7XG5cbiAgICBpZiAoIHBhcmFtcy5zZXBhcmF0b3IgJiYgcGFyYW1zLnNlcGFyYXRvci5zaG93ICkge1xuICAgICAgcmV0dXJuIHBhcmFtcy5oZWlnaHQgLyBpdGVtc1RvU2hvdyAtIHBhcmFtcy5zZXBhcmF0b3Iuc2l6ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHBhcmFtcy5oZWlnaHQgLyBpdGVtc1RvU2hvdztcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBfZ2V0SW1hZ2VVcmwoIGl0ZW0gKSB7XG4gICAgdmFyIGltYWdlVXJsID0gbnVsbDtcblxuICAgIGlmICggXy5oYXMoIGl0ZW0sIFwiZW5jbG9zdXJlc1wiICkgJiYgaXRlbS5lbmNsb3N1cmVzWyAwIF0gJiYgKCBfLmNvbnRhaW5zKCBfaW1hZ2VUeXBlcywgaXRlbS5lbmNsb3N1cmVzWyAwIF0udHlwZSApICkgKSB7XG4gICAgICBpbWFnZVVybCA9IGl0ZW0uZW5jbG9zdXJlc1sgMCBdLnVybDtcbiAgICB9IGVsc2UgaWYgKCBpdGVtLmltYWdlICYmIGl0ZW0uaW1hZ2UudXJsICkge1xuICAgICAgaW1hZ2VVcmwgPSBpdGVtLmltYWdlLnVybDtcbiAgICB9XG5cbiAgICByZXR1cm4gaW1hZ2VVcmw7XG4gIH1cblxuICBmdW5jdGlvbiBfZ2V0SW1hZ2VVcmxzKCkge1xuICAgIHZhciB1cmxzID0gW10sXG4gICAgICBpO1xuXG4gICAgZm9yICggaSA9IDA7IGkgPCBfaXRlbXMubGVuZ3RoOyBpICs9IDEgKSB7XG4gICAgICB1cmxzLnB1c2goIF9nZXRJbWFnZVVybCggX2l0ZW1zWyBpIF0gKSApO1xuICAgIH1cblxuICAgIHJldHVybiB1cmxzO1xuICB9XG5cbiAgZnVuY3Rpb24gX2dldEltYWdlRGltZW5zaW9ucyggJGltYWdlLCBpdGVtICkge1xuICAgIHZhciBkaW1lbnNpb25zID0gbnVsbCxcbiAgICAgIG1hcmdpbldpZHRoID0gcGFyc2VJbnQoICRpbWFnZS5jc3MoIFwibWFyZ2luLWxlZnRcIiApLCAxMCApICsgcGFyc2VJbnQoICRpbWFnZS5jc3MoIFwibWFyZ2luLXJpZ2h0XCIgKSwgMTAgKSxcbiAgICAgIG1hcmdpbkhlaWdodCA9IHBhcnNlSW50KCAkaW1hZ2UuY3NzKCBcIm1hcmdpbi10b3BcIiApLCAxMCApICsgcGFyc2VJbnQoICRpbWFnZS5jc3MoIFwibWFyZ2luLWJvdHRvbVwiICksIDEwICksXG4gICAgICByYXRpb1gsXG4gICAgICByYXRpb1ksXG4gICAgICBzY2FsZTtcblxuICAgIHN3aXRjaCAoIHBhcmFtcy5sYXlvdXQgKSB7XG4gICAgY2FzZSBcImxheW91dC00eDFcIjpcbiAgICAgIGRpbWVuc2lvbnMgPSB7fTtcbiAgICAgIGRpbWVuc2lvbnMud2lkdGggPSBwYXJhbXMud2lkdGggKiAwLjMzO1xuICAgICAgZGltZW5zaW9ucy5oZWlnaHQgPSAoIHBhcmFtcy5oZWlnaHQgLyBwYXJhbXMuaXRlbXNUb1Nob3cgKSAtIG1hcmdpbkhlaWdodDtcblxuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlIFwibGF5b3V0LTJ4MVwiOlxuICAgICAgZGltZW5zaW9ucyA9IHt9O1xuXG4gICAgICBpZiAoICQoIGl0ZW0gKS5maW5kKCBcIi5zdG9yeVwiICkubGVuZ3RoID09PSAwICkge1xuICAgICAgICBkaW1lbnNpb25zLndpZHRoID0gcGFyYW1zLndpZHRoIC0gbWFyZ2luV2lkdGg7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaW1lbnNpb25zLndpZHRoID0gcGFyYW1zLndpZHRoICogMC41O1xuICAgICAgfVxuXG4gICAgICBkaW1lbnNpb25zLmhlaWdodCA9ICggcGFyYW1zLmhlaWdodCAvIHBhcmFtcy5pdGVtc1RvU2hvdyApIC0gJCggaXRlbSApLmZpbmQoIFwiLnRleHRXcmFwcGVyXCIgKS5vdXRlckhlaWdodCggdHJ1ZSApIC0gbWFyZ2luSGVpZ2h0O1xuXG4gICAgICBicmVhaztcblxuICAgIGNhc2UgXCJsYXlvdXQtMTZ4OVwiOlxuICAgICAgZGltZW5zaW9ucyA9IHt9O1xuICAgICAgZGltZW5zaW9ucy53aWR0aCA9IHBhcmFtcy53aWR0aCAtIG1hcmdpbldpZHRoO1xuICAgICAgZGltZW5zaW9ucy5oZWlnaHQgPSAoIHBhcmFtcy5oZWlnaHQgLyBwYXJhbXMuaXRlbXNUb1Nob3cgKSAtIG1hcmdpbkhlaWdodDtcblxuICAgICAgYnJlYWs7XG4gICAgY2FzZSBcImxheW91dC0xeDJcIjpcbiAgICAgIGRpbWVuc2lvbnMgPSB7fTtcbiAgICAgIGRpbWVuc2lvbnMud2lkdGggPSBwYXJhbXMud2lkdGggLSBtYXJnaW5XaWR0aDtcbiAgICAgIGRpbWVuc2lvbnMuaGVpZ2h0ID0gKCAoIHBhcmFtcy5oZWlnaHQgLyBwYXJhbXMuaXRlbXNUb1Nob3cgKSAtIG1hcmdpbkhlaWdodCApIC8gMjtcbiAgICAgIGJyZWFrO1xuICAgIH1cblxuICAgIGlmICggZGltZW5zaW9ucyApIHtcbiAgICAgIHJhdGlvWCA9IGRpbWVuc2lvbnMud2lkdGggLyBwYXJzZUludCggJGltYWdlLndpZHRoKCkgKTtcbiAgICAgIHJhdGlvWSA9IGRpbWVuc2lvbnMuaGVpZ2h0IC8gcGFyc2VJbnQoICRpbWFnZS5oZWlnaHQoKSApO1xuICAgICAgc2NhbGUgPSByYXRpb1ggPCByYXRpb1kgPyByYXRpb1ggOiByYXRpb1k7XG5cbiAgICAgIGRpbWVuc2lvbnMud2lkdGggPSBwYXJzZUludCggcGFyc2VJbnQoICRpbWFnZS53aWR0aCgpICkgKiBzY2FsZSApO1xuICAgICAgZGltZW5zaW9ucy5oZWlnaHQgPSBwYXJzZUludCggcGFyc2VJbnQoICRpbWFnZS5oZWlnaHQoKSApICogc2NhbGUgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZGltZW5zaW9ucztcbiAgfVxuXG4gIGZ1bmN0aW9uIF9nZXRUZW1wbGF0ZSggaXRlbSwgaW5kZXggKSB7XG4gICAgdmFyIHRpdGxlID0gZ2V0VGl0bGUoIGl0ZW0gKSxcbiAgICAgIHN0b3J5ID0gZ2V0U3RvcnkoIGl0ZW0gKSxcbiAgICAgIGF1dGhvciA9IGdldEF1dGhvciggaXRlbSApLFxuICAgICAgaW1hZ2VVcmwgPSBfZ2V0SW1hZ2VVcmwoIGl0ZW0gKSxcbiAgICAgIGRhdGUgPSBnZXREYXRlKCBpdGVtICksXG4gICAgICB0ZW1wbGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIFwiI2xheW91dFwiICkuY29udGVudCxcbiAgICAgICRjb250ZW50ID0gJCggdGVtcGxhdGUuY2xvbmVOb2RlKCB0cnVlICkgKSxcbiAgICAgIHJlbW92ZVNlcGFyYXRvciA9IGZhbHNlLFxuICAgICAgJHN0b3J5LFxuICAgICAgY2xvbmUsXG4gICAgICBpbWFnZTtcblxuICAgIC8vIEhlYWRsaW5lXG4gICAgaWYgKCAhaXRlbS50aXRsZSB8fCAoICggdHlwZW9mIHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dUaXRsZSAhPT0gXCJ1bmRlZmluZWRcIiApICYmXG4gICAgICAhcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd1RpdGxlICkgKSB7XG4gICAgICAkY29udGVudC5maW5kKCBcIi5oZWFkbGluZVwiICkucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgICRjb250ZW50LmZpbmQoIFwiLmhlYWRsaW5lXCIgKS5jc3MoIFwidGV4dEFsaWduXCIsIHBhcmFtcy5oZWFkbGluZS5mb250U3R5bGUuYWxpZ24gKTtcbiAgICAgICRjb250ZW50LmZpbmQoIFwiLmhlYWRsaW5lIGFcIiApLmh0bWwoIHRpdGxlICkudGV4dCgpO1xuICAgIH1cblxuICAgIC8vIFRpbWVzdGFtcFxuICAgIGlmICggIWRhdGUgfHwgKCAoIHR5cGVvZiBwYXJhbXMuZGF0YVNlbGVjdGlvbi5zaG93VGltZXN0YW1wICE9PSBcInVuZGVmaW5lZFwiICkgJiZcbiAgICAgICFwYXJhbXMuZGF0YVNlbGVjdGlvbi5zaG93VGltZXN0YW1wICkgKSB7XG4gICAgICByZW1vdmVTZXBhcmF0b3IgPSB0cnVlO1xuICAgICAgJGNvbnRlbnQuZmluZCggXCIudGltZXN0YW1wXCIgKS5yZW1vdmUoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKCBwYXJhbXMudGltZXN0YW1wICkge1xuICAgICAgICAkY29udGVudC5maW5kKCBcIi50aW1lc3RhbXBcIiApLmNzcyggXCJ0ZXh0QWxpZ25cIiwgcGFyYW1zLnRpbWVzdGFtcC5mb250U3R5bGUuYWxpZ24gKTtcbiAgICAgIH1cbiAgICAgICRjb250ZW50LmZpbmQoIFwiLnRpbWVzdGFtcFwiICkudGV4dCggZGF0ZSApO1xuICAgIH1cblxuICAgIC8vIEF1dGhvclxuICAgIGlmICggIWF1dGhvciB8fCAoICggdHlwZW9mIHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dBdXRob3IgIT09IFwidW5kZWZpbmVkXCIgKSAmJlxuICAgICAgIXBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dBdXRob3IgKSApIHtcbiAgICAgIHJlbW92ZVNlcGFyYXRvciA9IHRydWU7XG4gICAgICAkY29udGVudC5maW5kKCBcIi5hdXRob3JcIiApLnJlbW92ZSgpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoIHBhcmFtcy5hdXRob3IgKSB7XG4gICAgICAgICRjb250ZW50LmZpbmQoIFwiLmF1dGhvclwiICkuY3NzKCBcInRleHRBbGlnblwiLCBwYXJhbXMuYXV0aG9yLmZvbnRTdHlsZS5hbGlnbiApO1xuICAgICAgfVxuICAgICAgJGNvbnRlbnQuZmluZCggXCIuYXV0aG9yXCIgKS50ZXh0KCBhdXRob3IgKTtcbiAgICB9XG5cbiAgICBpZiAoIHJlbW92ZVNlcGFyYXRvciApIHtcbiAgICAgICRjb250ZW50LmZpbmQoIFwiLnNlcGFyYXRvclwiICkucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgLy8gSW1hZ2VcbiAgICBpZiAoICFpbWFnZVVybCB8fCAoICggdHlwZW9mIHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNob3dJbWFnZSAhPT0gXCJ1bmRlZmluZWRcIiApICYmXG4gICAgICAhcGFyYW1zLmRhdGFTZWxlY3Rpb24uc2hvd0ltYWdlICkgKSB7XG4gICAgICAkY29udGVudC5maW5kKCBcIi5pbWFnZVwiICkucmVtb3ZlKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGdldCBwcmVsb2FkZWQgaW1hZ2UgcGVydGFpbmluZyB0byB0aGlzIGl0ZW0gYmFzZWQgb24gaW5kZXggdmFsdWVcbiAgICAgIGltYWdlID0gX2ltYWdlcy5nZXRJbWFnZXMoKVsgaW5kZXggXTtcblxuICAgICAgaWYgKCBpbWFnZSApIHtcbiAgICAgICAgJGNvbnRlbnQuZmluZCggXCIuaW1hZ2VcIiApLmF0dHIoIFwic3JjXCIsIGltYWdlVXJsICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgLy8gU3RvcnlcbiAgICBpZiAoICFzdG9yeSApIHtcbiAgICAgICRjb250ZW50LnJlbW92ZSggXCIuc3RvcnlcIiApO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc3RvcnkgPSAkY29udGVudC5maW5kKCBcIi5zdG9yeVwiICk7XG4gICAgICAkc3RvcnkuY3NzKCBcInRleHRBbGlnblwiLCBwYXJhbXMuc3RvcnkuZm9udFN0eWxlLmFsaWduICk7XG4gICAgICAkc3RvcnkuaHRtbCggc3RvcnkgKTtcblxuICAgICAgLy8gYXBwbHkgdGhlIHN0b3J5IGZvbnQgc3R5bGluZyB0byBjaGlsZCBlbGVtZW50cyBhcyB3ZWxsLlxuICAgICAgJHN0b3J5LmZpbmQoIFwicFwiICkuYWRkQ2xhc3MoIFwic3RvcnlfZm9udC1zdHlsZVwiICk7XG4gICAgICAkc3RvcnkuZmluZCggXCJkaXZcIiApLmFkZENsYXNzKCBcInN0b3J5X2ZvbnQtc3R5bGVcIiApO1xuICAgICAgJHN0b3J5LmZpbmQoIFwic3BhblwiICkuYWRkQ2xhc3MoIFwic3RvcnlfZm9udC1zdHlsZVwiICk7XG4gICAgfVxuXG4gICAgY2xvbmUgPSAkKCBkb2N1bWVudC5pbXBvcnROb2RlKCAkY29udGVudFsgMCBdLCB0cnVlICkgKTtcblxuICAgIHJldHVybiBjbG9uZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zZXRJbWFnZURpbWVuc2lvbnMoKSB7XG4gICAgJCggXCIuaXRlbVwiICkuZWFjaCggZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgJGltYWdlID0gJCggdGhpcyApLmZpbmQoIFwiLmltYWdlXCIgKSxcbiAgICAgICAgZGltZW5zaW9ucyA9IG51bGw7XG5cbiAgICAgIGlmICggJGltYWdlICkge1xuICAgICAgICBkaW1lbnNpb25zID0gX2dldEltYWdlRGltZW5zaW9ucyggJGltYWdlLCB0aGlzICk7XG5cbiAgICAgICAgaWYgKCBkaW1lbnNpb25zICkge1xuICAgICAgICAgICRpbWFnZS53aWR0aCggZGltZW5zaW9ucy53aWR0aCApO1xuICAgICAgICAgICRpbWFnZS5oZWlnaHQoIGRpbWVuc2lvbnMuaGVpZ2h0ICk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgIH0gKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIF9zaG93SXRlbSggaW5kZXggKSB7XG4gICAgJCggXCIucGFnZVwiICkuYXBwZW5kKCBfZ2V0VGVtcGxhdGUoIF9pdGVtc1sgaW5kZXggXSwgaW5kZXggKSApO1xuXG4gICAgX3NldEltYWdlRGltZW5zaW9ucygpO1xuXG4gICAgaWYgKCBwYXJhbXMuc2VwYXJhdG9yICYmIHBhcmFtcy5zZXBhcmF0b3Iuc2hvdyApIHtcbiAgICAgICQoIFwiLml0ZW1cIiApLmNzcyggXCJib3JkZXItYm90dG9tXCIsIFwic29saWQgXCIgKyBwYXJhbXMuc2VwYXJhdG9yLnNpemUgKyBcInB4IFwiICsgcGFyYW1zLnNlcGFyYXRvci5jb2xvciApO1xuICAgIH1cblxuICAgICQoIFwiLml0ZW1cIiApLmhlaWdodCggX2dldEl0ZW1IZWlnaHQoKSApO1xuXG4gICAgLy8gMTZ4OSAoaW1hZ2VzIG9ubHkpIGxheW91dCBkb2Vzbid0IG5lZWQgdHJ1bmNhdGluZywgaW1hZ2Ugc2l6aW5nIGhhbmRsZWQgaW4gX3NldEltYWdlRGltZW5zaW9ucygpXG4gICAgaWYgKCBwYXJhbXMubGF5b3V0ICE9PSBcImxheW91dC0xNng5XCIgKSB7XG4gICAgICAvLyB0cnVuY2F0ZSBjb250ZW50XG4gICAgICAkKCBcIi5pdGVtXCIgKS5kb3Rkb3Rkb3QoIHtcbiAgICAgICAgaGVpZ2h0OiBfZ2V0SXRlbUhlaWdodCgpXG4gICAgICB9ICk7XG4gICAgfVxuXG4gIH1cblxuICAvKlxuICAgKiAgUHVibGljIE1ldGhvZHNcbiAgICovXG4gIGZ1bmN0aW9uIGluaXQoIGZlZWQgKSB7XG4gICAgLypqc2hpbnQgdmFsaWR0aGlzOnRydWUgKi9cblxuICAgIF9pdGVtcyA9IGZlZWQuaXRlbXM7XG5cbiAgICBpZiAoICFfdHJhbnNpdGlvbiApIHtcblxuICAgICAgaWYgKCAhcGFyYW1zLnRyYW5zaXRpb24gKSB7XG4gICAgICAgIC8vIGxlZ2FjeSwgYmFja3dhcmRzIGNvbXBhdGlibGVcbiAgICAgICAgcGFyYW1zLnRyYW5zaXRpb24gPSB7XG4gICAgICAgICAgdHlwZTogXCJub25lXCIsXG4gICAgICAgICAgZHVyYXRpb246IDEwLFxuICAgICAgICAgIGRpcmVjdGlvbjogXCJ1cFwiXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICAgIGlmICggcGFyYW1zLnRyYW5zaXRpb24udHlwZSA9PT0gXCJub25lXCIgfHwgcGFyYW1zLnRyYW5zaXRpb24udHlwZSA9PT0gXCJmYWRlXCIgKSB7XG4gICAgICAgIF90cmFuc2l0aW9uID0gbmV3IFJpc2VWaXNpb24uUlNTLlRyYW5zaXRpb25Ob1Njcm9sbCggcGFyYW1zLCB0aGlzICk7XG4gICAgICB9IGVsc2UgaWYgKCBwYXJhbXMudHJhbnNpdGlvbi50eXBlID09PSBcInNjcm9sbFwiICkge1xuICAgICAgICBpZiAoIHBhcmFtcy50cmFuc2l0aW9uLmRpcmVjdGlvbiA9PT0gXCJ1cFwiICkge1xuICAgICAgICAgIF90cmFuc2l0aW9uID0gbmV3IFJpc2VWaXNpb24uUlNTLlRyYW5zaXRpb25WZXJ0aWNhbFNjcm9sbCggcGFyYW1zLCB0aGlzICk7XG4gICAgICAgIH0gZWxzZSBpZiAoIHBhcmFtcy50cmFuc2l0aW9uLmRpcmVjdGlvbiA9PT0gXCJsZWZ0XCIgKSB7XG4gICAgICAgICAgX3RyYW5zaXRpb24gPSBuZXcgUmlzZVZpc2lvbi5SU1MuSG9yaXpvbnRhbFNjcm9sbCggcGFyYW1zLCB0aGlzICk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoIHBhcmFtcy50cmFuc2l0aW9uLnR5cGUgPT09IFwicGFnZVwiICkge1xuICAgICAgICBfdHJhbnNpdGlvbiA9IG5ldyBSaXNlVmlzaW9uLlJTUy5UcmFuc2l0aW9uVmVydGljYWxTY3JvbGwoIHBhcmFtcywgdGhpcyApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxvYWRJbWFnZXMoIGZ1bmN0aW9uKCkge1xuICAgICAgX3RyYW5zaXRpb24uaW5pdCggX2l0ZW1zICk7XG4gICAgfSApO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0QXV0aG9yKCBpdGVtICkge1xuICAgIHZhciBhdXRob3IgPSBudWxsO1xuXG4gICAgaWYgKCBpdGVtLmF1dGhvciApIHtcbiAgICAgIGF1dGhvciA9IGl0ZW0uYXV0aG9yO1xuICAgIH0gZWxzZSBpZiAoIF8uaGFzKCBpdGVtLCBcImRjOmNyZWF0b3JcIiApICkge1xuICAgICAgYXV0aG9yID0gaXRlbVsgXCJkYzpjcmVhdG9yXCIgXVsgXCIjXCIgXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXV0aG9yO1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0RGF0ZSggaXRlbSApIHtcbiAgICB2YXIgcHViZGF0ZSA9IGl0ZW0uZGF0ZSxcbiAgICAgIGZvcm1hdHRlZERhdGUgPSBudWxsLFxuICAgICAgb3B0aW9ucztcblxuICAgIGlmICggcHViZGF0ZSApIHtcbiAgICAgIHB1YmRhdGUgPSBuZXcgRGF0ZSggcHViZGF0ZSApO1xuICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgeWVhcjogXCJudW1lcmljXCIsIG1vbnRoOiBcImxvbmdcIiwgZGF5OiBcIm51bWVyaWNcIlxuICAgICAgfTtcblxuICAgICAgZm9ybWF0dGVkRGF0ZSA9IHB1YmRhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCBcImVuLXVzXCIsIG9wdGlvbnMgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZm9ybWF0dGVkRGF0ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGdldFN0b3J5KCBpdGVtICkge1xuICAgIHZhciBzdG9yeSA9IG51bGw7XG5cbiAgICBpZiAoIF8uaGFzKCBpdGVtLCBcImRlc2NyaXB0aW9uXCIgKSApIHtcblxuICAgICAgaWYgKCBwYXJhbXMuZGF0YVNlbGVjdGlvbi5zaG93RGVzY3JpcHRpb24gPT09IFwiZnVsbFwiICkge1xuXG4gICAgICAgIHN0b3J5ID0gX3V0aWxzLnN0cmlwU2NyaXB0cyggaXRlbS5kZXNjcmlwdGlvbiApO1xuXG4gICAgICB9IGVsc2UgaWYgKCBwYXJhbXMuZGF0YVNlbGVjdGlvbi5zaG93RGVzY3JpcHRpb24gPT09IFwic25pcHBldFwiICYmIHBhcmFtcy5kYXRhU2VsZWN0aW9uLnNuaXBwZXRMZW5ndGggPiAwICkge1xuXG4gICAgICAgIHN0b3J5ID0gX3V0aWxzLnRydW5jYXRlKCAkKCBcIjxkaXYvPlwiICkuaHRtbCggX3V0aWxzLnN0cmlwU2NyaXB0cyggaXRlbS5kZXNjcmlwdGlvbiApICkudGV4dCgpLCBwYXJhbXMuZGF0YVNlbGVjdGlvbi5zbmlwcGV0TGVuZ3RoICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0b3J5O1xuICB9XG5cbiAgZnVuY3Rpb24gZ2V0VGl0bGUoIGl0ZW0gKSB7XG4gICAgdmFyIHRpdGxlID0gbnVsbDtcblxuICAgIGlmICggaXRlbS50aXRsZSApIHtcbiAgICAgIHRpdGxlID0gX3V0aWxzLnN0cmlwU2NyaXB0cyggaXRlbS50aXRsZSApO1xuICAgIH1cblxuICAgIHJldHVybiB0aXRsZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGxvYWRJbWFnZXMoIGNiICkge1xuICAgIC8vIGxvYWQgYWxsIGltYWdlc1xuICAgIF9pbWFnZXMubG9hZCggX2dldEltYWdlVXJscygpLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmICggY2IgJiYgdHlwZW9mIGNiID09PSBcImZ1bmN0aW9uXCIgKSB7XG4gICAgICAgIGNiKCk7XG4gICAgICB9XG4gICAgfSApO1xuICB9XG5cbiAgZnVuY3Rpb24gcGF1c2UoKSB7XG4gICAgaWYgKCBfdHJhbnNpdGlvbiApIHtcbiAgICAgIF90cmFuc2l0aW9uLnN0b3AoKTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIGlmICggX3RyYW5zaXRpb24gKSB7XG4gICAgICBfdHJhbnNpdGlvbi5zdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xuICAgIGlmICggX3RyYW5zaXRpb24gKSB7XG4gICAgICBfdHJhbnNpdGlvbi5zdG9wKCk7XG4gICAgICBfdHJhbnNpdGlvbi5yZXNldCgpO1xuICAgIH1cblxuICAgIF9pdGVtcyA9IFtdO1xuICB9XG5cbiAgZnVuY3Rpb24gc2hvd0l0ZW0oIGluZGV4ICkge1xuICAgIF9zaG93SXRlbSggaW5kZXggKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZSggZmVlZCApIHtcbiAgICBfaXRlbXMgPSBmZWVkLml0ZW1zO1xuXG4gICAgaWYgKCBfdHJhbnNpdGlvbiApIHtcbiAgICAgIF90cmFuc2l0aW9uLnVwZGF0ZSggX2l0ZW1zICk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBpbml0OiBpbml0LFxuICAgIGdldEF1dGhvcjogZ2V0QXV0aG9yLFxuICAgIGdldERhdGU6IGdldERhdGUsXG4gICAgZ2V0U3Rvcnk6IGdldFN0b3J5LFxuICAgIGdldFRpdGxlOiBnZXRUaXRsZSxcbiAgICBsb2FkSW1hZ2VzOiBsb2FkSW1hZ2VzLFxuICAgIHBhdXNlOiBwYXVzZSxcbiAgICBwbGF5OiBwbGF5LFxuICAgIHJlc2V0OiByZXNldCxcbiAgICBzaG93SXRlbTogc2hvd0l0ZW0sXG4gICAgdXBkYXRlOiB1cGRhdGVcbiAgfTtcbn07XG5cbnZhciBSaXNlVmlzaW9uID0gUmlzZVZpc2lvbiB8fCB7fTtcblJpc2VWaXNpb24uQ29tbW9uID0gUmlzZVZpc2lvbi5Db21tb24gfHwge307XG5cblJpc2VWaXNpb24uQ29tbW9uLk1lc3NhZ2UgPSBmdW5jdGlvbiAobWFpbkNvbnRhaW5lciwgbWVzc2FnZUNvbnRhaW5lcikge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgX2FjdGl2ZSA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIF9pbml0KCkge1xuICAgIHRyeSB7XG4gICAgICBtZXNzYWdlQ29udGFpbmVyLnN0eWxlLmhlaWdodCA9IG1haW5Db250YWluZXIuc3R5bGUuaGVpZ2h0O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkNhbid0IGluaXRpYWxpemUgTWVzc2FnZSAtIFwiLCBlLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuXG4gIC8qXG4gICAqICBQdWJsaWMgTWV0aG9kc1xuICAgKi9cbiAgZnVuY3Rpb24gaGlkZSgpIHtcbiAgICBpZiAoX2FjdGl2ZSkge1xuICAgICAgLy8gY2xlYXIgY29udGVudCBvZiBtZXNzYWdlIGNvbnRhaW5lclxuICAgICAgd2hpbGUgKG1lc3NhZ2VDb250YWluZXIuZmlyc3RDaGlsZCkge1xuICAgICAgICBtZXNzYWdlQ29udGFpbmVyLnJlbW92ZUNoaWxkKG1lc3NhZ2VDb250YWluZXIuZmlyc3RDaGlsZCk7XG4gICAgICB9XG5cbiAgICAgIC8vIGhpZGUgbWVzc2FnZSBjb250YWluZXJcbiAgICAgIG1lc3NhZ2VDb250YWluZXIuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuXG4gICAgICAvLyBzaG93IG1haW4gY29udGFpbmVyXG4gICAgICBtYWluQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG5cbiAgICAgIF9hY3RpdmUgPSBmYWxzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBzaG93KG1lc3NhZ2UpIHtcbiAgICB2YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXG4gICAgICBwO1xuXG4gICAgaWYgKCFfYWN0aXZlKSB7XG4gICAgICAvLyBoaWRlIG1haW4gY29udGFpbmVyXG4gICAgICBtYWluQ29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcblxuICAgICAgbWVzc2FnZUNvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuXG4gICAgICAvLyBjcmVhdGUgbWVzc2FnZSBlbGVtZW50XG4gICAgICBwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInBcIik7XG4gICAgICBwLmlubmVySFRNTCA9IG1lc3NhZ2U7XG4gICAgICBwLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsIFwibWVzc2FnZVwiKTtcblxuICAgICAgZnJhZ21lbnQuYXBwZW5kQ2hpbGQocCk7XG4gICAgICBtZXNzYWdlQ29udGFpbmVyLmFwcGVuZENoaWxkKGZyYWdtZW50KTtcblxuICAgICAgX2FjdGl2ZSA9IHRydWU7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIG1lc3NhZ2UgYWxyZWFkeSBiZWluZyBzaG93biwgdXBkYXRlIG1lc3NhZ2UgdGV4dFxuICAgICAgcCA9IG1lc3NhZ2VDb250YWluZXIucXVlcnlTZWxlY3RvcihcIi5tZXNzYWdlXCIpO1xuICAgICAgcC5pbm5lckhUTUwgPSBtZXNzYWdlO1xuICAgIH1cbiAgfVxuXG4gIF9pbml0KCk7XG5cbiAgcmV0dXJuIHtcbiAgICBcImhpZGVcIjogaGlkZSxcbiAgICBcInNob3dcIjogc2hvd1xuICB9O1xufTtcblxuLyogZ2xvYmFsIGdhZGdldHMsIFJpc2VWaXNpb24gKi9cblxuKCBmdW5jdGlvbiggd2luZG93LCBkb2N1bWVudCwgZ2FkZ2V0cyApIHtcbiAgXCJ1c2Ugc3RyaWN0XCI7XG5cbiAgdmFyIHByZWZzID0gbmV3IGdhZGdldHMuUHJlZnMoKSxcbiAgICBpZCA9IHByZWZzLmdldFN0cmluZyggXCJpZFwiICk7XG5cbiAgLy8gRGlzYWJsZSBjb250ZXh0IG1lbnUgKHJpZ2h0IGNsaWNrIG1lbnUpXG4gIHdpbmRvdy5vbmNvbnRleHRtZW51ID0gZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9O1xuXG4gIGRvY3VtZW50LmJvZHkub25tb3VzZWRvd24gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG5cbiAgZnVuY3Rpb24gY29uZmlndXJlKCBuYW1lcywgdmFsdWVzICkge1xuICAgIHZhciBhZGRpdGlvbmFsUGFyYW1zLFxuICAgICAgY29tcGFueUlkID0gXCJcIixcbiAgICAgIGRpc3BsYXlJZCA9IFwiXCI7XG5cbiAgICBpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWVzICkgJiYgbmFtZXMubGVuZ3RoID4gMCAmJiBBcnJheS5pc0FycmF5KCB2YWx1ZXMgKSAmJiB2YWx1ZXMubGVuZ3RoID4gMCApIHtcbiAgICAgIGlmICggbmFtZXNbIDAgXSA9PT0gXCJjb21wYW55SWRcIiApIHtcbiAgICAgICAgY29tcGFueUlkID0gdmFsdWVzWyAwIF07XG4gICAgICB9XG5cbiAgICAgIGlmICggbmFtZXNbIDEgXSA9PT0gXCJkaXNwbGF5SWRcIiApIHtcbiAgICAgICAgaWYgKCB2YWx1ZXNbIDEgXSApIHtcbiAgICAgICAgICBkaXNwbGF5SWQgPSB2YWx1ZXNbIDEgXTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBkaXNwbGF5SWQgPSBcInByZXZpZXdcIjtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBSaXNlVmlzaW9uLkNvbW1vbi5Mb2dnZXJVdGlscy5zZXRJZHMoIGNvbXBhbnlJZCwgZGlzcGxheUlkICk7XG5cbiAgICAgIGlmICggbmFtZXNbIDIgXSA9PT0gXCJhZGRpdGlvbmFsUGFyYW1zXCIgKSB7XG4gICAgICAgIGFkZGl0aW9uYWxQYXJhbXMgPSBKU09OLnBhcnNlKCB2YWx1ZXNbIDIgXSApO1xuXG4gICAgICAgIFJpc2VWaXNpb24uUlNTLnNldEFkZGl0aW9uYWxQYXJhbXMoIGFkZGl0aW9uYWxQYXJhbXMgKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5KCkge1xuICAgIFJpc2VWaXNpb24uUlNTLnBsYXkoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHBhdXNlKCkge1xuICAgIFJpc2VWaXNpb24uUlNTLnBhdXNlKCk7XG4gIH1cblxuICBmdW5jdGlvbiBzdG9wKCkge1xuICAgIFJpc2VWaXNpb24uUlNTLnN0b3AoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHdlYkNvbXBvbmVudHNSZWFkeSgpIHtcbiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJXZWJDb21wb25lbnRzUmVhZHlcIiwgd2ViQ29tcG9uZW50c1JlYWR5ICk7XG5cbiAgICBpZiAoIGlkICYmIGlkICE9PSBcIlwiICkge1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoIFwicnNjbWRfcGxheV9cIiArIGlkLCBwbGF5ICk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlciggXCJyc2NtZF9wYXVzZV9cIiArIGlkLCBwYXVzZSApO1xuICAgICAgZ2FkZ2V0cy5ycGMucmVnaXN0ZXIoIFwicnNjbWRfc3RvcF9cIiArIGlkLCBzdG9wICk7XG4gICAgICBnYWRnZXRzLnJwYy5yZWdpc3RlciggXCJyc3BhcmFtX3NldF9cIiArIGlkLCBjb25maWd1cmUgKTtcbiAgICAgIGdhZGdldHMucnBjLmNhbGwoIFwiXCIsIFwicnNwYXJhbV9nZXRcIiwgbnVsbCwgaWQsIFsgXCJjb21wYW55SWRcIiwgXCJkaXNwbGF5SWRcIiwgXCJhZGRpdGlvbmFsUGFyYW1zXCIgXSApO1xuICAgIH1cbiAgfVxuXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcIldlYkNvbXBvbmVudHNSZWFkeVwiLCB3ZWJDb21wb25lbnRzUmVhZHkgKTtcblxuXG59ICkoIHdpbmRvdywgZG9jdW1lbnQsIGdhZGdldHMgKTtcblxuXG4iXX0=
